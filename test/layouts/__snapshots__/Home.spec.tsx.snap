// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Home should render without error 1`] = `
<HomeWithTheme>
  <ThemeProvider
    theme={
      Object {
        "breakpoints": Object {
          "between": [Function],
          "down": [Function],
          "keys": Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ],
          "only": [Function],
          "up": [Function],
          "values": Object {
            "lg": 1280,
            "md": 960,
            "sm": 600,
            "xl": 1920,
            "xs": 0,
          },
          "width": [Function],
        },
        "direction": "ltr",
        "mixins": Object {
          "gutters": [Function],
          "toolbar": Object {
            "@media (min-width:0px) and (orientation: landscape)": Object {
              "minHeight": 48,
            },
            "@media (min-width:600px)": Object {
              "minHeight": 64,
            },
            "minHeight": 56,
          },
        },
        "overrides": Object {
          "MuiTypography": Object {
            "h1": Object {
              "fontFamily": "Montserrat",
              "fontWeight": 900,
            },
            "h2": Object {
              "fontFamily": "Montserrat",
              "fontWeight": 900,
            },
            "h3": Object {
              "fontFamily": "Montserrat",
              "fontWeight": 900,
            },
            "h4": Object {
              "fontFamily": "Montserrat",
              "fontWeight": 900,
            },
            "h5": Object {
              "fontFamily": "Montserrat",
              "fontWeight": 900,
            },
            "h6": Object {
              "fontFamily": "Montserrat",
              "fontWeight": 900,
            },
            "subtitle1": Object {
              "fontWeight": "bold",
            },
            "subtitle2": Object {
              "fontWeight": "bold",
            },
          },
        },
        "palette": Object {
          "action": Object {
            "activatedOpacity": 0.12,
            "active": "rgba(0, 0, 0, 0.54)",
            "disabled": "rgba(0, 0, 0, 0.26)",
            "disabledBackground": "rgba(0, 0, 0, 0.12)",
            "disabledOpacity": 0.38,
            "focus": "rgba(0, 0, 0, 0.12)",
            "focusOpacity": 0.12,
            "hover": "rgba(0, 0, 0, 0.04)",
            "hoverOpacity": 0.04,
            "selected": "rgba(0, 0, 0, 0.08)",
            "selectedOpacity": 0.08,
          },
          "augmentColor": [Function],
          "background": Object {
            "default": "#FFFFFF",
            "paper": "#FFFFFF",
          },
          "common": Object {
            "black": "#000000",
            "white": "#FFFFFF",
          },
          "contrastThreshold": 3,
          "custom": Object {
            "black60": "rgba(0, 0, 0, 0.60)",
            "black75": "rgba(0, 0, 0, 0.75)",
            "charcoal": "#121516",
            "charcoalDark": "#0E1214",
            "charcoalLight": "#181C1E",
            "greyDark": "#DDE1E4",
            "greyDefault": "#EBEEEF",
            "greyLight": "#F9F9FA",
            "white60": "rgba(255, 255, 255, 0.60)",
            "white75": "rgba(255, 255, 255, 0.75)",
          },
          "divider": "rgba(0, 0, 0, 0.12)",
          "error": Object {
            "contrastText": "#fff",
            "dark": "#d32f2f",
            "light": "#e57373",
            "main": "#f44336",
          },
          "getContrastText": [Function],
          "grey": Object {
            "100": "#f5f5f5",
            "200": "#eeeeee",
            "300": "#e0e0e0",
            "400": "#bdbdbd",
            "50": "#fafafa",
            "500": "#9e9e9e",
            "600": "#757575",
            "700": "#616161",
            "800": "#424242",
            "900": "#212121",
            "A100": "#d5d5d5",
            "A200": "#aaaaaa",
            "A400": "#303030",
            "A700": "#616161",
          },
          "info": Object {
            "contrastText": "#fff",
            "dark": "#1976d2",
            "light": "#64b5f6",
            "main": "#2196f3",
          },
          "primary": Object {
            "contrastText": "#fff",
            "dark": "#A81432",
            "light": "#E15F79",
            "main": "#DB1A3F",
          },
          "secondary": Object {
            "contrastText": "#fff",
            "dark": "#365775",
            "light": "#4FBEFF",
            "main": "#2C92CD",
          },
          "success": Object {
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "#388e3c",
            "light": "#81c784",
            "main": "#4caf50",
          },
          "text": Object {
            "disabled": " rgba(4, 28, 41, 0.75)",
            "divider": "#DDE1E4",
            "hint": " rgba(4, 28, 41, 0.75)",
            "primary": "rgba(4, 28, 41, 1)",
            "secondary": "rgba(4, 28, 41, 0.56)",
          },
          "tonalOffset": 0.2,
          "type": "light",
          "warning": Object {
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "#f57c00",
            "light": "#ffb74d",
            "main": "#ff9800",
          },
        },
        "props": Object {},
        "shadows": Array [
          "none",
          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
        ],
        "shape": Object {
          "borderRadius": 4,
        },
        "spacing": [Function],
        "transitions": Object {
          "create": [Function],
          "duration": Object {
            "complex": 375,
            "enteringScreen": 225,
            "leavingScreen": 195,
            "short": 250,
            "shorter": 200,
            "shortest": 150,
            "standard": 300,
          },
          "easing": Object {
            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
          },
          "getAutoHeightDuration": [Function],
        },
        "typography": Object {
          "body1": Object {
            "fontFamily": "Lato",
            "fontSize": "1rem",
            "fontWeight": 400,
            "lineHeight": 1.5,
          },
          "body2": Object {
            "fontFamily": "Lato",
            "fontSize": "0.875rem",
            "fontWeight": 400,
            "lineHeight": 1.43,
          },
          "button": Object {
            "fontFamily": "Lato",
            "fontSize": "0.875rem",
            "fontWeight": 500,
            "lineHeight": 1.75,
            "textTransform": "uppercase",
          },
          "caption": Object {
            "fontFamily": "Lato",
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "lineHeight": 1.66,
          },
          "fontFamily": "Lato",
          "fontSize": 14,
          "fontWeightBold": 700,
          "fontWeightLight": 300,
          "fontWeightMedium": 500,
          "fontWeightRegular": 400,
          "h1": Object {
            "@media (min-width:1280px)": Object {
              "fontSize": "5.9983rem",
            },
            "@media (min-width:600px)": Object {
              "fontSize": "4.7129rem",
            },
            "@media (min-width:960px)": Object {
              "fontSize": "5.3556rem",
            },
            "fontFamily": "Lato",
            "fontSize": "3.5rem",
            "fontWeight": 300,
            "lineHeight": 1.167,
          },
          "h2": Object {
            "@media (min-width:1280px)": Object {
              "fontSize": "3.75rem",
            },
            "@media (min-width:600px)": Object {
              "fontSize": "2.9167rem",
            },
            "@media (min-width:960px)": Object {
              "fontSize": "3.3333rem",
            },
            "fontFamily": "Lato",
            "fontSize": "2.375rem",
            "fontWeight": 300,
            "lineHeight": 1.2,
          },
          "h3": Object {
            "@media (min-width:1280px)": Object {
              "fontSize": "2.9991rem",
            },
            "@media (min-width:600px)": Object {
              "fontSize": "2.5707rem",
            },
            "@media (min-width:960px)": Object {
              "fontSize": "2.7849rem",
            },
            "fontFamily": "Lato",
            "fontSize": "2rem",
            "fontWeight": 400,
            "lineHeight": 1.167,
          },
          "h4": Object {
            "@media (min-width:1280px)": Object {
              "fontSize": "2.0243rem",
            },
            "@media (min-width:600px)": Object {
              "fontSize": "1.8219rem",
            },
            "@media (min-width:960px)": Object {
              "fontSize": "2.0243rem",
            },
            "fontFamily": "Lato",
            "fontSize": "1.5625rem",
            "fontWeight": 400,
            "lineHeight": 1.235,
          },
          "h5": Object {
            "@media (min-width:1280px)": Object {
              "fontSize": "1.4993rem",
            },
            "@media (min-width:600px)": Object {
              "fontSize": "1.3118rem",
            },
            "@media (min-width:960px)": Object {
              "fontSize": "1.4993rem",
            },
            "fontFamily": "Lato",
            "fontSize": "1.25rem",
            "fontWeight": 400,
            "lineHeight": 1.334,
          },
          "h6": Object {
            "@media (min-width:1280px)": Object {
              "fontSize": "1.25rem",
            },
            "@media (min-width:600px)": Object {
              "fontSize": "1.25rem",
            },
            "@media (min-width:960px)": Object {
              "fontSize": "1.25rem",
            },
            "fontFamily": "Lato",
            "fontSize": "1.125rem",
            "fontWeight": 500,
            "lineHeight": 1.6,
          },
          "htmlFontSize": 16,
          "overline": Object {
            "fontFamily": "Lato",
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "lineHeight": 2.66,
            "textTransform": "uppercase",
          },
          "pxToRem": [Function],
          "round": [Function],
          "subtitle1": Object {
            "fontFamily": "Lato",
            "fontSize": "1rem",
            "fontWeight": 400,
            "lineHeight": 1.75,
          },
          "subtitle2": Object {
            "fontFamily": "Lato",
            "fontSize": "0.875rem",
            "fontWeight": 500,
            "lineHeight": 1.57,
          },
        },
        "zIndex": Object {
          "appBar": 1100,
          "drawer": 1200,
          "mobileStepper": 1000,
          "modal": 1300,
          "snackbar": 1400,
          "speedDial": 1050,
          "tooltip": 1500,
        },
        Symbol(mui.nested): false,
      }
    }
  >
    <Index>
      <Home>
        <div
          className="makeStyles-root-1"
        >
          <WithStyles(ForwardRef(Typography))
            variant="h1"
          >
            <ForwardRef(Typography)
              classes={
                Object {
                  "alignCenter": "MuiTypography-alignCenter",
                  "alignJustify": "MuiTypography-alignJustify",
                  "alignLeft": "MuiTypography-alignLeft",
                  "alignRight": "MuiTypography-alignRight",
                  "body1": "MuiTypography-body1",
                  "body2": "MuiTypography-body2",
                  "button": "MuiTypography-button",
                  "caption": "MuiTypography-caption",
                  "colorError": "MuiTypography-colorError",
                  "colorInherit": "MuiTypography-colorInherit",
                  "colorPrimary": "MuiTypography-colorPrimary",
                  "colorSecondary": "MuiTypography-colorSecondary",
                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                  "displayBlock": "MuiTypography-displayBlock",
                  "displayInline": "MuiTypography-displayInline",
                  "gutterBottom": "MuiTypography-gutterBottom",
                  "h1": "MuiTypography-h1",
                  "h2": "MuiTypography-h2",
                  "h3": "MuiTypography-h3",
                  "h4": "MuiTypography-h4",
                  "h5": "MuiTypography-h5",
                  "h6": "MuiTypography-h6",
                  "noWrap": "MuiTypography-noWrap",
                  "overline": "MuiTypography-overline",
                  "paragraph": "MuiTypography-paragraph",
                  "root": "MuiTypography-root",
                  "srOnly": "MuiTypography-srOnly",
                  "subtitle1": "MuiTypography-subtitle1",
                  "subtitle2": "MuiTypography-subtitle2",
                }
              }
              variant="h1"
            >
              <h1
                className="MuiTypography-root MuiTypography-h1"
              >
                Hello world!
              </h1>
            </ForwardRef(Typography)>
          </WithStyles(ForwardRef(Typography))>
          <div
            style={
              Object {
                "maxWidth": "300px",
              }
            }
          >
            <Button
              color="primary"
              onClick={[Function]}
              startIcon={
                <GitHub
                  color="white"
                  size={18}
                />
              }
              variant="contained"
            >
              <WithStyles(ForwardRef(Button))
                classes={
                  Object {
                    "containedPrimary": "makeStyles-containedPrimary-33",
                    "containedSecondary": "makeStyles-containedSecondary-34",
                    "label": "makeStyles-buttonLabel-32",
                    "root": undefined,
                  }
                }
                color="primary"
                disableElevation={true}
                onClick={[Function]}
                startIcon={
                  <GitHub
                    color="white"
                    size={18}
                  />
                }
                variant="contained"
              >
                <ForwardRef(Button)
                  classes={
                    Object {
                      "colorInherit": "MuiButton-colorInherit",
                      "contained": "MuiButton-contained",
                      "containedPrimary": "MuiButton-containedPrimary makeStyles-containedPrimary-33",
                      "containedSecondary": "MuiButton-containedSecondary makeStyles-containedSecondary-34",
                      "containedSizeLarge": "MuiButton-containedSizeLarge",
                      "containedSizeSmall": "MuiButton-containedSizeSmall",
                      "disableElevation": "MuiButton-disableElevation",
                      "disabled": "Mui-disabled",
                      "endIcon": "MuiButton-endIcon",
                      "focusVisible": "Mui-focusVisible",
                      "fullWidth": "MuiButton-fullWidth",
                      "iconSizeLarge": "MuiButton-iconSizeLarge",
                      "iconSizeMedium": "MuiButton-iconSizeMedium",
                      "iconSizeSmall": "MuiButton-iconSizeSmall",
                      "label": "MuiButton-label makeStyles-buttonLabel-32",
                      "outlined": "MuiButton-outlined",
                      "outlinedPrimary": "MuiButton-outlinedPrimary",
                      "outlinedSecondary": "MuiButton-outlinedSecondary",
                      "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                      "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                      "root": "MuiButton-root",
                      "sizeLarge": "MuiButton-sizeLarge",
                      "sizeSmall": "MuiButton-sizeSmall",
                      "startIcon": "MuiButton-startIcon",
                      "text": "MuiButton-text",
                      "textPrimary": "MuiButton-textPrimary",
                      "textSecondary": "MuiButton-textSecondary",
                      "textSizeLarge": "MuiButton-textSizeLarge",
                      "textSizeSmall": "MuiButton-textSizeSmall",
                    }
                  }
                  color="primary"
                  disableElevation={true}
                  onClick={[Function]}
                  startIcon={
                    <GitHub
                      color="white"
                      size={18}
                    />
                  }
                  variant="contained"
                >
                  <WithStyles(ForwardRef(ButtonBase))
                    className="MuiButton-root MuiButton-contained MuiButton-containedPrimary makeStyles-containedPrimary-33 MuiButton-disableElevation"
                    component="button"
                    disabled={false}
                    focusRipple={true}
                    focusVisibleClassName="Mui-focusVisible"
                    onClick={[Function]}
                    type="button"
                  >
                    <ForwardRef(ButtonBase)
                      className="MuiButton-root MuiButton-contained MuiButton-containedPrimary makeStyles-containedPrimary-33 MuiButton-disableElevation"
                      classes={
                        Object {
                          "disabled": "Mui-disabled",
                          "focusVisible": "Mui-focusVisible",
                          "root": "MuiButtonBase-root",
                        }
                      }
                      component="button"
                      disabled={false}
                      focusRipple={true}
                      focusVisibleClassName="Mui-focusVisible"
                      onClick={[Function]}
                      type="button"
                    >
                      <button
                        className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary makeStyles-containedPrimary-33 MuiButton-disableElevation"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label makeStyles-buttonLabel-32"
                        >
                          <span
                            className="MuiButton-startIcon MuiButton-iconSizeMedium"
                          >
                            <GitHub
                              color="white"
                              size={18}
                            >
                              <svg
                                fill="none"
                                height={18}
                                stroke="white"
                                strokeLinecap="round"
                                strokeLinejoin="round"
                                strokeWidth="2"
                                viewBox="0 0 24 24"
                                width={18}
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"
                                />
                              </svg>
                            </GitHub>
                          </span>
                          Get Started
                        </span>
                        <WithStyles(memo)
                          center={false}
                        >
                          <ForwardRef(TouchRipple)
                            center={false}
                            classes={
                              Object {
                                "child": "MuiTouchRipple-child",
                                "childLeaving": "MuiTouchRipple-childLeaving",
                                "childPulsate": "MuiTouchRipple-childPulsate",
                                "ripple": "MuiTouchRipple-ripple",
                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                "root": "MuiTouchRipple-root",
                              }
                            }
                          >
                            <span
                              className="MuiTouchRipple-root"
                            >
                              <TransitionGroup
                                childFactory={[Function]}
                                component={null}
                                exit={true}
                              />
                            </span>
                          </ForwardRef(TouchRipple)>
                        </WithStyles(memo)>
                      </button>
                    </ForwardRef(ButtonBase)>
                  </WithStyles(ForwardRef(ButtonBase))>
                </ForwardRef(Button)>
              </WithStyles(ForwardRef(Button))>
            </Button>
            <SocialMediaLink
              color="dark"
              href="https://github.com/"
              iconSize="medium"
              variant="github"
            >
              <WithStyles(ForwardRef(IconButton))
                classes={
                  Object {
                    "root": "makeStyles-root-67",
                  }
                }
                component="a"
                href="https://github.com/"
                target="_blank"
              >
                <ForwardRef(IconButton)
                  classes={
                    Object {
                      "colorInherit": "MuiIconButton-colorInherit",
                      "colorPrimary": "MuiIconButton-colorPrimary",
                      "colorSecondary": "MuiIconButton-colorSecondary",
                      "disabled": "Mui-disabled",
                      "edgeEnd": "MuiIconButton-edgeEnd",
                      "edgeStart": "MuiIconButton-edgeStart",
                      "label": "MuiIconButton-label",
                      "root": "MuiIconButton-root makeStyles-root-67",
                      "sizeSmall": "MuiIconButton-sizeSmall",
                    }
                  }
                  component="a"
                  href="https://github.com/"
                  target="_blank"
                >
                  <WithStyles(ForwardRef(ButtonBase))
                    centerRipple={true}
                    className="MuiIconButton-root makeStyles-root-67"
                    component="a"
                    disabled={false}
                    focusRipple={true}
                    href="https://github.com/"
                    target="_blank"
                  >
                    <ForwardRef(ButtonBase)
                      centerRipple={true}
                      className="MuiIconButton-root makeStyles-root-67"
                      classes={
                        Object {
                          "disabled": "Mui-disabled",
                          "focusVisible": "Mui-focusVisible",
                          "root": "MuiButtonBase-root",
                        }
                      }
                      component="a"
                      disabled={false}
                      focusRipple={true}
                      href="https://github.com/"
                      target="_blank"
                    >
                      <a
                        aria-disabled={false}
                        className="MuiButtonBase-root MuiIconButton-root makeStyles-root-67"
                        href="https://github.com/"
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        target="_blank"
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <GitHub
                            color="rgba(4, 28, 41, 0.56)"
                            size={18}
                          >
                            <svg
                              fill="none"
                              height={18}
                              stroke="rgba(4, 28, 41, 0.56)"
                              strokeLinecap="round"
                              strokeLinejoin="round"
                              strokeWidth="2"
                              viewBox="0 0 24 24"
                              width={18}
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"
                              />
                            </svg>
                          </GitHub>
                        </span>
                        <WithStyles(memo)
                          center={true}
                        >
                          <ForwardRef(TouchRipple)
                            center={true}
                            classes={
                              Object {
                                "child": "MuiTouchRipple-child",
                                "childLeaving": "MuiTouchRipple-childLeaving",
                                "childPulsate": "MuiTouchRipple-childPulsate",
                                "ripple": "MuiTouchRipple-ripple",
                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                "root": "MuiTouchRipple-root",
                              }
                            }
                          >
                            <span
                              className="MuiTouchRipple-root"
                            >
                              <TransitionGroup
                                childFactory={[Function]}
                                component={null}
                                exit={true}
                              />
                            </span>
                          </ForwardRef(TouchRipple)>
                        </WithStyles(memo)>
                      </a>
                    </ForwardRef(ButtonBase)>
                  </WithStyles(ForwardRef(ButtonBase))>
                </ForwardRef(IconButton)>
              </WithStyles(ForwardRef(IconButton))>
            </SocialMediaLink>
            <Link
              external={false}
              href="/app"
              variant="default-blue"
            >
              <WithStyles(ForwardRef(Typography))
                className="makeStyles-default-blue-link-81"
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  }
                }
                href="/app"
                variant="body1"
              >
                <ForwardRef(Typography)
                  className="makeStyles-default-blue-link-81"
                  classes={
                    Object {
                      "alignCenter": "MuiTypography-alignCenter",
                      "alignJustify": "MuiTypography-alignJustify",
                      "alignLeft": "MuiTypography-alignLeft",
                      "alignRight": "MuiTypography-alignRight",
                      "body1": "MuiTypography-body1",
                      "body2": "MuiTypography-body2",
                      "button": "MuiTypography-button",
                      "caption": "MuiTypography-caption",
                      "colorError": "MuiTypography-colorError",
                      "colorInherit": "MuiTypography-colorInherit",
                      "colorPrimary": "MuiTypography-colorPrimary",
                      "colorSecondary": "MuiTypography-colorSecondary",
                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                      "displayBlock": "MuiTypography-displayBlock",
                      "displayInline": "MuiTypography-displayInline",
                      "gutterBottom": "MuiTypography-gutterBottom",
                      "h1": "MuiTypography-h1",
                      "h2": "MuiTypography-h2",
                      "h3": "MuiTypography-h3",
                      "h4": "MuiTypography-h4",
                      "h5": "MuiTypography-h5",
                      "h6": "MuiTypography-h6",
                      "noWrap": "MuiTypography-noWrap",
                      "overline": "MuiTypography-overline",
                      "paragraph": "MuiTypography-paragraph",
                      "root": "MuiTypography-root",
                      "srOnly": "MuiTypography-srOnly",
                      "subtitle1": "MuiTypography-subtitle1",
                      "subtitle2": "MuiTypography-subtitle2",
                    }
                  }
                  component={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "render": [Function],
                    }
                  }
                  href="/app"
                  variant="body1"
                >
                  <ForwardRef
                    className="MuiTypography-root makeStyles-default-blue-link-81 MuiTypography-body1"
                    href="/app"
                  >
                    <BaseLink
                      className="MuiTypography-root makeStyles-default-blue-link-81 MuiTypography-body1"
                      href="/app"
                      innerRef={null}
                    >
                      <WithStyles(ForwardRef(Link))
                        className="MuiTypography-root makeStyles-default-blue-link-81 MuiTypography-body1"
                        component={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "propTypes": Object {},
                            "render": [Function],
                          }
                        }
                        href="/app"
                      >
                        <ForwardRef(Link)
                          className="MuiTypography-root makeStyles-default-blue-link-81 MuiTypography-body1"
                          classes={
                            Object {
                              "button": "MuiLink-button",
                              "focusVisible": "Mui-focusVisible",
                              "root": "MuiLink-root",
                              "underlineAlways": "MuiLink-underlineAlways",
                              "underlineHover": "MuiLink-underlineHover",
                              "underlineNone": "MuiLink-underlineNone",
                            }
                          }
                          component={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "propTypes": Object {},
                              "render": [Function],
                            }
                          }
                          href="/app"
                        >
                          <WithStyles(ForwardRef(Typography))
                            className="MuiLink-root MuiLink-underlineHover MuiTypography-root makeStyles-default-blue-link-81 MuiTypography-body1"
                            color="primary"
                            component={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "propTypes": Object {},
                                "render": [Function],
                              }
                            }
                            href="/app"
                            onBlur={[Function]}
                            onFocus={[Function]}
                            variant="inherit"
                          >
                            <ForwardRef(Typography)
                              className="MuiLink-root MuiLink-underlineHover MuiTypography-root makeStyles-default-blue-link-81 MuiTypography-body1"
                              classes={
                                Object {
                                  "alignCenter": "MuiTypography-alignCenter",
                                  "alignJustify": "MuiTypography-alignJustify",
                                  "alignLeft": "MuiTypography-alignLeft",
                                  "alignRight": "MuiTypography-alignRight",
                                  "body1": "MuiTypography-body1",
                                  "body2": "MuiTypography-body2",
                                  "button": "MuiTypography-button",
                                  "caption": "MuiTypography-caption",
                                  "colorError": "MuiTypography-colorError",
                                  "colorInherit": "MuiTypography-colorInherit",
                                  "colorPrimary": "MuiTypography-colorPrimary",
                                  "colorSecondary": "MuiTypography-colorSecondary",
                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                  "displayBlock": "MuiTypography-displayBlock",
                                  "displayInline": "MuiTypography-displayInline",
                                  "gutterBottom": "MuiTypography-gutterBottom",
                                  "h1": "MuiTypography-h1",
                                  "h2": "MuiTypography-h2",
                                  "h3": "MuiTypography-h3",
                                  "h4": "MuiTypography-h4",
                                  "h5": "MuiTypography-h5",
                                  "h6": "MuiTypography-h6",
                                  "noWrap": "MuiTypography-noWrap",
                                  "overline": "MuiTypography-overline",
                                  "paragraph": "MuiTypography-paragraph",
                                  "root": "MuiTypography-root",
                                  "srOnly": "MuiTypography-srOnly",
                                  "subtitle1": "MuiTypography-subtitle1",
                                  "subtitle2": "MuiTypography-subtitle2",
                                }
                              }
                              color="primary"
                              component={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {},
                                  "render": [Function],
                                }
                              }
                              href="/app"
                              onBlur={[Function]}
                              onFocus={[Function]}
                              variant="inherit"
                            >
                              <ForwardRef(NextComposed)
                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-root makeStyles-default-blue-link-81 MuiTypography-body1 MuiTypography-colorPrimary"
                                href="/app"
                                onBlur={[Function]}
                                onFocus={[Function]}
                              >
                                <Link
                                  href="/app"
                                >
                                  <a
                                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-root makeStyles-default-blue-link-81 MuiTypography-body1 MuiTypography-colorPrimary"
                                    href="/app"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseEnter={[Function]}
                                  >
                                    Click here to go to app
                                  </a>
                                </Link>
                              </ForwardRef(NextComposed)>
                            </ForwardRef(Typography)>
                          </WithStyles(ForwardRef(Typography))>
                        </ForwardRef(Link)>
                      </WithStyles(ForwardRef(Link))>
                    </BaseLink>
                  </ForwardRef>
                </ForwardRef(Typography)>
              </WithStyles(ForwardRef(Typography))>
            </Link>
            <DarkOverride
              onChange={[Function]}
              pickerValues={
                Array [
                  "Hex",
                  "RGB",
                  "HSL",
                  "HSB",
                  "CMYK",
                ]
              }
              value="Hex"
            >
              <ThemeProvider
                theme={
                  Object {
                    "breakpoints": Object {
                      "between": [Function],
                      "down": [Function],
                      "keys": Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ],
                      "only": [Function],
                      "up": [Function],
                      "values": Object {
                        "lg": 1280,
                        "md": 960,
                        "sm": 600,
                        "xl": 1920,
                        "xs": 0,
                      },
                      "width": [Function],
                    },
                    "direction": "ltr",
                    "mixins": Object {
                      "gutters": [Function],
                      "toolbar": Object {
                        "@media (min-width:0px) and (orientation: landscape)": Object {
                          "minHeight": 48,
                        },
                        "@media (min-width:600px)": Object {
                          "minHeight": 64,
                        },
                        "minHeight": 56,
                      },
                    },
                    "overrides": Object {
                      "MuiTypography": Object {
                        "h1": Object {
                          "fontFamily": "Montserrat",
                          "fontWeight": 900,
                        },
                        "h2": Object {
                          "fontFamily": "Montserrat",
                          "fontWeight": 900,
                        },
                        "h3": Object {
                          "fontFamily": "Montserrat",
                          "fontWeight": 900,
                        },
                        "h4": Object {
                          "fontFamily": "Montserrat",
                          "fontWeight": 900,
                        },
                        "h5": Object {
                          "fontFamily": "Montserrat",
                          "fontWeight": 900,
                        },
                        "h6": Object {
                          "fontFamily": "Montserrat",
                          "fontWeight": 900,
                        },
                        "subtitle1": Object {
                          "fontWeight": "bold",
                        },
                        "subtitle2": Object {
                          "fontWeight": "bold",
                        },
                      },
                    },
                    "palette": Object {
                      "action": Object {
                        "activatedOpacity": 0.24,
                        "active": "#fff",
                        "disabled": "rgba(255, 255, 255, 0.3)",
                        "disabledBackground": "rgba(255, 255, 255, 0.12)",
                        "disabledOpacity": 0.38,
                        "focus": "rgba(255, 255, 255, 0.12)",
                        "focusOpacity": 0.12,
                        "hover": "rgba(255, 255, 255, 0.08)",
                        "hoverOpacity": 0.08,
                        "selected": "rgba(255, 255, 255, 0.16)",
                        "selectedOpacity": 0.16,
                      },
                      "augmentColor": [Function],
                      "background": Object {
                        "default": "#0E1214",
                        "paper": "#181C1E",
                      },
                      "common": Object {
                        "black": "#000000",
                        "white": "#FFFFFF",
                      },
                      "contrastThreshold": 3,
                      "custom": Object {
                        "black60": "rgba(0, 0, 0, 0.60)",
                        "black75": "rgba(0, 0, 0, 0.75)",
                        "charcoal": "#121516",
                        "charcoalDark": "#0E1214",
                        "charcoalLight": "#181C1E",
                        "greyDark": "#DDE1E4",
                        "greyDefault": "#EBEEEF",
                        "greyLight": "#F9F9FA",
                        "white60": "rgba(255, 255, 255, 0.60)",
                        "white75": "rgba(255, 255, 255, 0.75)",
                      },
                      "divider": "rgba(255, 255, 255, 0.12)",
                      "error": Object {
                        "contrastText": "#fff",
                        "dark": "#d32f2f",
                        "light": "#e57373",
                        "main": "#f44336",
                      },
                      "getContrastText": [Function],
                      "grey": Object {
                        "100": "#f5f5f5",
                        "200": "#eeeeee",
                        "300": "#e0e0e0",
                        "400": "#bdbdbd",
                        "50": "#fafafa",
                        "500": "#9e9e9e",
                        "600": "#757575",
                        "700": "#616161",
                        "800": "#424242",
                        "900": "#212121",
                        "A100": "#d5d5d5",
                        "A200": "#aaaaaa",
                        "A400": "#303030",
                        "A700": "#616161",
                      },
                      "info": Object {
                        "contrastText": "#fff",
                        "dark": "#1976d2",
                        "light": "#64b5f6",
                        "main": "#2196f3",
                      },
                      "primary": Object {
                        "contrastText": "#fff",
                        "dark": "#A81432",
                        "light": "#E15F79",
                        "main": "#DB1A3F",
                      },
                      "secondary": Object {
                        "contrastText": "#fff",
                        "dark": "#365775",
                        "light": "#4FBEFF",
                        "main": "#2C92CD",
                      },
                      "success": Object {
                        "contrastText": "rgba(0, 0, 0, 0.87)",
                        "dark": "#388e3c",
                        "light": "#81c784",
                        "main": "#4caf50",
                      },
                      "text": Object {
                        "disabled": "rgba(255, 255, 255, 0.55)",
                        "divider": "rgba(255, 255, 255, 0.02)",
                        "hint": " rgba(255, 255, 255, 0.55)",
                        "icon": "rgba(255, 255, 255, 0.5)",
                        "primary": "rgba(255, 255, 255, 0.95)",
                        "secondary": "rgba(255, 255, 255, 0.70)",
                      },
                      "tonalOffset": 0.2,
                      "type": "dark",
                      "warning": Object {
                        "contrastText": "rgba(0, 0, 0, 0.87)",
                        "dark": "#f57c00",
                        "light": "#ffb74d",
                        "main": "#ff9800",
                      },
                    },
                    "props": Object {},
                    "shadows": Array [
                      "none",
                      "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                      "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                      "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                      "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                      "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                      "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                      "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                      "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                      "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                      "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                      "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                      "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                      "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                      "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                      "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                      "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                      "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                      "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                    ],
                    "shape": Object {
                      "borderRadius": 4,
                    },
                    "spacing": [Function],
                    "transitions": Object {
                      "create": [Function],
                      "duration": Object {
                        "complex": 375,
                        "enteringScreen": 225,
                        "leavingScreen": 195,
                        "short": 250,
                        "shorter": 200,
                        "shortest": 150,
                        "standard": 300,
                      },
                      "easing": Object {
                        "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                        "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                        "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                        "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                      },
                      "getAutoHeightDuration": [Function],
                    },
                    "typography": Object {
                      "body1": Object {
                        "fontFamily": "Lato",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "lineHeight": 1.5,
                      },
                      "body2": Object {
                        "fontFamily": "Lato",
                        "fontSize": "0.875rem",
                        "fontWeight": 400,
                        "lineHeight": 1.43,
                      },
                      "button": Object {
                        "fontFamily": "Lato",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "lineHeight": 1.75,
                        "textTransform": "uppercase",
                      },
                      "caption": Object {
                        "fontFamily": "Lato",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "lineHeight": 1.66,
                      },
                      "fontFamily": "Lato",
                      "fontSize": 14,
                      "fontWeightBold": 700,
                      "fontWeightLight": 300,
                      "fontWeightMedium": 500,
                      "fontWeightRegular": 400,
                      "h1": Object {
                        "@media (min-width:1280px)": Object {
                          "fontSize": "5.9983rem",
                        },
                        "@media (min-width:600px)": Object {
                          "fontSize": "4.7129rem",
                        },
                        "@media (min-width:960px)": Object {
                          "fontSize": "5.3556rem",
                        },
                        "fontFamily": "Lato",
                        "fontSize": "3.5rem",
                        "fontWeight": 300,
                        "lineHeight": 1.167,
                      },
                      "h2": Object {
                        "@media (min-width:1280px)": Object {
                          "fontSize": "3.75rem",
                        },
                        "@media (min-width:600px)": Object {
                          "fontSize": "2.9167rem",
                        },
                        "@media (min-width:960px)": Object {
                          "fontSize": "3.3333rem",
                        },
                        "fontFamily": "Lato",
                        "fontSize": "2.375rem",
                        "fontWeight": 300,
                        "lineHeight": 1.2,
                      },
                      "h3": Object {
                        "@media (min-width:1280px)": Object {
                          "fontSize": "2.9991rem",
                        },
                        "@media (min-width:600px)": Object {
                          "fontSize": "2.5707rem",
                        },
                        "@media (min-width:960px)": Object {
                          "fontSize": "2.7849rem",
                        },
                        "fontFamily": "Lato",
                        "fontSize": "2rem",
                        "fontWeight": 400,
                        "lineHeight": 1.167,
                      },
                      "h4": Object {
                        "@media (min-width:1280px)": Object {
                          "fontSize": "2.0243rem",
                        },
                        "@media (min-width:600px)": Object {
                          "fontSize": "1.8219rem",
                        },
                        "@media (min-width:960px)": Object {
                          "fontSize": "2.0243rem",
                        },
                        "fontFamily": "Lato",
                        "fontSize": "1.5625rem",
                        "fontWeight": 400,
                        "lineHeight": 1.235,
                      },
                      "h5": Object {
                        "@media (min-width:1280px)": Object {
                          "fontSize": "1.4993rem",
                        },
                        "@media (min-width:600px)": Object {
                          "fontSize": "1.3118rem",
                        },
                        "@media (min-width:960px)": Object {
                          "fontSize": "1.4993rem",
                        },
                        "fontFamily": "Lato",
                        "fontSize": "1.25rem",
                        "fontWeight": 400,
                        "lineHeight": 1.334,
                      },
                      "h6": Object {
                        "@media (min-width:1280px)": Object {
                          "fontSize": "1.25rem",
                        },
                        "@media (min-width:600px)": Object {
                          "fontSize": "1.25rem",
                        },
                        "@media (min-width:960px)": Object {
                          "fontSize": "1.25rem",
                        },
                        "fontFamily": "Lato",
                        "fontSize": "1.125rem",
                        "fontWeight": 500,
                        "lineHeight": 1.6,
                      },
                      "htmlFontSize": 16,
                      "overline": Object {
                        "fontFamily": "Lato",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "lineHeight": 2.66,
                        "textTransform": "uppercase",
                      },
                      "pxToRem": [Function],
                      "round": [Function],
                      "subtitle1": Object {
                        "fontFamily": "Lato",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "lineHeight": 1.75,
                      },
                      "subtitle2": Object {
                        "fontFamily": "Lato",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "lineHeight": 1.57,
                      },
                    },
                    "zIndex": Object {
                      "appBar": 1100,
                      "drawer": 1200,
                      "mobileStepper": 1000,
                      "modal": 1300,
                      "snackbar": 1400,
                      "speedDial": 1050,
                      "tooltip": 1500,
                    },
                  }
                }
              >
                <ValuePicker
                  onChange={[Function]}
                  pickerValues={
                    Array [
                      "Hex",
                      "RGB",
                      "HSL",
                      "HSB",
                      "CMYK",
                    ]
                  }
                  value="Hex"
                >
                  <WithStyles(ForwardRef(TextField))
                    InputProps={
                      Object {
                        "classes": Object {
                          "root": "makeStyles-root-90",
                        },
                      }
                    }
                    SelectProps={
                      Object {
                        "MenuProps": Object {
                          "classes": Object {
                            "paper": "makeStyles-menu-91",
                          },
                        },
                      }
                    }
                    color="secondary"
                    onChange={[Function]}
                    select={true}
                    value="Hex"
                    variant="outlined"
                  >
                    <ForwardRef(TextField)
                      InputProps={
                        Object {
                          "classes": Object {
                            "root": "makeStyles-root-90",
                          },
                        }
                      }
                      SelectProps={
                        Object {
                          "MenuProps": Object {
                            "classes": Object {
                              "paper": "makeStyles-menu-91",
                            },
                          },
                        }
                      }
                      classes={
                        Object {
                          "root": "MuiTextField-root-93",
                        }
                      }
                      color="secondary"
                      onChange={[Function]}
                      select={true}
                      value="Hex"
                      variant="outlined"
                    >
                      <WithStyles(ForwardRef(FormControl))
                        className="MuiTextField-root-93"
                        color="secondary"
                        disabled={false}
                        error={false}
                        fullWidth={false}
                        required={false}
                        variant="outlined"
                      >
                        <ForwardRef(FormControl)
                          className="MuiTextField-root-93"
                          classes={
                            Object {
                              "fullWidth": "MuiFormControl-fullWidth-97",
                              "marginDense": "MuiFormControl-marginDense-96",
                              "marginNormal": "MuiFormControl-marginNormal-95",
                              "root": "MuiFormControl-root-94",
                            }
                          }
                          color="secondary"
                          disabled={false}
                          error={false}
                          fullWidth={false}
                          required={false}
                          variant="outlined"
                        >
                          <div
                            className="MuiFormControl-root-94 MuiTextField-root-93"
                          >
                            <WithStyles(ForwardRef(Select))
                              MenuProps={
                                Object {
                                  "classes": Object {
                                    "paper": "makeStyles-menu-91",
                                  },
                                }
                              }
                              input={
                                <WithStyles(ForwardRef(OutlinedInput))
                                  autoFocus={false}
                                  classes={
                                    Object {
                                      "root": "makeStyles-root-90",
                                    }
                                  }
                                  fullWidth={false}
                                  multiline={false}
                                  onChange={[Function]}
                                  value="Hex"
                                />
                              }
                              value="Hex"
                            >
                              <ForwardRef(Select)
                                MenuProps={
                                  Object {
                                    "classes": Object {
                                      "paper": "makeStyles-menu-91",
                                    },
                                  }
                                }
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "filled": "MuiSelect-filled-100",
                                    "icon": "MuiSelect-icon-104",
                                    "iconFilled": "MuiSelect-iconFilled-106",
                                    "iconOpen": "MuiSelect-iconOpen-105",
                                    "iconOutlined": "MuiSelect-iconOutlined-107",
                                    "outlined": "MuiSelect-outlined-101",
                                    "root": "MuiSelect-root-98",
                                    "select": "MuiSelect-select-99",
                                    "selectMenu": "MuiSelect-selectMenu-102",
                                  }
                                }
                                input={
                                  <WithStyles(ForwardRef(OutlinedInput))
                                    autoFocus={false}
                                    classes={
                                      Object {
                                        "root": "makeStyles-root-90",
                                      }
                                    }
                                    fullWidth={false}
                                    multiline={false}
                                    onChange={[Function]}
                                    value="Hex"
                                  />
                                }
                                value="Hex"
                              >
                                <WithStyles(ForwardRef(OutlinedInput))
                                  autoFocus={false}
                                  classes={
                                    Object {
                                      "root": "makeStyles-root-90",
                                    }
                                  }
                                  fullWidth={false}
                                  inputComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "propTypes": Object {
                                        "IconComponent": [Function],
                                        "MenuProps": [Function],
                                        "SelectDisplayProps": [Function],
                                        "aria-label": [Function],
                                        "autoFocus": [Function],
                                        "autoWidth": [Function],
                                        "children": [Function],
                                        "className": [Function],
                                        "classes": [Function],
                                        "defaultValue": [Function],
                                        "disabled": [Function],
                                        "displayEmpty": [Function],
                                        "inputRef": [Function],
                                        "labelId": [Function],
                                        "multiple": [Function],
                                        "name": [Function],
                                        "onBlur": [Function],
                                        "onChange": [Function],
                                        "onClose": [Function],
                                        "onFocus": [Function],
                                        "onOpen": [Function],
                                        "open": [Function],
                                        "readOnly": [Function],
                                        "renderValue": [Function],
                                        "required": [Function],
                                        "tabIndex": [Function],
                                        "type": [Function],
                                        "value": [Function],
                                        "variant": [Function],
                                      },
                                      "render": [Function],
                                    }
                                  }
                                  inputProps={
                                    Object {
                                      "IconComponent": Object {
                                        "$$typeof": Symbol(react.memo),
                                        "compare": null,
                                        "displayName": "ArrowDropDownIcon",
                                        "muiName": "SvgIcon",
                                        "type": Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "render": [Function],
                                        },
                                      },
                                      "MenuProps": Object {
                                        "classes": Object {
                                          "paper": "makeStyles-menu-91",
                                        },
                                      },
                                      "SelectDisplayProps": Object {
                                        "id": undefined,
                                      },
                                      "autoWidth": false,
                                      "children": Array [
                                        <WithStyles(ForwardRef(MenuItem))
                                          classes={
                                            Object {
                                              "root": "makeStyles-menuItem-92",
                                            }
                                          }
                                          value="Hex"
                                        >
                                          Hex
                                        </WithStyles(ForwardRef(MenuItem))>,
                                        <WithStyles(ForwardRef(MenuItem))
                                          classes={
                                            Object {
                                              "root": "makeStyles-menuItem-92",
                                            }
                                          }
                                          value="RGB"
                                        >
                                          RGB
                                        </WithStyles(ForwardRef(MenuItem))>,
                                        <WithStyles(ForwardRef(MenuItem))
                                          classes={
                                            Object {
                                              "root": "makeStyles-menuItem-92",
                                            }
                                          }
                                          value="HSL"
                                        >
                                          HSL
                                        </WithStyles(ForwardRef(MenuItem))>,
                                        <WithStyles(ForwardRef(MenuItem))
                                          classes={
                                            Object {
                                              "root": "makeStyles-menuItem-92",
                                            }
                                          }
                                          value="HSB"
                                        >
                                          HSB
                                        </WithStyles(ForwardRef(MenuItem))>,
                                        <WithStyles(ForwardRef(MenuItem))
                                          classes={
                                            Object {
                                              "root": "makeStyles-menuItem-92",
                                            }
                                          }
                                          value="CMYK"
                                        >
                                          CMYK
                                        </WithStyles(ForwardRef(MenuItem))>,
                                      ],
                                      "classes": Object {
                                        "disabled": "Mui-disabled",
                                        "filled": "MuiSelect-filled-100",
                                        "icon": "MuiSelect-icon-104",
                                        "iconFilled": "MuiSelect-iconFilled-106",
                                        "iconOpen": "MuiSelect-iconOpen-105",
                                        "iconOutlined": "MuiSelect-iconOutlined-107",
                                        "outlined": "MuiSelect-outlined-101",
                                        "root": "MuiSelect-root-98",
                                        "select": "MuiSelect-select-99",
                                        "selectMenu": "MuiSelect-selectMenu-102",
                                      },
                                      "displayEmpty": false,
                                      "labelId": undefined,
                                      "multiple": false,
                                      "onClose": undefined,
                                      "onOpen": undefined,
                                      "open": undefined,
                                      "renderValue": undefined,
                                      "type": undefined,
                                      "variant": "outlined",
                                    }
                                  }
                                  multiline={false}
                                  onChange={[Function]}
                                  value="Hex"
                                >
                                  <ForwardRef(OutlinedInput)
                                    autoFocus={false}
                                    classes={
                                      Object {
                                        "adornedEnd": "MuiOutlinedInput-adornedEnd-113",
                                        "adornedStart": "MuiOutlinedInput-adornedStart-112",
                                        "colorSecondary": "MuiOutlinedInput-colorSecondary-109",
                                        "disabled": "Mui-disabled",
                                        "error": "Mui-error",
                                        "focused": "Mui-focused",
                                        "input": "MuiOutlinedInput-input-118",
                                        "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd-122",
                                        "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart-121",
                                        "inputMarginDense": "MuiOutlinedInput-inputMarginDense-119",
                                        "inputMultiline": "MuiOutlinedInput-inputMultiline-120",
                                        "marginDense": "MuiOutlinedInput-marginDense-115",
                                        "multiline": "MuiOutlinedInput-multiline-116",
                                        "notchedOutline": "MuiOutlinedInput-notchedOutline-117",
                                        "root": "MuiOutlinedInput-root-108 makeStyles-root-90",
                                      }
                                    }
                                    fullWidth={false}
                                    inputComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "propTypes": Object {
                                          "IconComponent": [Function],
                                          "MenuProps": [Function],
                                          "SelectDisplayProps": [Function],
                                          "aria-label": [Function],
                                          "autoFocus": [Function],
                                          "autoWidth": [Function],
                                          "children": [Function],
                                          "className": [Function],
                                          "classes": [Function],
                                          "defaultValue": [Function],
                                          "disabled": [Function],
                                          "displayEmpty": [Function],
                                          "inputRef": [Function],
                                          "labelId": [Function],
                                          "multiple": [Function],
                                          "name": [Function],
                                          "onBlur": [Function],
                                          "onChange": [Function],
                                          "onClose": [Function],
                                          "onFocus": [Function],
                                          "onOpen": [Function],
                                          "open": [Function],
                                          "readOnly": [Function],
                                          "renderValue": [Function],
                                          "required": [Function],
                                          "tabIndex": [Function],
                                          "type": [Function],
                                          "value": [Function],
                                          "variant": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    inputProps={
                                      Object {
                                        "IconComponent": Object {
                                          "$$typeof": Symbol(react.memo),
                                          "compare": null,
                                          "displayName": "ArrowDropDownIcon",
                                          "muiName": "SvgIcon",
                                          "type": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "render": [Function],
                                          },
                                        },
                                        "MenuProps": Object {
                                          "classes": Object {
                                            "paper": "makeStyles-menu-91",
                                          },
                                        },
                                        "SelectDisplayProps": Object {
                                          "id": undefined,
                                        },
                                        "autoWidth": false,
                                        "children": Array [
                                          <WithStyles(ForwardRef(MenuItem))
                                            classes={
                                              Object {
                                                "root": "makeStyles-menuItem-92",
                                              }
                                            }
                                            value="Hex"
                                          >
                                            Hex
                                          </WithStyles(ForwardRef(MenuItem))>,
                                          <WithStyles(ForwardRef(MenuItem))
                                            classes={
                                              Object {
                                                "root": "makeStyles-menuItem-92",
                                              }
                                            }
                                            value="RGB"
                                          >
                                            RGB
                                          </WithStyles(ForwardRef(MenuItem))>,
                                          <WithStyles(ForwardRef(MenuItem))
                                            classes={
                                              Object {
                                                "root": "makeStyles-menuItem-92",
                                              }
                                            }
                                            value="HSL"
                                          >
                                            HSL
                                          </WithStyles(ForwardRef(MenuItem))>,
                                          <WithStyles(ForwardRef(MenuItem))
                                            classes={
                                              Object {
                                                "root": "makeStyles-menuItem-92",
                                              }
                                            }
                                            value="HSB"
                                          >
                                            HSB
                                          </WithStyles(ForwardRef(MenuItem))>,
                                          <WithStyles(ForwardRef(MenuItem))
                                            classes={
                                              Object {
                                                "root": "makeStyles-menuItem-92",
                                              }
                                            }
                                            value="CMYK"
                                          >
                                            CMYK
                                          </WithStyles(ForwardRef(MenuItem))>,
                                        ],
                                        "classes": Object {
                                          "disabled": "Mui-disabled",
                                          "filled": "MuiSelect-filled-100",
                                          "icon": "MuiSelect-icon-104",
                                          "iconFilled": "MuiSelect-iconFilled-106",
                                          "iconOpen": "MuiSelect-iconOpen-105",
                                          "iconOutlined": "MuiSelect-iconOutlined-107",
                                          "outlined": "MuiSelect-outlined-101",
                                          "root": "MuiSelect-root-98",
                                          "select": "MuiSelect-select-99",
                                          "selectMenu": "MuiSelect-selectMenu-102",
                                        },
                                        "displayEmpty": false,
                                        "labelId": undefined,
                                        "multiple": false,
                                        "onClose": undefined,
                                        "onOpen": undefined,
                                        "open": undefined,
                                        "renderValue": undefined,
                                        "type": undefined,
                                        "variant": "outlined",
                                      }
                                    }
                                    multiline={false}
                                    onChange={[Function]}
                                    value="Hex"
                                  >
                                    <WithStyles(ForwardRef(InputBase))
                                      autoFocus={false}
                                      classes={
                                        Object {
                                          "adornedEnd": "MuiOutlinedInput-adornedEnd-113",
                                          "adornedStart": "MuiOutlinedInput-adornedStart-112",
                                          "colorSecondary": "MuiOutlinedInput-colorSecondary-109",
                                          "disabled": "Mui-disabled",
                                          "error": "Mui-error",
                                          "focused": "Mui-focused",
                                          "input": "MuiOutlinedInput-input-118",
                                          "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd-122",
                                          "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart-121",
                                          "inputMarginDense": "MuiOutlinedInput-inputMarginDense-119",
                                          "inputMultiline": "MuiOutlinedInput-inputMultiline-120",
                                          "marginDense": "MuiOutlinedInput-marginDense-115",
                                          "multiline": "MuiOutlinedInput-multiline-116",
                                          "notchedOutline": null,
                                          "root": "MuiOutlinedInput-root-108 makeStyles-root-90",
                                        }
                                      }
                                      fullWidth={false}
                                      inputComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "propTypes": Object {
                                            "IconComponent": [Function],
                                            "MenuProps": [Function],
                                            "SelectDisplayProps": [Function],
                                            "aria-label": [Function],
                                            "autoFocus": [Function],
                                            "autoWidth": [Function],
                                            "children": [Function],
                                            "className": [Function],
                                            "classes": [Function],
                                            "defaultValue": [Function],
                                            "disabled": [Function],
                                            "displayEmpty": [Function],
                                            "inputRef": [Function],
                                            "labelId": [Function],
                                            "multiple": [Function],
                                            "name": [Function],
                                            "onBlur": [Function],
                                            "onChange": [Function],
                                            "onClose": [Function],
                                            "onFocus": [Function],
                                            "onOpen": [Function],
                                            "open": [Function],
                                            "readOnly": [Function],
                                            "renderValue": [Function],
                                            "required": [Function],
                                            "tabIndex": [Function],
                                            "type": [Function],
                                            "value": [Function],
                                            "variant": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      inputProps={
                                        Object {
                                          "IconComponent": Object {
                                            "$$typeof": Symbol(react.memo),
                                            "compare": null,
                                            "displayName": "ArrowDropDownIcon",
                                            "muiName": "SvgIcon",
                                            "type": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "render": [Function],
                                            },
                                          },
                                          "MenuProps": Object {
                                            "classes": Object {
                                              "paper": "makeStyles-menu-91",
                                            },
                                          },
                                          "SelectDisplayProps": Object {
                                            "id": undefined,
                                          },
                                          "autoWidth": false,
                                          "children": Array [
                                            <WithStyles(ForwardRef(MenuItem))
                                              classes={
                                                Object {
                                                  "root": "makeStyles-menuItem-92",
                                                }
                                              }
                                              value="Hex"
                                            >
                                              Hex
                                            </WithStyles(ForwardRef(MenuItem))>,
                                            <WithStyles(ForwardRef(MenuItem))
                                              classes={
                                                Object {
                                                  "root": "makeStyles-menuItem-92",
                                                }
                                              }
                                              value="RGB"
                                            >
                                              RGB
                                            </WithStyles(ForwardRef(MenuItem))>,
                                            <WithStyles(ForwardRef(MenuItem))
                                              classes={
                                                Object {
                                                  "root": "makeStyles-menuItem-92",
                                                }
                                              }
                                              value="HSL"
                                            >
                                              HSL
                                            </WithStyles(ForwardRef(MenuItem))>,
                                            <WithStyles(ForwardRef(MenuItem))
                                              classes={
                                                Object {
                                                  "root": "makeStyles-menuItem-92",
                                                }
                                              }
                                              value="HSB"
                                            >
                                              HSB
                                            </WithStyles(ForwardRef(MenuItem))>,
                                            <WithStyles(ForwardRef(MenuItem))
                                              classes={
                                                Object {
                                                  "root": "makeStyles-menuItem-92",
                                                }
                                              }
                                              value="CMYK"
                                            >
                                              CMYK
                                            </WithStyles(ForwardRef(MenuItem))>,
                                          ],
                                          "classes": Object {
                                            "disabled": "Mui-disabled",
                                            "filled": "MuiSelect-filled-100",
                                            "icon": "MuiSelect-icon-104",
                                            "iconFilled": "MuiSelect-iconFilled-106",
                                            "iconOpen": "MuiSelect-iconOpen-105",
                                            "iconOutlined": "MuiSelect-iconOutlined-107",
                                            "outlined": "MuiSelect-outlined-101",
                                            "root": "MuiSelect-root-98",
                                            "select": "MuiSelect-select-99",
                                            "selectMenu": "MuiSelect-selectMenu-102",
                                          },
                                          "displayEmpty": false,
                                          "labelId": undefined,
                                          "multiple": false,
                                          "onClose": undefined,
                                          "onOpen": undefined,
                                          "open": undefined,
                                          "renderValue": undefined,
                                          "type": undefined,
                                          "variant": "outlined",
                                        }
                                      }
                                      multiline={false}
                                      onChange={[Function]}
                                      renderSuffix={[Function]}
                                      type="text"
                                      value="Hex"
                                    >
                                      <ForwardRef(InputBase)
                                        autoFocus={false}
                                        classes={
                                          Object {
                                            "adornedEnd": "MuiInputBase-adornedEnd-128 MuiOutlinedInput-adornedEnd-113",
                                            "adornedStart": "MuiInputBase-adornedStart-127 MuiOutlinedInput-adornedStart-112",
                                            "colorSecondary": "MuiInputBase-colorSecondary-132 MuiOutlinedInput-colorSecondary-109",
                                            "disabled": "Mui-disabled Mui-disabled",
                                            "error": "Mui-error Mui-error",
                                            "focused": "Mui-focused Mui-focused",
                                            "formControl": "MuiInputBase-formControl-124",
                                            "fullWidth": "MuiInputBase-fullWidth-133",
                                            "input": "MuiInputBase-input-134 MuiOutlinedInput-input-118",
                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-139 MuiOutlinedInput-inputAdornedEnd-122",
                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart-138 MuiOutlinedInput-inputAdornedStart-121",
                                            "inputHiddenLabel": "MuiInputBase-inputHiddenLabel-140",
                                            "inputMarginDense": "MuiInputBase-inputMarginDense-135 MuiOutlinedInput-inputMarginDense-119",
                                            "inputMultiline": "MuiInputBase-inputMultiline-136 MuiOutlinedInput-inputMultiline-120",
                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch-137",
                                            "marginDense": "MuiInputBase-marginDense-130 MuiOutlinedInput-marginDense-115",
                                            "multiline": "MuiInputBase-multiline-131 MuiOutlinedInput-multiline-116",
                                            "root": "MuiInputBase-root-123 MuiOutlinedInput-root-108 makeStyles-root-90",
                                          }
                                        }
                                        fullWidth={false}
                                        inputComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "propTypes": Object {
                                              "IconComponent": [Function],
                                              "MenuProps": [Function],
                                              "SelectDisplayProps": [Function],
                                              "aria-label": [Function],
                                              "autoFocus": [Function],
                                              "autoWidth": [Function],
                                              "children": [Function],
                                              "className": [Function],
                                              "classes": [Function],
                                              "defaultValue": [Function],
                                              "disabled": [Function],
                                              "displayEmpty": [Function],
                                              "inputRef": [Function],
                                              "labelId": [Function],
                                              "multiple": [Function],
                                              "name": [Function],
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "onClose": [Function],
                                              "onFocus": [Function],
                                              "onOpen": [Function],
                                              "open": [Function],
                                              "readOnly": [Function],
                                              "renderValue": [Function],
                                              "required": [Function],
                                              "tabIndex": [Function],
                                              "type": [Function],
                                              "value": [Function],
                                              "variant": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        inputProps={
                                          Object {
                                            "IconComponent": Object {
                                              "$$typeof": Symbol(react.memo),
                                              "compare": null,
                                              "displayName": "ArrowDropDownIcon",
                                              "muiName": "SvgIcon",
                                              "type": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              },
                                            },
                                            "MenuProps": Object {
                                              "classes": Object {
                                                "paper": "makeStyles-menu-91",
                                              },
                                            },
                                            "SelectDisplayProps": Object {
                                              "id": undefined,
                                            },
                                            "autoWidth": false,
                                            "children": Array [
                                              <WithStyles(ForwardRef(MenuItem))
                                                classes={
                                                  Object {
                                                    "root": "makeStyles-menuItem-92",
                                                  }
                                                }
                                                value="Hex"
                                              >
                                                Hex
                                              </WithStyles(ForwardRef(MenuItem))>,
                                              <WithStyles(ForwardRef(MenuItem))
                                                classes={
                                                  Object {
                                                    "root": "makeStyles-menuItem-92",
                                                  }
                                                }
                                                value="RGB"
                                              >
                                                RGB
                                              </WithStyles(ForwardRef(MenuItem))>,
                                              <WithStyles(ForwardRef(MenuItem))
                                                classes={
                                                  Object {
                                                    "root": "makeStyles-menuItem-92",
                                                  }
                                                }
                                                value="HSL"
                                              >
                                                HSL
                                              </WithStyles(ForwardRef(MenuItem))>,
                                              <WithStyles(ForwardRef(MenuItem))
                                                classes={
                                                  Object {
                                                    "root": "makeStyles-menuItem-92",
                                                  }
                                                }
                                                value="HSB"
                                              >
                                                HSB
                                              </WithStyles(ForwardRef(MenuItem))>,
                                              <WithStyles(ForwardRef(MenuItem))
                                                classes={
                                                  Object {
                                                    "root": "makeStyles-menuItem-92",
                                                  }
                                                }
                                                value="CMYK"
                                              >
                                                CMYK
                                              </WithStyles(ForwardRef(MenuItem))>,
                                            ],
                                            "classes": Object {
                                              "disabled": "Mui-disabled",
                                              "filled": "MuiSelect-filled-100",
                                              "icon": "MuiSelect-icon-104",
                                              "iconFilled": "MuiSelect-iconFilled-106",
                                              "iconOpen": "MuiSelect-iconOpen-105",
                                              "iconOutlined": "MuiSelect-iconOutlined-107",
                                              "outlined": "MuiSelect-outlined-101",
                                              "root": "MuiSelect-root-98",
                                              "select": "MuiSelect-select-99",
                                              "selectMenu": "MuiSelect-selectMenu-102",
                                            },
                                            "displayEmpty": false,
                                            "labelId": undefined,
                                            "multiple": false,
                                            "onClose": undefined,
                                            "onOpen": undefined,
                                            "open": undefined,
                                            "renderValue": undefined,
                                            "type": undefined,
                                            "variant": "outlined",
                                          }
                                        }
                                        multiline={false}
                                        onChange={[Function]}
                                        renderSuffix={[Function]}
                                        type="text"
                                        value="Hex"
                                      >
                                        <div
                                          className="MuiInputBase-root-123 MuiOutlinedInput-root-108 makeStyles-root-90 MuiInputBase-colorSecondary-132 MuiOutlinedInput-colorSecondary-109 MuiInputBase-formControl-124"
                                          onClick={[Function]}
                                        >
                                          <ForwardRef(SelectInput)
                                            IconComponent={
                                              Object {
                                                "$$typeof": Symbol(react.memo),
                                                "compare": null,
                                                "displayName": "ArrowDropDownIcon",
                                                "muiName": "SvgIcon",
                                                "type": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "render": [Function],
                                                },
                                              }
                                            }
                                            MenuProps={
                                              Object {
                                                "classes": Object {
                                                  "paper": "makeStyles-menu-91",
                                                },
                                              }
                                            }
                                            SelectDisplayProps={
                                              Object {
                                                "id": undefined,
                                              }
                                            }
                                            aria-invalid={false}
                                            autoFocus={false}
                                            autoWidth={false}
                                            className="MuiInputBase-input-134 MuiOutlinedInput-input-118"
                                            classes={
                                              Object {
                                                "disabled": "Mui-disabled",
                                                "filled": "MuiSelect-filled-100",
                                                "icon": "MuiSelect-icon-104",
                                                "iconFilled": "MuiSelect-iconFilled-106",
                                                "iconOpen": "MuiSelect-iconOpen-105",
                                                "iconOutlined": "MuiSelect-iconOutlined-107",
                                                "outlined": "MuiSelect-outlined-101",
                                                "root": "MuiSelect-root-98",
                                                "select": "MuiSelect-select-99",
                                                "selectMenu": "MuiSelect-selectMenu-102",
                                              }
                                            }
                                            disabled={false}
                                            displayEmpty={false}
                                            inputRef={[Function]}
                                            multiple={false}
                                            onAnimationStart={[Function]}
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            required={false}
                                            value="Hex"
                                            variant="outlined"
                                          >
                                            <div
                                              aria-haspopup="listbox"
                                              className="MuiSelect-root-98 MuiSelect-select-99 MuiSelect-selectMenu-102 MuiSelect-outlined-101 MuiInputBase-input-134 MuiOutlinedInput-input-118"
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onMouseDown={[Function]}
                                              role="button"
                                              tabIndex={0}
                                            >
                                              Hex
                                            </div>
                                            <input
                                              autoFocus={false}
                                              onAnimationStart={[Function]}
                                              type="hidden"
                                              value="Hex"
                                            />
                                            <ForwardRef
                                              className="MuiSelect-icon-104 MuiSelect-iconOutlined-107"
                                            >
                                              <WithStyles(ForwardRef(SvgIcon))
                                                className="MuiSelect-icon-104 MuiSelect-iconOutlined-107"
                                              >
                                                <ForwardRef(SvgIcon)
                                                  className="MuiSelect-icon-104 MuiSelect-iconOutlined-107"
                                                  classes={
                                                    Object {
                                                      "colorAction": "MuiSvgIcon-colorAction-144",
                                                      "colorDisabled": "MuiSvgIcon-colorDisabled-146",
                                                      "colorError": "MuiSvgIcon-colorError-145",
                                                      "colorPrimary": "MuiSvgIcon-colorPrimary-142",
                                                      "colorSecondary": "MuiSvgIcon-colorSecondary-143",
                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-147",
                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-149",
                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-148",
                                                      "root": "MuiSvgIcon-root-141",
                                                    }
                                                  }
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="MuiSvgIcon-root-141 MuiSelect-icon-104 MuiSelect-iconOutlined-107"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M7 10l5 5 5-5z"
                                                    />
                                                  </svg>
                                                </ForwardRef(SvgIcon)>
                                              </WithStyles(ForwardRef(SvgIcon))>
                                            </ForwardRef>
                                            <WithStyles(ForwardRef(Menu))
                                              MenuListProps={
                                                Object {
                                                  "aria-labelledby": undefined,
                                                  "disableListWrap": true,
                                                  "role": "listbox",
                                                }
                                              }
                                              PaperProps={
                                                Object {
                                                  "style": Object {
                                                    "minWidth": undefined,
                                                  },
                                                }
                                              }
                                              anchorEl={
                                                <div
                                                  aria-haspopup="listbox"
                                                  class="MuiSelect-root-98 MuiSelect-select-99 MuiSelect-selectMenu-102 MuiSelect-outlined-101 MuiInputBase-input-134 MuiOutlinedInput-input-118"
                                                  role="button"
                                                  tabindex="0"
                                                >
                                                  Hex
                                                </div>
                                              }
                                              classes={
                                                Object {
                                                  "paper": "makeStyles-menu-91",
                                                }
                                              }
                                              id="menu-"
                                              onClose={[Function]}
                                              open={false}
                                            >
                                              <ForwardRef(Menu)
                                                MenuListProps={
                                                  Object {
                                                    "aria-labelledby": undefined,
                                                    "disableListWrap": true,
                                                    "role": "listbox",
                                                  }
                                                }
                                                PaperProps={
                                                  Object {
                                                    "style": Object {
                                                      "minWidth": undefined,
                                                    },
                                                  }
                                                }
                                                anchorEl={
                                                  <div
                                                    aria-haspopup="listbox"
                                                    class="MuiSelect-root-98 MuiSelect-select-99 MuiSelect-selectMenu-102 MuiSelect-outlined-101 MuiInputBase-input-134 MuiOutlinedInput-input-118"
                                                    role="button"
                                                    tabindex="0"
                                                  >
                                                    Hex
                                                  </div>
                                                }
                                                classes={
                                                  Object {
                                                    "list": "MuiMenu-list-151",
                                                    "paper": "MuiMenu-paper-150 makeStyles-menu-91",
                                                  }
                                                }
                                                id="menu-"
                                                onClose={[Function]}
                                                open={false}
                                              >
                                                <WithStyles(ForwardRef(Popover))
                                                  PaperProps={
                                                    Object {
                                                      "classes": Object {
                                                        "root": "MuiMenu-paper-150 makeStyles-menu-91",
                                                      },
                                                      "style": Object {
                                                        "minWidth": undefined,
                                                      },
                                                    }
                                                  }
                                                  anchorEl={
                                                    <div
                                                      aria-haspopup="listbox"
                                                      class="MuiSelect-root-98 MuiSelect-select-99 MuiSelect-selectMenu-102 MuiSelect-outlined-101 MuiInputBase-input-134 MuiOutlinedInput-input-118"
                                                      role="button"
                                                      tabindex="0"
                                                    >
                                                      Hex
                                                    </div>
                                                  }
                                                  anchorOrigin={
                                                    Object {
                                                      "horizontal": "left",
                                                      "vertical": "top",
                                                    }
                                                  }
                                                  getContentAnchorEl={[Function]}
                                                  id="menu-"
                                                  onClose={[Function]}
                                                  onEntering={[Function]}
                                                  open={false}
                                                  transformOrigin={
                                                    Object {
                                                      "horizontal": "left",
                                                      "vertical": "top",
                                                    }
                                                  }
                                                  transitionDuration="auto"
                                                >
                                                  <ForwardRef(Popover)
                                                    PaperProps={
                                                      Object {
                                                        "classes": Object {
                                                          "root": "MuiMenu-paper-150 makeStyles-menu-91",
                                                        },
                                                        "style": Object {
                                                          "minWidth": undefined,
                                                        },
                                                      }
                                                    }
                                                    anchorEl={
                                                      <div
                                                        aria-haspopup="listbox"
                                                        class="MuiSelect-root-98 MuiSelect-select-99 MuiSelect-selectMenu-102 MuiSelect-outlined-101 MuiInputBase-input-134 MuiOutlinedInput-input-118"
                                                        role="button"
                                                        tabindex="0"
                                                      >
                                                        Hex
                                                      </div>
                                                    }
                                                    anchorOrigin={
                                                      Object {
                                                        "horizontal": "left",
                                                        "vertical": "top",
                                                      }
                                                    }
                                                    classes={
                                                      Object {
                                                        "paper": "MuiPopover-paper-153",
                                                        "root": "MuiPopover-root-152",
                                                      }
                                                    }
                                                    getContentAnchorEl={[Function]}
                                                    id="menu-"
                                                    onClose={[Function]}
                                                    onEntering={[Function]}
                                                    open={false}
                                                    transformOrigin={
                                                      Object {
                                                        "horizontal": "left",
                                                        "vertical": "top",
                                                      }
                                                    }
                                                    transitionDuration="auto"
                                                  >
                                                    <ForwardRef(Modal)
                                                      BackdropProps={
                                                        Object {
                                                          "invisible": true,
                                                        }
                                                      }
                                                      className="MuiPopover-root-152"
                                                      container={<body />}
                                                      id="menu-"
                                                      onClose={[Function]}
                                                      open={false}
                                                    />
                                                  </ForwardRef(Popover)>
                                                </WithStyles(ForwardRef(Popover))>
                                              </ForwardRef(Menu)>
                                            </WithStyles(ForwardRef(Menu))>
                                          </ForwardRef(SelectInput)>
                                          <WithStyles(ForwardRef(NotchedOutline))
                                            className="MuiOutlinedInput-notchedOutline-117"
                                            labelWidth={0}
                                            notched={true}
                                          >
                                            <ForwardRef(NotchedOutline)
                                              className="MuiOutlinedInput-notchedOutline-117"
                                              classes={
                                                Object {
                                                  "legend": "PrivateNotchedOutline-legend-155",
                                                  "legendLabelled": "PrivateNotchedOutline-legendLabelled-156",
                                                  "legendNotched": "PrivateNotchedOutline-legendNotched-157",
                                                  "root": "PrivateNotchedOutline-root-154",
                                                }
                                              }
                                              labelWidth={0}
                                              notched={true}
                                            >
                                              <fieldset
                                                aria-hidden={true}
                                                className="PrivateNotchedOutline-root-154 MuiOutlinedInput-notchedOutline-117"
                                                style={
                                                  Object {
                                                    "paddingLeft": 8,
                                                  }
                                                }
                                              >
                                                <legend
                                                  className="PrivateNotchedOutline-legend-155"
                                                  style={
                                                    Object {
                                                      "width": 0.01,
                                                    }
                                                  }
                                                >
                                                  <span
                                                    dangerouslySetInnerHTML={
                                                      Object {
                                                        "__html": "&#8203;",
                                                      }
                                                    }
                                                  />
                                                </legend>
                                              </fieldset>
                                            </ForwardRef(NotchedOutline)>
                                          </WithStyles(ForwardRef(NotchedOutline))>
                                        </div>
                                      </ForwardRef(InputBase)>
                                    </WithStyles(ForwardRef(InputBase))>
                                  </ForwardRef(OutlinedInput)>
                                </WithStyles(ForwardRef(OutlinedInput))>
                              </ForwardRef(Select)>
                            </WithStyles(ForwardRef(Select))>
                          </div>
                        </ForwardRef(FormControl)>
                      </WithStyles(ForwardRef(FormControl))>
                    </ForwardRef(TextField)>
                  </WithStyles(ForwardRef(TextField))>
                </ValuePicker>
              </ThemeProvider>
            </DarkOverride>
          </div>
        </div>
      </Home>
    </Index>
  </ThemeProvider>
</HomeWithTheme>
`;
