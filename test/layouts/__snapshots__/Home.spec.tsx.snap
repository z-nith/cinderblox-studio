// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Home should render without error 1`] = `
<HomeWithTheme>
  <ThemeProvider
    theme={
      Object {
        "breakpoints": Object {
          "between": [Function],
          "down": [Function],
          "keys": Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ],
          "only": [Function],
          "up": [Function],
          "values": Object {
            "lg": 1280,
            "md": 960,
            "sm": 600,
            "xl": 1920,
            "xs": 0,
          },
          "width": [Function],
        },
        "direction": "ltr",
        "mixins": Object {
          "gutters": [Function],
          "toolbar": Object {
            "@media (min-width:0px) and (orientation: landscape)": Object {
              "minHeight": 48,
            },
            "@media (min-width:600px)": Object {
              "minHeight": 64,
            },
            "minHeight": 56,
          },
        },
        "overrides": Object {
          "MuiTypography": Object {
            "h1": Object {
              "fontFamily": "Montserrat",
              "fontWeight": 900,
            },
            "h2": Object {
              "fontFamily": "Montserrat",
              "fontWeight": 900,
            },
            "h3": Object {
              "fontFamily": "Montserrat",
              "fontWeight": 900,
            },
            "h4": Object {
              "fontFamily": "Montserrat",
              "fontWeight": 900,
            },
            "h5": Object {
              "fontFamily": "Montserrat",
              "fontWeight": 900,
            },
            "h6": Object {
              "fontFamily": "Montserrat",
              "fontWeight": 900,
            },
            "subtitle1": Object {
              "fontWeight": "bold",
            },
            "subtitle2": Object {
              "fontWeight": "bold",
            },
          },
        },
        "palette": Object {
          "action": Object {
            "activatedOpacity": 0.12,
            "active": "rgba(0, 0, 0, 0.54)",
            "disabled": "rgba(0, 0, 0, 0.26)",
            "disabledBackground": "rgba(0, 0, 0, 0.12)",
            "disabledOpacity": 0.38,
            "focus": "rgba(0, 0, 0, 0.12)",
            "focusOpacity": 0.12,
            "hover": "rgba(0, 0, 0, 0.04)",
            "hoverOpacity": 0.04,
            "selected": "rgba(0, 0, 0, 0.08)",
            "selectedOpacity": 0.08,
          },
          "augmentColor": [Function],
          "background": Object {
            "default": "#FFFFFF",
            "paper": "#F9F9FA",
          },
          "common": Object {
            "black": "#000000",
            "white": "#FFFFFF",
          },
          "contrastThreshold": 3,
          "custom": Object {
            "black40": "rgba(0, 0, 0, 0.40)",
            "black60": "rgba(0, 0, 0, 0.60)",
            "black75": "rgba(0, 0, 0, 0.75)",
            "charcoal": "#121516",
            "charcoalDark": "#0E1214",
            "charcoalLight": "#181C1E",
            "greyDark": "#DDE1E4",
            "greyDarker": "#CDD4D8",
            "greyDefault": "#EBEEEF",
            "greyLight": "#F9F9FA",
            "white60": "rgba(255, 255, 255, 0.60)",
            "white75": "rgba(255, 255, 255, 0.75)",
          },
          "divider": "rgba(0, 0, 0, 0.12)",
          "error": Object {
            "contrastText": "#fff",
            "dark": "#d32f2f",
            "light": "#e57373",
            "main": "#f44336",
          },
          "getContrastText": [Function],
          "grey": Object {
            "100": "#f5f5f5",
            "200": "#eeeeee",
            "300": "#e0e0e0",
            "400": "#bdbdbd",
            "50": "#fafafa",
            "500": "#9e9e9e",
            "600": "#757575",
            "700": "#616161",
            "800": "#424242",
            "900": "#212121",
            "A100": "#d5d5d5",
            "A200": "#aaaaaa",
            "A400": "#303030",
            "A700": "#616161",
          },
          "info": Object {
            "contrastText": "#fff",
            "dark": "#1976d2",
            "light": "#64b5f6",
            "main": "#2196f3",
          },
          "primary": Object {
            "contrastText": "#fff",
            "dark": "#A81432",
            "light": "#E62E51",
            "main": "#DB1A3F",
          },
          "secondary": Object {
            "contrastText": "#fff",
            "dark": "#365775",
            "light": "#4FBEFF",
            "main": "#2C92CD",
          },
          "success": Object {
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "#388e3c",
            "light": "#81c784",
            "main": "#4caf50",
          },
          "text": Object {
            "disabled": "rgba(4, 28, 41, 0.56)",
            "divider": "#DDE1E4",
            "hint": "rgba(4, 28, 41, 0.75)",
            "primary": "rgba(4, 28, 41, 1)",
            "secondary": "rgba(4, 28, 41, 0.75)",
          },
          "tonalOffset": 0.2,
          "type": "light",
          "warning": Object {
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "#f57c00",
            "light": "#ffb74d",
            "main": "#ff9800",
          },
        },
        "props": Object {},
        "shadows": Array [
          "none",
          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
        ],
        "shape": Object {
          "borderRadius": 4,
        },
        "spacing": [Function],
        "transitions": Object {
          "create": [Function],
          "duration": Object {
            "complex": 375,
            "enteringScreen": 225,
            "leavingScreen": 195,
            "short": 250,
            "shorter": 200,
            "shortest": 150,
            "standard": 300,
          },
          "easing": Object {
            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
          },
          "getAutoHeightDuration": [Function],
        },
        "typography": Object {
          "body1": Object {
            "fontFamily": "Lato",
            "fontSize": "1rem",
            "fontWeight": 400,
            "lineHeight": 1.5,
          },
          "body2": Object {
            "fontFamily": "Lato",
            "fontSize": "0.875rem",
            "fontWeight": 400,
            "lineHeight": 1.43,
          },
          "button": Object {
            "fontFamily": "Lato",
            "fontSize": "0.875rem",
            "fontWeight": 500,
            "lineHeight": 1.75,
            "textTransform": "uppercase",
          },
          "caption": Object {
            "fontFamily": "Lato",
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "lineHeight": 1.66,
          },
          "fontFamily": "Lato",
          "fontSize": 14,
          "fontWeightBold": 700,
          "fontWeightLight": 300,
          "fontWeightMedium": 500,
          "fontWeightRegular": 400,
          "h1": Object {
            "@media (min-width:1280px)": Object {
              "fontSize": "5.9983rem",
            },
            "@media (min-width:600px)": Object {
              "fontSize": "4.7129rem",
            },
            "@media (min-width:960px)": Object {
              "fontSize": "5.3556rem",
            },
            "fontFamily": "Lato",
            "fontSize": "3.5rem",
            "fontWeight": 300,
            "lineHeight": 1.167,
          },
          "h2": Object {
            "@media (min-width:1280px)": Object {
              "fontSize": "3.75rem",
            },
            "@media (min-width:600px)": Object {
              "fontSize": "2.9167rem",
            },
            "@media (min-width:960px)": Object {
              "fontSize": "3.3333rem",
            },
            "fontFamily": "Lato",
            "fontSize": "2.375rem",
            "fontWeight": 300,
            "lineHeight": 1.2,
          },
          "h3": Object {
            "@media (min-width:1280px)": Object {
              "fontSize": "2.9991rem",
            },
            "@media (min-width:600px)": Object {
              "fontSize": "2.5707rem",
            },
            "@media (min-width:960px)": Object {
              "fontSize": "2.7849rem",
            },
            "fontFamily": "Lato",
            "fontSize": "2rem",
            "fontWeight": 400,
            "lineHeight": 1.167,
          },
          "h4": Object {
            "@media (min-width:1280px)": Object {
              "fontSize": "2.0243rem",
            },
            "@media (min-width:600px)": Object {
              "fontSize": "1.8219rem",
            },
            "@media (min-width:960px)": Object {
              "fontSize": "2.0243rem",
            },
            "fontFamily": "Lato",
            "fontSize": "1.5625rem",
            "fontWeight": 400,
            "lineHeight": 1.235,
          },
          "h5": Object {
            "@media (min-width:1280px)": Object {
              "fontSize": "1.4993rem",
            },
            "@media (min-width:600px)": Object {
              "fontSize": "1.3118rem",
            },
            "@media (min-width:960px)": Object {
              "fontSize": "1.4993rem",
            },
            "fontFamily": "Lato",
            "fontSize": "1.25rem",
            "fontWeight": 400,
            "lineHeight": 1.334,
          },
          "h6": Object {
            "@media (min-width:1280px)": Object {
              "fontSize": "1.25rem",
            },
            "@media (min-width:600px)": Object {
              "fontSize": "1.25rem",
            },
            "@media (min-width:960px)": Object {
              "fontSize": "1.25rem",
            },
            "fontFamily": "Lato",
            "fontSize": "1.125rem",
            "fontWeight": 500,
            "lineHeight": 1.6,
          },
          "htmlFontSize": 16,
          "overline": Object {
            "fontFamily": "Lato",
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "lineHeight": 2.66,
            "textTransform": "uppercase",
          },
          "pxToRem": [Function],
          "round": [Function],
          "subtitle1": Object {
            "fontFamily": "Lato",
            "fontSize": "1rem",
            "fontWeight": 400,
            "lineHeight": 1.75,
          },
          "subtitle2": Object {
            "fontFamily": "Lato",
            "fontSize": "0.875rem",
            "fontWeight": 500,
            "lineHeight": 1.57,
          },
        },
        "zIndex": Object {
          "appBar": 1100,
          "drawer": 1200,
          "mobileStepper": 1000,
          "modal": 1300,
          "snackbar": 1400,
          "speedDial": 1050,
          "tooltip": 1500,
        },
        Symbol(mui.nested): false,
      }
    }
  >
    <ParallaxProvider
      scrollAxis="vertical"
    >
      <Index>
        <Home>
          <div>
            <Nav>
              <AppBar
                onMobileMenuClick={[Function]}
              >
                <ElevationScroll>
                  <WithStyles(ForwardRef(AppBar))
                    color="secondary"
                    elevation={0}
                  >
                    <ForwardRef(AppBar)
                      classes={
                        Object {
                          "colorDefault": "MuiAppBar-colorDefault",
                          "colorInherit": "MuiAppBar-colorInherit",
                          "colorPrimary": "MuiAppBar-colorPrimary",
                          "colorSecondary": "MuiAppBar-colorSecondary",
                          "colorTransparent": "MuiAppBar-colorTransparent",
                          "positionAbsolute": "MuiAppBar-positionAbsolute",
                          "positionFixed": "MuiAppBar-positionFixed",
                          "positionRelative": "MuiAppBar-positionRelative",
                          "positionStatic": "MuiAppBar-positionStatic",
                          "positionSticky": "MuiAppBar-positionSticky",
                          "root": "MuiAppBar-root",
                        }
                      }
                      color="secondary"
                      elevation={0}
                    >
                      <WithStyles(ForwardRef(Paper))
                        className="MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorSecondary mui-fixed"
                        component="header"
                        elevation={0}
                        square={true}
                      >
                        <ForwardRef(Paper)
                          className="MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorSecondary mui-fixed"
                          classes={
                            Object {
                              "elevation0": "MuiPaper-elevation0",
                              "elevation1": "MuiPaper-elevation1",
                              "elevation10": "MuiPaper-elevation10",
                              "elevation11": "MuiPaper-elevation11",
                              "elevation12": "MuiPaper-elevation12",
                              "elevation13": "MuiPaper-elevation13",
                              "elevation14": "MuiPaper-elevation14",
                              "elevation15": "MuiPaper-elevation15",
                              "elevation16": "MuiPaper-elevation16",
                              "elevation17": "MuiPaper-elevation17",
                              "elevation18": "MuiPaper-elevation18",
                              "elevation19": "MuiPaper-elevation19",
                              "elevation2": "MuiPaper-elevation2",
                              "elevation20": "MuiPaper-elevation20",
                              "elevation21": "MuiPaper-elevation21",
                              "elevation22": "MuiPaper-elevation22",
                              "elevation23": "MuiPaper-elevation23",
                              "elevation24": "MuiPaper-elevation24",
                              "elevation3": "MuiPaper-elevation3",
                              "elevation4": "MuiPaper-elevation4",
                              "elevation5": "MuiPaper-elevation5",
                              "elevation6": "MuiPaper-elevation6",
                              "elevation7": "MuiPaper-elevation7",
                              "elevation8": "MuiPaper-elevation8",
                              "elevation9": "MuiPaper-elevation9",
                              "outlined": "MuiPaper-outlined",
                              "root": "MuiPaper-root",
                              "rounded": "MuiPaper-rounded",
                            }
                          }
                          component="header"
                          elevation={0}
                          square={true}
                        >
                          <header
                            className="MuiPaper-root MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorSecondary mui-fixed MuiPaper-elevation0"
                          >
                            <WithStyles(ForwardRef(Toolbar))
                              classes={
                                Object {
                                  "root": "makeStyles-root-7",
                                }
                              }
                              disableGutters={true}
                            >
                              <ForwardRef(Toolbar)
                                classes={
                                  Object {
                                    "dense": "MuiToolbar-dense",
                                    "gutters": "MuiToolbar-gutters",
                                    "regular": "MuiToolbar-regular",
                                    "root": "MuiToolbar-root makeStyles-root-7",
                                  }
                                }
                                disableGutters={true}
                              >
                                <div
                                  className="MuiToolbar-root makeStyles-root-7 MuiToolbar-regular"
                                >
                                  <div
                                    className="makeStyles-flexRowBase-8 makeStyles-toolbarLeft-10"
                                  >
                                    <Hidden
                                      mdUp={true}
                                    >
                                      <WithWidth(HiddenJs)
                                        lgDown={false}
                                        lgUp={false}
                                        mdDown={false}
                                        mdUp={true}
                                        smDown={false}
                                        smUp={false}
                                        xlDown={false}
                                        xlUp={false}
                                        xsDown={false}
                                        xsUp={false}
                                      />
                                    </Hidden>
                                    <Hidden
                                      smDown={true}
                                    >
                                      <WithWidth(HiddenJs)
                                        lgDown={false}
                                        lgUp={false}
                                        mdDown={false}
                                        mdUp={false}
                                        smDown={true}
                                        smUp={false}
                                        xlDown={false}
                                        xlUp={false}
                                        xsDown={false}
                                        xsUp={false}
                                      />
                                    </Hidden>
                                  </div>
                                  <div
                                    className="makeStyles-flexRowBase-8 makeStyles-toolbarCenter-11"
                                  >
                                    <Hidden
                                      mdUp={true}
                                    >
                                      <WithWidth(HiddenJs)
                                        lgDown={false}
                                        lgUp={false}
                                        mdDown={false}
                                        mdUp={true}
                                        smDown={false}
                                        smUp={false}
                                        xlDown={false}
                                        xlUp={false}
                                        xsDown={false}
                                        xsUp={false}
                                      />
                                    </Hidden>
                                    <Hidden
                                      smDown={true}
                                    >
                                      <WithWidth(HiddenJs)
                                        lgDown={false}
                                        lgUp={false}
                                        mdDown={false}
                                        mdUp={false}
                                        smDown={true}
                                        smUp={false}
                                        xlDown={false}
                                        xlUp={false}
                                        xsDown={false}
                                        xsUp={false}
                                      />
                                    </Hidden>
                                  </div>
                                  <div
                                    className="makeStyles-flexRowBase-8 makeStyles-toolbarRight-12"
                                  >
                                    <div
                                      className="makeStyles-flexRowBase-8 makeStyles-rowSpaceBetween-9"
                                    >
                                      <div
                                        className="makeStyles-socialLinkContainer-14"
                                      >
                                        <SocialMediaLink
                                          color="dark"
                                          href="https://github.com/z-nith/cinderblox-studio"
                                          iconSize="small"
                                          variant="github"
                                        >
                                          <WithStyles(ForwardRef(IconButton))
                                            classes={
                                              Object {
                                                "root": "makeStyles-root-58",
                                              }
                                            }
                                            component="a"
                                            href="https://github.com/z-nith/cinderblox-studio"
                                            target="_blank"
                                          >
                                            <ForwardRef(IconButton)
                                              classes={
                                                Object {
                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                  "disabled": "Mui-disabled",
                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                  "label": "MuiIconButton-label",
                                                  "root": "MuiIconButton-root makeStyles-root-58",
                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                }
                                              }
                                              component="a"
                                              href="https://github.com/z-nith/cinderblox-studio"
                                              target="_blank"
                                            >
                                              <WithStyles(ForwardRef(ButtonBase))
                                                centerRipple={true}
                                                className="MuiIconButton-root makeStyles-root-58"
                                                component="a"
                                                disabled={false}
                                                focusRipple={true}
                                                href="https://github.com/z-nith/cinderblox-studio"
                                                target="_blank"
                                              >
                                                <ForwardRef(ButtonBase)
                                                  centerRipple={true}
                                                  className="MuiIconButton-root makeStyles-root-58"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "root": "MuiButtonBase-root",
                                                    }
                                                  }
                                                  component="a"
                                                  disabled={false}
                                                  focusRipple={true}
                                                  href="https://github.com/z-nith/cinderblox-studio"
                                                  target="_blank"
                                                >
                                                  <a
                                                    aria-disabled={false}
                                                    className="MuiButtonBase-root MuiIconButton-root makeStyles-root-58"
                                                    href="https://github.com/z-nith/cinderblox-studio"
                                                    onBlur={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    tabIndex={0}
                                                    target="_blank"
                                                  >
                                                    <span
                                                      className="MuiIconButton-label"
                                                    >
                                                      <GitHub
                                                        color="#FFFFFF"
                                                        size={16}
                                                      >
                                                        <svg
                                                          fill="none"
                                                          height={16}
                                                          stroke="#FFFFFF"
                                                          strokeLinecap="round"
                                                          strokeLinejoin="round"
                                                          strokeWidth="2"
                                                          viewBox="0 0 24 24"
                                                          width={16}
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"
                                                          />
                                                        </svg>
                                                      </GitHub>
                                                    </span>
                                                    <WithStyles(memo)
                                                      center={true}
                                                    >
                                                      <ForwardRef(TouchRipple)
                                                        center={true}
                                                        classes={
                                                          Object {
                                                            "child": "MuiTouchRipple-child",
                                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                                            "ripple": "MuiTouchRipple-ripple",
                                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                            "root": "MuiTouchRipple-root",
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          className="MuiTouchRipple-root"
                                                        >
                                                          <TransitionGroup
                                                            childFactory={[Function]}
                                                            component={null}
                                                            exit={true}
                                                          />
                                                        </span>
                                                      </ForwardRef(TouchRipple)>
                                                    </WithStyles(memo)>
                                                  </a>
                                                </ForwardRef(ButtonBase)>
                                              </WithStyles(ForwardRef(ButtonBase))>
                                            </ForwardRef(IconButton)>
                                          </WithStyles(ForwardRef(IconButton))>
                                        </SocialMediaLink>
                                      </div>
                                      <div
                                        className="makeStyles-socialLinkContainer-14"
                                      >
                                        <Link
                                          external={true}
                                          href="https://github.com/Jmeza081"
                                          variant="wrapper"
                                        >
                                          <a
                                            className="makeStyles-wrapping-link-79"
                                            href="https://github.com/Jmeza081"
                                          >
                                            <Avatar
                                              alt="Developer: Jesse Meza"
                                              imgSize="large"
                                              src="/img/author_avatar.jpg"
                                              toolTipText="See more works by Jesse"
                                            >
                                              <Tooltip
                                                arrow={true}
                                                title="See more works by Jesse"
                                              >
                                                <WithStyles(ForwardRef(Tooltip))
                                                  arrow={true}
                                                  classes={
                                                    Object {
                                                      "arrow": "makeStyles-arrow-85",
                                                      "tooltip": "makeStyles-tooltip-84",
                                                    }
                                                  }
                                                  title="See more works by Jesse"
                                                >
                                                  <ForwardRef(Tooltip)
                                                    arrow={true}
                                                    classes={
                                                      Object {
                                                        "arrow": "MuiTooltip-arrow makeStyles-arrow-85",
                                                        "popper": "MuiTooltip-popper",
                                                        "popperArrow": "MuiTooltip-popperArrow",
                                                        "popperInteractive": "MuiTooltip-popperInteractive",
                                                        "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-84",
                                                        "tooltipArrow": "MuiTooltip-tooltipArrow",
                                                        "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                                        "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                                        "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                                        "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                                        "touch": "MuiTooltip-touch",
                                                      }
                                                    }
                                                    title="See more works by Jesse"
                                                  >
                                                    <div
                                                      aria-describedby={null}
                                                      className=""
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseOver={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchStart={[Function]}
                                                      title="See more works by Jesse"
                                                    >
                                                      <WithStyles(ForwardRef(Avatar))
                                                        alt="Developer: Jesse Meza"
                                                        className="makeStyles-large-83"
                                                        src="/img/author_avatar.jpg"
                                                      >
                                                        <ForwardRef(Avatar)
                                                          alt="Developer: Jesse Meza"
                                                          className="makeStyles-large-83"
                                                          classes={
                                                            Object {
                                                              "circle": "MuiAvatar-circle",
                                                              "colorDefault": "MuiAvatar-colorDefault",
                                                              "fallback": "MuiAvatar-fallback",
                                                              "img": "MuiAvatar-img",
                                                              "root": "MuiAvatar-root",
                                                              "rounded": "MuiAvatar-rounded",
                                                              "square": "MuiAvatar-square",
                                                            }
                                                          }
                                                          src="/img/author_avatar.jpg"
                                                        >
                                                          <div
                                                            className="MuiAvatar-root MuiAvatar-circle makeStyles-large-83"
                                                          >
                                                            <img
                                                              alt="Developer: Jesse Meza"
                                                              className="MuiAvatar-img"
                                                              src="/img/author_avatar.jpg"
                                                            />
                                                          </div>
                                                        </ForwardRef(Avatar)>
                                                      </WithStyles(ForwardRef(Avatar))>
                                                    </div>
                                                    <ForwardRef(Popper)
                                                      anchorEl={
                                                        <div
                                                          class=""
                                                          title="See more works by Jesse"
                                                        >
                                                          <div
                                                            class="MuiAvatar-root MuiAvatar-circle makeStyles-large-83"
                                                          >
                                                            <img
                                                              alt="Developer: Jesse Meza"
                                                              class="MuiAvatar-img"
                                                              src="/img/author_avatar.jpg"
                                                            />
                                                          </div>
                                                        </div>
                                                      }
                                                      className="MuiTooltip-popper MuiTooltip-popperArrow"
                                                      id={null}
                                                      open={false}
                                                      placement="bottom"
                                                      popperOptions={
                                                        Object {
                                                          "modifiers": Object {
                                                            "arrow": Object {
                                                              "element": null,
                                                              "enabled": false,
                                                            },
                                                          },
                                                        }
                                                      }
                                                      transition={true}
                                                    />
                                                  </ForwardRef(Tooltip)>
                                                </WithStyles(ForwardRef(Tooltip))>
                                              </Tooltip>
                                            </Avatar>
                                          </a>
                                        </Link>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </ForwardRef(Toolbar)>
                            </WithStyles(ForwardRef(Toolbar))>
                          </header>
                        </ForwardRef(Paper)>
                      </WithStyles(ForwardRef(Paper))>
                    </ForwardRef(AppBar)>
                  </WithStyles(ForwardRef(AppBar))>
                </ElevationScroll>
              </AppBar>
              <div
                id="back-to-top-anchor"
              />
              <Index
                onClose={[Function]}
                onMenuCloseClick={[Function]}
                onOpen={[Function]}
                open={false}
              >
                <ThemeProvider
                  theme={
                    Object {
                      "breakpoints": Object {
                        "between": [Function],
                        "down": [Function],
                        "keys": Array [
                          "xs",
                          "sm",
                          "md",
                          "lg",
                          "xl",
                        ],
                        "only": [Function],
                        "up": [Function],
                        "values": Object {
                          "lg": 1280,
                          "md": 960,
                          "sm": 600,
                          "xl": 1920,
                          "xs": 0,
                        },
                        "width": [Function],
                      },
                      "direction": "ltr",
                      "mixins": Object {
                        "gutters": [Function],
                        "toolbar": Object {
                          "@media (min-width:0px) and (orientation: landscape)": Object {
                            "minHeight": 48,
                          },
                          "@media (min-width:600px)": Object {
                            "minHeight": 64,
                          },
                          "minHeight": 56,
                        },
                      },
                      "overrides": Object {
                        "MuiTypography": Object {
                          "h1": Object {
                            "fontFamily": "Montserrat",
                            "fontWeight": 900,
                          },
                          "h2": Object {
                            "fontFamily": "Montserrat",
                            "fontWeight": 900,
                          },
                          "h3": Object {
                            "fontFamily": "Montserrat",
                            "fontWeight": 900,
                          },
                          "h4": Object {
                            "fontFamily": "Montserrat",
                            "fontWeight": 900,
                          },
                          "h5": Object {
                            "fontFamily": "Montserrat",
                            "fontWeight": 900,
                          },
                          "h6": Object {
                            "fontFamily": "Montserrat",
                            "fontWeight": 900,
                          },
                          "subtitle1": Object {
                            "fontWeight": "bold",
                          },
                          "subtitle2": Object {
                            "fontWeight": "bold",
                          },
                        },
                      },
                      "palette": Object {
                        "action": Object {
                          "activatedOpacity": 0.24,
                          "active": "#fff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "disabledOpacity": 0.38,
                          "focus": "rgba(255, 255, 255, 0.12)",
                          "focusOpacity": 0.12,
                          "hover": "rgba(255, 255, 255, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(255, 255, 255, 0.16)",
                          "selectedOpacity": 0.16,
                        },
                        "augmentColor": [Function],
                        "background": Object {
                          "default": "#0E1214",
                          "paper": "#181C1E",
                        },
                        "common": Object {
                          "black": "#000000",
                          "white": "#FFFFFF",
                        },
                        "contrastThreshold": 3,
                        "custom": Object {
                          "black40": "rgba(0, 0, 0, 0.40)",
                          "black60": "rgba(0, 0, 0, 0.60)",
                          "black75": "rgba(0, 0, 0, 0.75)",
                          "charcoal": "#121516",
                          "charcoalDark": "#0E1214",
                          "charcoalLight": "#181C1E",
                          "greyDark": "#DDE1E4",
                          "greyDarker": "#CDD4D8",
                          "greyDefault": "#EBEEEF",
                          "greyLight": "#F9F9FA",
                          "white60": "rgba(255, 255, 255, 0.60)",
                          "white75": "rgba(255, 255, 255, 0.75)",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "getContrastText": [Function],
                        "grey": Object {
                          "100": "#f5f5f5",
                          "200": "#eeeeee",
                          "300": "#e0e0e0",
                          "400": "#bdbdbd",
                          "50": "#fafafa",
                          "500": "#9e9e9e",
                          "600": "#757575",
                          "700": "#616161",
                          "800": "#424242",
                          "900": "#212121",
                          "A100": "#d5d5d5",
                          "A200": "#aaaaaa",
                          "A400": "#303030",
                          "A700": "#616161",
                        },
                        "info": Object {
                          "contrastText": "#fff",
                          "dark": "#1976d2",
                          "light": "#64b5f6",
                          "main": "#2196f3",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#A81432",
                          "light": "#E62E51",
                          "main": "#DB1A3F",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#365775",
                          "light": "#4FBEFF",
                          "main": "#2C92CD",
                        },
                        "success": Object {
                          "contrastText": "rgba(0, 0, 0, 0.87)",
                          "dark": "#388e3c",
                          "light": "#81c784",
                          "main": "#4caf50",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.55)",
                          "divider": "rgba(255, 255, 255, 0.02)",
                          "hint": "rgba(255, 255, 255, 0.55)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "rgba(255, 255, 255, 0.95)",
                          "secondary": "rgba(255, 255, 255, 0.70)",
                        },
                        "tonalOffset": 0.2,
                        "type": "dark",
                        "warning": Object {
                          "contrastText": "rgba(0, 0, 0, 0.87)",
                          "dark": "#f57c00",
                          "light": "#ffb74d",
                          "main": "#ff9800",
                        },
                      },
                      "props": Object {},
                      "shadows": Array [
                        "none",
                        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                      ],
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": [Function],
                      "transitions": Object {
                        "create": [Function],
                        "duration": Object {
                          "complex": 375,
                          "enteringScreen": 225,
                          "leavingScreen": 195,
                          "short": 250,
                          "shorter": 200,
                          "shortest": 150,
                          "standard": 300,
                        },
                        "easing": Object {
                          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                        },
                        "getAutoHeightDuration": [Function],
                      },
                      "typography": Object {
                        "body1": Object {
                          "fontFamily": "Lato",
                          "fontSize": "1rem",
                          "fontWeight": 400,
                          "lineHeight": 1.5,
                        },
                        "body2": Object {
                          "fontFamily": "Lato",
                          "fontSize": "0.875rem",
                          "fontWeight": 400,
                          "lineHeight": 1.43,
                        },
                        "button": Object {
                          "fontFamily": "Lato",
                          "fontSize": "0.875rem",
                          "fontWeight": 500,
                          "lineHeight": 1.75,
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "fontFamily": "Lato",
                          "fontSize": "0.75rem",
                          "fontWeight": 400,
                          "lineHeight": 1.66,
                        },
                        "fontFamily": "Lato",
                        "fontSize": 14,
                        "fontWeightBold": 700,
                        "fontWeightLight": 300,
                        "fontWeightMedium": 500,
                        "fontWeightRegular": 400,
                        "h1": Object {
                          "@media (min-width:1280px)": Object {
                            "fontSize": "5.9983rem",
                          },
                          "@media (min-width:600px)": Object {
                            "fontSize": "4.7129rem",
                          },
                          "@media (min-width:960px)": Object {
                            "fontSize": "5.3556rem",
                          },
                          "fontFamily": "Lato",
                          "fontSize": "3.5rem",
                          "fontWeight": 300,
                          "lineHeight": 1.167,
                        },
                        "h2": Object {
                          "@media (min-width:1280px)": Object {
                            "fontSize": "3.75rem",
                          },
                          "@media (min-width:600px)": Object {
                            "fontSize": "2.9167rem",
                          },
                          "@media (min-width:960px)": Object {
                            "fontSize": "3.3333rem",
                          },
                          "fontFamily": "Lato",
                          "fontSize": "2.375rem",
                          "fontWeight": 300,
                          "lineHeight": 1.2,
                        },
                        "h3": Object {
                          "@media (min-width:1280px)": Object {
                            "fontSize": "2.9991rem",
                          },
                          "@media (min-width:600px)": Object {
                            "fontSize": "2.5707rem",
                          },
                          "@media (min-width:960px)": Object {
                            "fontSize": "2.7849rem",
                          },
                          "fontFamily": "Lato",
                          "fontSize": "2rem",
                          "fontWeight": 400,
                          "lineHeight": 1.167,
                        },
                        "h4": Object {
                          "@media (min-width:1280px)": Object {
                            "fontSize": "2.0243rem",
                          },
                          "@media (min-width:600px)": Object {
                            "fontSize": "1.8219rem",
                          },
                          "@media (min-width:960px)": Object {
                            "fontSize": "2.0243rem",
                          },
                          "fontFamily": "Lato",
                          "fontSize": "1.5625rem",
                          "fontWeight": 400,
                          "lineHeight": 1.235,
                        },
                        "h5": Object {
                          "@media (min-width:1280px)": Object {
                            "fontSize": "1.4993rem",
                          },
                          "@media (min-width:600px)": Object {
                            "fontSize": "1.3118rem",
                          },
                          "@media (min-width:960px)": Object {
                            "fontSize": "1.4993rem",
                          },
                          "fontFamily": "Lato",
                          "fontSize": "1.25rem",
                          "fontWeight": 400,
                          "lineHeight": 1.334,
                        },
                        "h6": Object {
                          "@media (min-width:1280px)": Object {
                            "fontSize": "1.25rem",
                          },
                          "@media (min-width:600px)": Object {
                            "fontSize": "1.25rem",
                          },
                          "@media (min-width:960px)": Object {
                            "fontSize": "1.25rem",
                          },
                          "fontFamily": "Lato",
                          "fontSize": "1.125rem",
                          "fontWeight": 500,
                          "lineHeight": 1.6,
                        },
                        "htmlFontSize": 16,
                        "overline": Object {
                          "fontFamily": "Lato",
                          "fontSize": "0.75rem",
                          "fontWeight": 400,
                          "lineHeight": 2.66,
                          "textTransform": "uppercase",
                        },
                        "pxToRem": [Function],
                        "round": [Function],
                        "subtitle1": Object {
                          "fontFamily": "Lato",
                          "fontSize": "1rem",
                          "fontWeight": 400,
                          "lineHeight": 1.75,
                        },
                        "subtitle2": Object {
                          "fontFamily": "Lato",
                          "fontSize": "0.875rem",
                          "fontWeight": 500,
                          "lineHeight": 1.57,
                        },
                      },
                      "zIndex": Object {
                        "appBar": 1100,
                        "drawer": 1200,
                        "mobileStepper": 1000,
                        "modal": 1300,
                        "snackbar": 1400,
                        "speedDial": 1050,
                        "tooltip": 1500,
                      },
                    }
                  }
                >
                  <Drawer
                    onClose={[Function]}
                    onMenuCloseClick={[Function]}
                    onOpen={[Function]}
                    open={false}
                  >
                    <ForwardRef(SwipeableDrawer)
                      anchor="left"
                      classes={
                        Object {
                          "modal": "makeStyles-modalProps-104",
                          "paper": "makeStyles-paper-105",
                        }
                      }
                      onClose={[Function]}
                      onOpen={[Function]}
                      open={false}
                    >
                      <WithStyles(ForwardRef(Drawer))
                        ModalProps={
                          Object {
                            "BackdropProps": Object {
                              "ref": [Function],
                            },
                          }
                        }
                        PaperProps={
                          Object {
                            "ref": Object {
                              "current": undefined,
                            },
                            "style": Object {
                              "pointerEvents": "none",
                            },
                          }
                        }
                        anchor="left"
                        classes={
                          Object {
                            "modal": "makeStyles-modalProps-104",
                            "paper": "makeStyles-paper-105",
                          }
                        }
                        onClose={[Function]}
                        open={false}
                        transitionDuration={
                          Object {
                            "enter": 225,
                            "exit": 195,
                          }
                        }
                        variant="temporary"
                      >
                        <ForwardRef(Drawer)
                          ModalProps={
                            Object {
                              "BackdropProps": Object {
                                "ref": [Function],
                              },
                            }
                          }
                          PaperProps={
                            Object {
                              "ref": Object {
                                "current": undefined,
                              },
                              "style": Object {
                                "pointerEvents": "none",
                              },
                            }
                          }
                          anchor="left"
                          classes={
                            Object {
                              "docked": "MuiDrawer-docked-113",
                              "modal": "MuiDrawer-modal-123 makeStyles-modalProps-104",
                              "paper": "MuiDrawer-paper-114 makeStyles-paper-105",
                              "paperAnchorBottom": "MuiDrawer-paperAnchorBottom-118",
                              "paperAnchorDockedBottom": "MuiDrawer-paperAnchorDockedBottom-122",
                              "paperAnchorDockedLeft": "MuiDrawer-paperAnchorDockedLeft-119",
                              "paperAnchorDockedRight": "MuiDrawer-paperAnchorDockedRight-121",
                              "paperAnchorDockedTop": "MuiDrawer-paperAnchorDockedTop-120",
                              "paperAnchorLeft": "MuiDrawer-paperAnchorLeft-115",
                              "paperAnchorRight": "MuiDrawer-paperAnchorRight-116",
                              "paperAnchorTop": "MuiDrawer-paperAnchorTop-117",
                              "root": "MuiDrawer-root-112",
                            }
                          }
                          onClose={[Function]}
                          open={false}
                          transitionDuration={
                            Object {
                              "enter": 225,
                              "exit": 195,
                            }
                          }
                          variant="temporary"
                        >
                          <ForwardRef(Modal)
                            BackdropComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "Naked": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "children": [Function],
                                    "className": [Function],
                                    "classes": [Function],
                                    "invisible": [Function],
                                    "open": [Function],
                                    "transitionDuration": [Function],
                                  },
                                  "render": [Function],
                                },
                                "displayName": "WithStyles(ForwardRef(Backdrop))",
                                "options": Object {
                                  "defaultTheme": Object {
                                    "breakpoints": Object {
                                      "between": [Function],
                                      "down": [Function],
                                      "keys": Array [
                                        "xs",
                                        "sm",
                                        "md",
                                        "lg",
                                        "xl",
                                      ],
                                      "only": [Function],
                                      "up": [Function],
                                      "values": Object {
                                        "lg": 1280,
                                        "md": 960,
                                        "sm": 600,
                                        "xl": 1920,
                                        "xs": 0,
                                      },
                                      "width": [Function],
                                    },
                                    "direction": "ltr",
                                    "mixins": Object {
                                      "gutters": [Function],
                                      "toolbar": Object {
                                        "@media (min-width:0px) and (orientation: landscape)": Object {
                                          "minHeight": 48,
                                        },
                                        "@media (min-width:600px)": Object {
                                          "minHeight": 64,
                                        },
                                        "minHeight": 56,
                                      },
                                    },
                                    "overrides": Object {},
                                    "palette": Object {
                                      "action": Object {
                                        "activatedOpacity": 0.12,
                                        "active": "rgba(0, 0, 0, 0.54)",
                                        "disabled": "rgba(0, 0, 0, 0.26)",
                                        "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                        "disabledOpacity": 0.38,
                                        "focus": "rgba(0, 0, 0, 0.12)",
                                        "focusOpacity": 0.12,
                                        "hover": "rgba(0, 0, 0, 0.04)",
                                        "hoverOpacity": 0.04,
                                        "selected": "rgba(0, 0, 0, 0.08)",
                                        "selectedOpacity": 0.08,
                                      },
                                      "augmentColor": [Function],
                                      "background": Object {
                                        "default": "#fafafa",
                                        "paper": "#fff",
                                      },
                                      "common": Object {
                                        "black": "#000",
                                        "white": "#fff",
                                      },
                                      "contrastThreshold": 3,
                                      "divider": "rgba(0, 0, 0, 0.12)",
                                      "error": Object {
                                        "contrastText": "#fff",
                                        "dark": "#d32f2f",
                                        "light": "#e57373",
                                        "main": "#f44336",
                                      },
                                      "getContrastText": [Function],
                                      "grey": Object {
                                        "100": "#f5f5f5",
                                        "200": "#eeeeee",
                                        "300": "#e0e0e0",
                                        "400": "#bdbdbd",
                                        "50": "#fafafa",
                                        "500": "#9e9e9e",
                                        "600": "#757575",
                                        "700": "#616161",
                                        "800": "#424242",
                                        "900": "#212121",
                                        "A100": "#d5d5d5",
                                        "A200": "#aaaaaa",
                                        "A400": "#303030",
                                        "A700": "#616161",
                                      },
                                      "info": Object {
                                        "contrastText": "#fff",
                                        "dark": "#1976d2",
                                        "light": "#64b5f6",
                                        "main": "#2196f3",
                                      },
                                      "primary": Object {
                                        "contrastText": "#fff",
                                        "dark": "#303f9f",
                                        "light": "#7986cb",
                                        "main": "#3f51b5",
                                      },
                                      "secondary": Object {
                                        "contrastText": "#fff",
                                        "dark": "#c51162",
                                        "light": "#ff4081",
                                        "main": "#f50057",
                                      },
                                      "success": Object {
                                        "contrastText": "rgba(0, 0, 0, 0.87)",
                                        "dark": "#388e3c",
                                        "light": "#81c784",
                                        "main": "#4caf50",
                                      },
                                      "text": Object {
                                        "disabled": "rgba(0, 0, 0, 0.38)",
                                        "hint": "rgba(0, 0, 0, 0.38)",
                                        "primary": "rgba(0, 0, 0, 0.87)",
                                        "secondary": "rgba(0, 0, 0, 0.54)",
                                      },
                                      "tonalOffset": 0.2,
                                      "type": "light",
                                      "warning": Object {
                                        "contrastText": "rgba(0, 0, 0, 0.87)",
                                        "dark": "#f57c00",
                                        "light": "#ffb74d",
                                        "main": "#ff9800",
                                      },
                                    },
                                    "props": Object {},
                                    "shadows": Array [
                                      "none",
                                      "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                      "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                      "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                      "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                      "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                      "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                      "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                      "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                      "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                      "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                      "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                      "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                      "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                      "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                      "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                      "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                      "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                      "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                    ],
                                    "shape": Object {
                                      "borderRadius": 4,
                                    },
                                    "spacing": [Function],
                                    "transitions": Object {
                                      "create": [Function],
                                      "duration": Object {
                                        "complex": 375,
                                        "enteringScreen": 225,
                                        "leavingScreen": 195,
                                        "short": 250,
                                        "shorter": 200,
                                        "shortest": 150,
                                        "standard": 300,
                                      },
                                      "easing": Object {
                                        "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                        "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                        "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                        "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                      },
                                      "getAutoHeightDuration": [Function],
                                    },
                                    "typography": Object {
                                      "body1": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "1rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0.00938em",
                                        "lineHeight": 1.5,
                                      },
                                      "body2": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "0.875rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0.01071em",
                                        "lineHeight": 1.43,
                                      },
                                      "button": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "0.875rem",
                                        "fontWeight": 500,
                                        "letterSpacing": "0.02857em",
                                        "lineHeight": 1.75,
                                        "textTransform": "uppercase",
                                      },
                                      "caption": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "0.75rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0.03333em",
                                        "lineHeight": 1.66,
                                      },
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": 14,
                                      "fontWeightBold": 700,
                                      "fontWeightLight": 300,
                                      "fontWeightMedium": 500,
                                      "fontWeightRegular": 400,
                                      "h1": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "6rem",
                                        "fontWeight": 300,
                                        "letterSpacing": "-0.01562em",
                                        "lineHeight": 1.167,
                                      },
                                      "h2": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "3.75rem",
                                        "fontWeight": 300,
                                        "letterSpacing": "-0.00833em",
                                        "lineHeight": 1.2,
                                      },
                                      "h3": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "3rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0em",
                                        "lineHeight": 1.167,
                                      },
                                      "h4": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "2.125rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0.00735em",
                                        "lineHeight": 1.235,
                                      },
                                      "h5": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "1.5rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0em",
                                        "lineHeight": 1.334,
                                      },
                                      "h6": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "1.25rem",
                                        "fontWeight": 500,
                                        "letterSpacing": "0.0075em",
                                        "lineHeight": 1.6,
                                      },
                                      "htmlFontSize": 16,
                                      "overline": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "0.75rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0.08333em",
                                        "lineHeight": 2.66,
                                        "textTransform": "uppercase",
                                      },
                                      "pxToRem": [Function],
                                      "round": [Function],
                                      "subtitle1": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "1rem",
                                        "fontWeight": 400,
                                        "letterSpacing": "0.00938em",
                                        "lineHeight": 1.75,
                                      },
                                      "subtitle2": Object {
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": "0.875rem",
                                        "fontWeight": 500,
                                        "letterSpacing": "0.00714em",
                                        "lineHeight": 1.57,
                                      },
                                    },
                                    "zIndex": Object {
                                      "appBar": 1100,
                                      "drawer": 1200,
                                      "mobileStepper": 1000,
                                      "modal": 1300,
                                      "snackbar": 1400,
                                      "speedDial": 1050,
                                      "tooltip": 1500,
                                    },
                                  },
                                  "name": "MuiBackdrop",
                                },
                                "propTypes": Object {
                                  "classes": [Function],
                                  "innerRef": [Function],
                                },
                                "render": [Function],
                                "useStyles": [Function],
                              }
                            }
                            BackdropProps={
                              Object {
                                "ref": [Function],
                                "transitionDuration": Object {
                                  "enter": 225,
                                  "exit": 195,
                                },
                              }
                            }
                            className="MuiDrawer-root-112 MuiDrawer-modal-123 makeStyles-modalProps-104"
                            onClose={[Function]}
                            open={false}
                          />
                        </ForwardRef(Drawer)>
                      </WithStyles(ForwardRef(Drawer))>
                      <NoSsr>
                        <WithStyles(ForwardRef(SwipeArea))
                          anchor="left"
                          width={20}
                        >
                          <ForwardRef(SwipeArea)
                            anchor="left"
                            classes={
                              Object {
                                "anchorBottom": "PrivateSwipeArea-anchorBottom-385",
                                "anchorLeft": "PrivateSwipeArea-anchorLeft-382",
                                "anchorRight": "PrivateSwipeArea-anchorRight-383",
                                "anchorTop": "PrivateSwipeArea-anchorTop-384",
                                "root": "PrivateSwipeArea-root-381",
                              }
                            }
                            width={20}
                          >
                            <div
                              className="PrivateSwipeArea-root-381 PrivateSwipeArea-anchorLeft-382"
                              style={
                                Object {
                                  "width": 20,
                                }
                              }
                            />
                          </ForwardRef(SwipeArea)>
                        </WithStyles(ForwardRef(SwipeArea))>
                      </NoSsr>
                    </ForwardRef(SwipeableDrawer)>
                  </Drawer>
                </ThemeProvider>
              </Index>
            </Nav>
            <ScrollToTopButton>
              <ScrollTop>
                <ForwardRef(Zoom)
                  in={false}
                >
                  <Transition
                    appear={true}
                    enter={true}
                    exit={true}
                    in={false}
                    mountOnEnter={false}
                    onEnter={[Function]}
                    onEntered={[Function]}
                    onEntering={[Function]}
                    onExit={[Function]}
                    onExited={[Function]}
                    onExiting={[Function]}
                    timeout={
                      Object {
                        "enter": 225,
                        "exit": 195,
                      }
                    }
                    unmountOnExit={false}
                  >
                    <div
                      className="makeStyles-root-124"
                      onClick={[Function]}
                      role="presentation"
                      style={
                        Object {
                          "transform": "scale(0)",
                          "visibility": "hidden",
                        }
                      }
                    >
                      <WithStyles(ForwardRef(Fab))
                        aria-label="scroll back to top"
                        color="secondary"
                        size="large"
                      >
                        <ForwardRef(Fab)
                          aria-label="scroll back to top"
                          classes={
                            Object {
                              "colorInherit": "MuiFab-colorInherit",
                              "disabled": "Mui-disabled",
                              "extended": "MuiFab-extended",
                              "focusVisible": "Mui-focusVisible",
                              "label": "MuiFab-label",
                              "primary": "MuiFab-primary",
                              "root": "MuiFab-root",
                              "secondary": "MuiFab-secondary",
                              "sizeMedium": "MuiFab-sizeMedium",
                              "sizeSmall": "MuiFab-sizeSmall",
                            }
                          }
                          color="secondary"
                          size="large"
                        >
                          <WithStyles(ForwardRef(ButtonBase))
                            aria-label="scroll back to top"
                            className="MuiFab-root MuiFab-secondary"
                            component="button"
                            disabled={false}
                            focusRipple={true}
                            focusVisibleClassName="Mui-focusVisible"
                          >
                            <ForwardRef(ButtonBase)
                              aria-label="scroll back to top"
                              className="MuiFab-root MuiFab-secondary"
                              classes={
                                Object {
                                  "disabled": "Mui-disabled",
                                  "focusVisible": "Mui-focusVisible",
                                  "root": "MuiButtonBase-root",
                                }
                              }
                              component="button"
                              disabled={false}
                              focusRipple={true}
                              focusVisibleClassName="Mui-focusVisible"
                            >
                              <button
                                aria-label="scroll back to top"
                                className="MuiButtonBase-root MuiFab-root MuiFab-secondary"
                                disabled={false}
                                onBlur={[Function]}
                                onDragLeave={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                tabIndex={0}
                                type="button"
                              >
                                <span
                                  className="MuiFab-label"
                                >
                                  <ChevronUp
                                    color="white"
                                  >
                                    <svg
                                      fill="none"
                                      height={24}
                                      stroke="white"
                                      strokeLinecap="round"
                                      strokeLinejoin="round"
                                      strokeWidth="2"
                                      viewBox="0 0 24 24"
                                      width={24}
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <polyline
                                        points="18 15 12 9 6 15"
                                      />
                                    </svg>
                                  </ChevronUp>
                                </span>
                                <WithStyles(memo)
                                  center={false}
                                >
                                  <ForwardRef(TouchRipple)
                                    center={false}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child",
                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                        "ripple": "MuiTouchRipple-ripple",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                        "root": "MuiTouchRipple-root",
                                      }
                                    }
                                  >
                                    <span
                                      className="MuiTouchRipple-root"
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        component={null}
                                        exit={true}
                                      />
                                    </span>
                                  </ForwardRef(TouchRipple)>
                                </WithStyles(memo)>
                              </button>
                            </ForwardRef(ButtonBase)>
                          </WithStyles(ForwardRef(ButtonBase))>
                        </ForwardRef(Fab)>
                      </WithStyles(ForwardRef(Fab))>
                    </div>
                  </Transition>
                </ForwardRef(Zoom)>
              </ScrollTop>
            </ScrollToTopButton>
            <LandingHeader>
              <ParallaxBanner
                className="makeStyles-root-135"
                disabled={false}
                layers={
                  Array [
                    Object {
                      "amount": 0.05,
                      "children": <div
                        className="makeStyles-appFrameContainer-140"
                      >
                        <Svgurl
                          className="makeStyles-appFrame-141"
                        />
                      </div>,
                    },
                    Object {
                      "amount": -0.7,
                      "children": <Svgurl
                        className="makeStyles-cloudLeft-142"
                      />,
                    },
                    Object {
                      "amount": -0.8,
                      "children": <Svgurl
                        className="makeStyles-cloudBottomRight-144"
                      />,
                    },
                    Object {
                      "amount": -0.15,
                      "children": <Svgurl
                        className="makeStyles-cloudTopRight-143"
                      />,
                    },
                  ]
                }
              >
                <div
                  className="parallax-banner makeStyles-root-135"
                  style={
                    Object {
                      "height": "50vh",
                      "overflow": "hidden",
                      "position": "relative",
                      "width": "100%",
                    }
                  }
                >
                  <WithController
                    disabled={false}
                    key="layer-0"
                    styleInner={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                    styleOuter={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                    y={
                      Array [
                        "-5%",
                        "5%",
                      ]
                    }
                  >
                    <Parallax
                      disabled={false}
                      parallaxController={
                        ParallaxController {
                          "createElement": [Function],
                          "destroy": [Function],
                          "getElements": [Function],
                          "removeElementById": [Function],
                          "resetElementStyles": [Function],
                          "update": [Function],
                          "updateElementPropsById": [Function],
                          "updateScrollContainer": [Function],
                        }
                      }
                      styleInner={
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        }
                      }
                      styleOuter={
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        }
                      }
                      tagInner="div"
                      tagOuter="div"
                      x={
                        Array [
                          0,
                          0,
                        ]
                      }
                      y={
                        Array [
                          "-5%",
                          "5%",
                        ]
                      }
                    >
                      <div
                        className="parallax-outer"
                        style={
                          Object {
                            "bottom": 0,
                            "left": 0,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      >
                        <div
                          className="parallax-inner"
                          style={
                            Object {
                              "bottom": 0,
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        >
                          <div
                            className="parallax-banner-layer-0"
                            style={
                              Object {
                                "bottom": "-5%",
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": "-5%",
                              }
                            }
                          >
                            <div
                              className="makeStyles-appFrameContainer-140"
                            >
                              <Svgurl
                                className="makeStyles-appFrame-141"
                              />
                            </div>
                          </div>
                        </div>
                      </div>
                    </Parallax>
                  </WithController>
                  <WithController
                    disabled={false}
                    key="layer-1"
                    styleInner={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                    styleOuter={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                    y={
                      Array [
                        "70%",
                        "-70%",
                      ]
                    }
                  >
                    <Parallax
                      disabled={false}
                      parallaxController={
                        ParallaxController {
                          "createElement": [Function],
                          "destroy": [Function],
                          "getElements": [Function],
                          "removeElementById": [Function],
                          "resetElementStyles": [Function],
                          "update": [Function],
                          "updateElementPropsById": [Function],
                          "updateScrollContainer": [Function],
                        }
                      }
                      styleInner={
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        }
                      }
                      styleOuter={
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        }
                      }
                      tagInner="div"
                      tagOuter="div"
                      x={
                        Array [
                          0,
                          0,
                        ]
                      }
                      y={
                        Array [
                          "70%",
                          "-70%",
                        ]
                      }
                    >
                      <div
                        className="parallax-outer"
                        style={
                          Object {
                            "bottom": 0,
                            "left": 0,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      >
                        <div
                          className="parallax-inner"
                          style={
                            Object {
                              "bottom": 0,
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        >
                          <div
                            className="parallax-banner-layer-1"
                            style={
                              Object {
                                "bottom": "-70%",
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": "-70%",
                              }
                            }
                          >
                            <Svgurl
                              className="makeStyles-cloudLeft-142"
                            />
                          </div>
                        </div>
                      </div>
                    </Parallax>
                  </WithController>
                  <WithController
                    disabled={false}
                    key="layer-2"
                    styleInner={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                    styleOuter={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                    y={
                      Array [
                        "80%",
                        "-80%",
                      ]
                    }
                  >
                    <Parallax
                      disabled={false}
                      parallaxController={
                        ParallaxController {
                          "createElement": [Function],
                          "destroy": [Function],
                          "getElements": [Function],
                          "removeElementById": [Function],
                          "resetElementStyles": [Function],
                          "update": [Function],
                          "updateElementPropsById": [Function],
                          "updateScrollContainer": [Function],
                        }
                      }
                      styleInner={
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        }
                      }
                      styleOuter={
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        }
                      }
                      tagInner="div"
                      tagOuter="div"
                      x={
                        Array [
                          0,
                          0,
                        ]
                      }
                      y={
                        Array [
                          "80%",
                          "-80%",
                        ]
                      }
                    >
                      <div
                        className="parallax-outer"
                        style={
                          Object {
                            "bottom": 0,
                            "left": 0,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      >
                        <div
                          className="parallax-inner"
                          style={
                            Object {
                              "bottom": 0,
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        >
                          <div
                            className="parallax-banner-layer-2"
                            style={
                              Object {
                                "bottom": "-80%",
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": "-80%",
                              }
                            }
                          >
                            <Svgurl
                              className="makeStyles-cloudBottomRight-144"
                            />
                          </div>
                        </div>
                      </div>
                    </Parallax>
                  </WithController>
                  <WithController
                    disabled={false}
                    key="layer-3"
                    styleInner={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                    styleOuter={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                    y={
                      Array [
                        "15%",
                        "-15%",
                      ]
                    }
                  >
                    <Parallax
                      disabled={false}
                      parallaxController={
                        ParallaxController {
                          "createElement": [Function],
                          "destroy": [Function],
                          "getElements": [Function],
                          "removeElementById": [Function],
                          "resetElementStyles": [Function],
                          "update": [Function],
                          "updateElementPropsById": [Function],
                          "updateScrollContainer": [Function],
                        }
                      }
                      styleInner={
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        }
                      }
                      styleOuter={
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        }
                      }
                      tagInner="div"
                      tagOuter="div"
                      x={
                        Array [
                          0,
                          0,
                        ]
                      }
                      y={
                        Array [
                          "15%",
                          "-15%",
                        ]
                      }
                    >
                      <div
                        className="parallax-outer"
                        style={
                          Object {
                            "bottom": 0,
                            "left": 0,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      >
                        <div
                          className="parallax-inner"
                          style={
                            Object {
                              "bottom": 0,
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        >
                          <div
                            className="parallax-banner-layer-3"
                            style={
                              Object {
                                "bottom": "-15%",
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": "-15%",
                              }
                            }
                          >
                            <Svgurl
                              className="makeStyles-cloudTopRight-143"
                            />
                          </div>
                        </div>
                      </div>
                    </Parallax>
                  </WithController>
                  <div
                    className="makeStyles-ctaOuterContainer-137"
                  >
                    <div
                      className="makeStyles-ctaContainer-138"
                    >
                      <Typography
                        align="center"
                        className="makeStyles-headerText-145"
                        variant="h1"
                      >
                        <WithStyles(ForwardRef(Typography))
                          align="center"
                          className="makeStyles-headerText-145"
                          classes={
                            Object {
                              "colorTextPrimary": "makeStyles-colorTextPrimary-146",
                              "colorTextSecondary": "makeStyles-colorTextSecondary-147",
                            }
                          }
                          variant="h1"
                        >
                          <ForwardRef(Typography)
                            align="center"
                            className="makeStyles-headerText-145"
                            classes={
                              Object {
                                "alignCenter": "MuiTypography-alignCenter",
                                "alignJustify": "MuiTypography-alignJustify",
                                "alignLeft": "MuiTypography-alignLeft",
                                "alignRight": "MuiTypography-alignRight",
                                "body1": "MuiTypography-body1",
                                "body2": "MuiTypography-body2",
                                "button": "MuiTypography-button",
                                "caption": "MuiTypography-caption",
                                "colorError": "MuiTypography-colorError",
                                "colorInherit": "MuiTypography-colorInherit",
                                "colorPrimary": "MuiTypography-colorPrimary",
                                "colorSecondary": "MuiTypography-colorSecondary",
                                "colorTextPrimary": "MuiTypography-colorTextPrimary makeStyles-colorTextPrimary-146",
                                "colorTextSecondary": "MuiTypography-colorTextSecondary makeStyles-colorTextSecondary-147",
                                "displayBlock": "MuiTypography-displayBlock",
                                "displayInline": "MuiTypography-displayInline",
                                "gutterBottom": "MuiTypography-gutterBottom",
                                "h1": "MuiTypography-h1",
                                "h2": "MuiTypography-h2",
                                "h3": "MuiTypography-h3",
                                "h4": "MuiTypography-h4",
                                "h5": "MuiTypography-h5",
                                "h6": "MuiTypography-h6",
                                "noWrap": "MuiTypography-noWrap",
                                "overline": "MuiTypography-overline",
                                "paragraph": "MuiTypography-paragraph",
                                "root": "MuiTypography-root",
                                "srOnly": "MuiTypography-srOnly",
                                "subtitle1": "MuiTypography-subtitle1",
                                "subtitle2": "MuiTypography-subtitle2",
                              }
                            }
                            variant="h1"
                          >
                            <h1
                              className="MuiTypography-root makeStyles-headerText-145 MuiTypography-h1 MuiTypography-alignCenter"
                            >
                              Inspiration in the cloud
                            </h1>
                          </ForwardRef(Typography)>
                        </WithStyles(ForwardRef(Typography))>
                      </Typography>
                      <Typography
                        align="center"
                        variant="body1"
                      >
                        <WithStyles(ForwardRef(Typography))
                          align="center"
                          classes={
                            Object {
                              "colorTextPrimary": "makeStyles-colorTextPrimary-146",
                              "colorTextSecondary": "makeStyles-colorTextSecondary-147",
                            }
                          }
                          variant="body1"
                        >
                          <ForwardRef(Typography)
                            align="center"
                            classes={
                              Object {
                                "alignCenter": "MuiTypography-alignCenter",
                                "alignJustify": "MuiTypography-alignJustify",
                                "alignLeft": "MuiTypography-alignLeft",
                                "alignRight": "MuiTypography-alignRight",
                                "body1": "MuiTypography-body1",
                                "body2": "MuiTypography-body2",
                                "button": "MuiTypography-button",
                                "caption": "MuiTypography-caption",
                                "colorError": "MuiTypography-colorError",
                                "colorInherit": "MuiTypography-colorInherit",
                                "colorPrimary": "MuiTypography-colorPrimary",
                                "colorSecondary": "MuiTypography-colorSecondary",
                                "colorTextPrimary": "MuiTypography-colorTextPrimary makeStyles-colorTextPrimary-146",
                                "colorTextSecondary": "MuiTypography-colorTextSecondary makeStyles-colorTextSecondary-147",
                                "displayBlock": "MuiTypography-displayBlock",
                                "displayInline": "MuiTypography-displayInline",
                                "gutterBottom": "MuiTypography-gutterBottom",
                                "h1": "MuiTypography-h1",
                                "h2": "MuiTypography-h2",
                                "h3": "MuiTypography-h3",
                                "h4": "MuiTypography-h4",
                                "h5": "MuiTypography-h5",
                                "h6": "MuiTypography-h6",
                                "noWrap": "MuiTypography-noWrap",
                                "overline": "MuiTypography-overline",
                                "paragraph": "MuiTypography-paragraph",
                                "root": "MuiTypography-root",
                                "srOnly": "MuiTypography-srOnly",
                                "subtitle1": "MuiTypography-subtitle1",
                                "subtitle2": "MuiTypography-subtitle2",
                              }
                            }
                            variant="body1"
                          >
                            <p
                              className="MuiTypography-root MuiTypography-body1 MuiTypography-alignCenter"
                            >
                              Build beautiful color palettes for your next project using images
                            </p>
                          </ForwardRef(Typography)>
                        </WithStyles(ForwardRef(Typography))>
                      </Typography>
                      <div
                        className="makeStyles-buttonGroupContainer-139"
                      >
                        <Button
                          addGlow={false}
                          color="primary"
                          component={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "render": [Function],
                            }
                          }
                          href="/color-studio"
                          paddingRight={true}
                          variant="contained"
                        >
                          <div
                            className="makeStyles-addRightPadding-182"
                          >
                            <WithStyles(ForwardRef(Button))
                              classes={
                                Object {
                                  "containedPrimary": "makeStyles-containedPrimary-180",
                                  "containedSecondary": "makeStyles-containedSecondary-181",
                                  "label": "makeStyles-buttonLabel-179",
                                  "root": "makeStyles-root-178",
                                }
                              }
                              color="primary"
                              component={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                }
                              }
                              disableRipple={true}
                              href="/color-studio"
                              variant="contained"
                            >
                              <ForwardRef(Button)
                                classes={
                                  Object {
                                    "colorInherit": "MuiButton-colorInherit",
                                    "contained": "MuiButton-contained",
                                    "containedPrimary": "MuiButton-containedPrimary makeStyles-containedPrimary-180",
                                    "containedSecondary": "MuiButton-containedSecondary makeStyles-containedSecondary-181",
                                    "containedSizeLarge": "MuiButton-containedSizeLarge",
                                    "containedSizeSmall": "MuiButton-containedSizeSmall",
                                    "disableElevation": "MuiButton-disableElevation",
                                    "disabled": "Mui-disabled",
                                    "endIcon": "MuiButton-endIcon",
                                    "focusVisible": "Mui-focusVisible",
                                    "fullWidth": "MuiButton-fullWidth",
                                    "iconSizeLarge": "MuiButton-iconSizeLarge",
                                    "iconSizeMedium": "MuiButton-iconSizeMedium",
                                    "iconSizeSmall": "MuiButton-iconSizeSmall",
                                    "label": "MuiButton-label makeStyles-buttonLabel-179",
                                    "outlined": "MuiButton-outlined",
                                    "outlinedPrimary": "MuiButton-outlinedPrimary",
                                    "outlinedSecondary": "MuiButton-outlinedSecondary",
                                    "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                    "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                    "root": "MuiButton-root makeStyles-root-178",
                                    "sizeLarge": "MuiButton-sizeLarge",
                                    "sizeSmall": "MuiButton-sizeSmall",
                                    "startIcon": "MuiButton-startIcon",
                                    "text": "MuiButton-text",
                                    "textPrimary": "MuiButton-textPrimary",
                                    "textSecondary": "MuiButton-textSecondary",
                                    "textSizeLarge": "MuiButton-textSizeLarge",
                                    "textSizeSmall": "MuiButton-textSizeSmall",
                                  }
                                }
                                color="primary"
                                component={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  }
                                }
                                disableRipple={true}
                                href="/color-studio"
                                variant="contained"
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiButton-root makeStyles-root-178 MuiButton-contained MuiButton-containedPrimary makeStyles-containedPrimary-180"
                                  component={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    }
                                  }
                                  disableRipple={true}
                                  disabled={false}
                                  focusRipple={true}
                                  focusVisibleClassName="Mui-focusVisible"
                                  href="/color-studio"
                                  type="button"
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiButton-root makeStyles-root-178 MuiButton-contained MuiButton-containedPrimary makeStyles-containedPrimary-180"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "render": [Function],
                                      }
                                    }
                                    disableRipple={true}
                                    disabled={false}
                                    focusRipple={true}
                                    focusVisibleClassName="Mui-focusVisible"
                                    href="/color-studio"
                                    type="button"
                                  >
                                    <ForwardRef
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiButton-root makeStyles-root-178 MuiButton-contained MuiButton-containedPrimary makeStyles-containedPrimary-180"
                                      href="/color-studio"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      <BaseLink
                                        aria-disabled={false}
                                        className="MuiButtonBase-root MuiButton-root makeStyles-root-178 MuiButton-contained MuiButton-containedPrimary makeStyles-containedPrimary-180"
                                        href="/color-studio"
                                        innerRef={[Function]}
                                        onBlur={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        role="button"
                                        tabIndex={0}
                                      >
                                        <WithStyles(ForwardRef(Link))
                                          aria-disabled={false}
                                          className="MuiButtonBase-root MuiButton-root makeStyles-root-178 MuiButton-contained MuiButton-containedPrimary makeStyles-containedPrimary-180"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "propTypes": Object {},
                                              "render": [Function],
                                            }
                                          }
                                          href="/color-studio"
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          role="button"
                                          tabIndex={0}
                                        >
                                          <ForwardRef(Link)
                                            aria-disabled={false}
                                            className="MuiButtonBase-root MuiButton-root makeStyles-root-178 MuiButton-contained MuiButton-containedPrimary makeStyles-containedPrimary-180"
                                            classes={
                                              Object {
                                                "button": "MuiLink-button",
                                                "focusVisible": "Mui-focusVisible",
                                                "root": "MuiLink-root",
                                                "underlineAlways": "MuiLink-underlineAlways",
                                                "underlineHover": "MuiLink-underlineHover",
                                                "underlineNone": "MuiLink-underlineNone",
                                              }
                                            }
                                            component={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "propTypes": Object {},
                                                "render": [Function],
                                              }
                                            }
                                            href="/color-studio"
                                            onBlur={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            role="button"
                                            tabIndex={0}
                                          >
                                            <WithStyles(ForwardRef(Typography))
                                              aria-disabled={false}
                                              className="MuiLink-root MuiLink-underlineHover MuiButtonBase-root MuiButton-root makeStyles-root-178 MuiButton-contained MuiButton-containedPrimary makeStyles-containedPrimary-180"
                                              color="primary"
                                              component={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "propTypes": Object {},
                                                  "render": [Function],
                                                }
                                              }
                                              href="/color-studio"
                                              onBlur={[Function]}
                                              onDragLeave={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              role="button"
                                              tabIndex={0}
                                              variant="inherit"
                                            >
                                              <ForwardRef(Typography)
                                                aria-disabled={false}
                                                className="MuiLink-root MuiLink-underlineHover MuiButtonBase-root MuiButton-root makeStyles-root-178 MuiButton-contained MuiButton-containedPrimary makeStyles-containedPrimary-180"
                                                classes={
                                                  Object {
                                                    "alignCenter": "MuiTypography-alignCenter",
                                                    "alignJustify": "MuiTypography-alignJustify",
                                                    "alignLeft": "MuiTypography-alignLeft",
                                                    "alignRight": "MuiTypography-alignRight",
                                                    "body1": "MuiTypography-body1",
                                                    "body2": "MuiTypography-body2",
                                                    "button": "MuiTypography-button",
                                                    "caption": "MuiTypography-caption",
                                                    "colorError": "MuiTypography-colorError",
                                                    "colorInherit": "MuiTypography-colorInherit",
                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                    "displayBlock": "MuiTypography-displayBlock",
                                                    "displayInline": "MuiTypography-displayInline",
                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                    "h1": "MuiTypography-h1",
                                                    "h2": "MuiTypography-h2",
                                                    "h3": "MuiTypography-h3",
                                                    "h4": "MuiTypography-h4",
                                                    "h5": "MuiTypography-h5",
                                                    "h6": "MuiTypography-h6",
                                                    "noWrap": "MuiTypography-noWrap",
                                                    "overline": "MuiTypography-overline",
                                                    "paragraph": "MuiTypography-paragraph",
                                                    "root": "MuiTypography-root",
                                                    "srOnly": "MuiTypography-srOnly",
                                                    "subtitle1": "MuiTypography-subtitle1",
                                                    "subtitle2": "MuiTypography-subtitle2",
                                                  }
                                                }
                                                color="primary"
                                                component={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "propTypes": Object {},
                                                    "render": [Function],
                                                  }
                                                }
                                                href="/color-studio"
                                                onBlur={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                role="button"
                                                tabIndex={0}
                                                variant="inherit"
                                              >
                                                <ForwardRef(NextComposed)
                                                  aria-disabled={false}
                                                  className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiButtonBase-root MuiButton-root makeStyles-root-178 MuiButton-contained MuiButton-containedPrimary makeStyles-containedPrimary-180 MuiTypography-colorPrimary"
                                                  href="/color-studio"
                                                  onBlur={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  role="button"
                                                  tabIndex={0}
                                                >
                                                  <Link
                                                    href="/color-studio"
                                                  >
                                                    <a
                                                      aria-disabled={false}
                                                      className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiButtonBase-root MuiButton-root makeStyles-root-178 MuiButton-contained MuiButton-containedPrimary makeStyles-containedPrimary-180 MuiTypography-colorPrimary"
                                                      href="/color-studio"
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseEnter={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      role="button"
                                                      tabIndex={0}
                                                    >
                                                      <span
                                                        className="MuiButton-label makeStyles-buttonLabel-179"
                                                      >
                                                        Get Started
                                                      </span>
                                                    </a>
                                                  </Link>
                                                </ForwardRef(NextComposed)>
                                              </ForwardRef(Typography)>
                                            </WithStyles(ForwardRef(Typography))>
                                          </ForwardRef(Link)>
                                        </WithStyles(ForwardRef(Link))>
                                      </BaseLink>
                                    </ForwardRef>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(Button)>
                            </WithStyles(ForwardRef(Button))>
                          </div>
                        </Button>
                        <Button
                          addGlow={false}
                          color="secondary"
                          component="a"
                          href="https://en.wikipedia.org/wiki/Color_quantization"
                          paddingRight={false}
                          startIcon={
                            <ExternalLink
                              color="black"
                              size={18}
                            />
                          }
                          variant="contained"
                        >
                          <div
                            className=""
                          >
                            <WithStyles(ForwardRef(Button))
                              classes={
                                Object {
                                  "containedPrimary": "makeStyles-containedPrimary-180",
                                  "containedSecondary": "makeStyles-containedSecondary-181",
                                  "label": "makeStyles-buttonLabel-179",
                                  "root": "makeStyles-root-178",
                                }
                              }
                              color="secondary"
                              component="a"
                              disableRipple={true}
                              href="https://en.wikipedia.org/wiki/Color_quantization"
                              startIcon={
                                <ExternalLink
                                  color="black"
                                  size={18}
                                />
                              }
                              variant="contained"
                            >
                              <ForwardRef(Button)
                                classes={
                                  Object {
                                    "colorInherit": "MuiButton-colorInherit",
                                    "contained": "MuiButton-contained",
                                    "containedPrimary": "MuiButton-containedPrimary makeStyles-containedPrimary-180",
                                    "containedSecondary": "MuiButton-containedSecondary makeStyles-containedSecondary-181",
                                    "containedSizeLarge": "MuiButton-containedSizeLarge",
                                    "containedSizeSmall": "MuiButton-containedSizeSmall",
                                    "disableElevation": "MuiButton-disableElevation",
                                    "disabled": "Mui-disabled",
                                    "endIcon": "MuiButton-endIcon",
                                    "focusVisible": "Mui-focusVisible",
                                    "fullWidth": "MuiButton-fullWidth",
                                    "iconSizeLarge": "MuiButton-iconSizeLarge",
                                    "iconSizeMedium": "MuiButton-iconSizeMedium",
                                    "iconSizeSmall": "MuiButton-iconSizeSmall",
                                    "label": "MuiButton-label makeStyles-buttonLabel-179",
                                    "outlined": "MuiButton-outlined",
                                    "outlinedPrimary": "MuiButton-outlinedPrimary",
                                    "outlinedSecondary": "MuiButton-outlinedSecondary",
                                    "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                    "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                    "root": "MuiButton-root makeStyles-root-178",
                                    "sizeLarge": "MuiButton-sizeLarge",
                                    "sizeSmall": "MuiButton-sizeSmall",
                                    "startIcon": "MuiButton-startIcon",
                                    "text": "MuiButton-text",
                                    "textPrimary": "MuiButton-textPrimary",
                                    "textSecondary": "MuiButton-textSecondary",
                                    "textSizeLarge": "MuiButton-textSizeLarge",
                                    "textSizeSmall": "MuiButton-textSizeSmall",
                                  }
                                }
                                color="secondary"
                                component="a"
                                disableRipple={true}
                                href="https://en.wikipedia.org/wiki/Color_quantization"
                                startIcon={
                                  <ExternalLink
                                    color="black"
                                    size={18}
                                  />
                                }
                                variant="contained"
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiButton-root makeStyles-root-178 MuiButton-contained MuiButton-containedSecondary makeStyles-containedSecondary-181"
                                  component="a"
                                  disableRipple={true}
                                  disabled={false}
                                  focusRipple={true}
                                  focusVisibleClassName="Mui-focusVisible"
                                  href="https://en.wikipedia.org/wiki/Color_quantization"
                                  type="button"
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiButton-root makeStyles-root-178 MuiButton-contained MuiButton-containedSecondary makeStyles-containedSecondary-181"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="a"
                                    disableRipple={true}
                                    disabled={false}
                                    focusRipple={true}
                                    focusVisibleClassName="Mui-focusVisible"
                                    href="https://en.wikipedia.org/wiki/Color_quantization"
                                    type="button"
                                  >
                                    <a
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiButton-root makeStyles-root-178 MuiButton-contained MuiButton-containedSecondary makeStyles-containedSecondary-181"
                                      href="https://en.wikipedia.org/wiki/Color_quantization"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={0}
                                    >
                                      <span
                                        className="MuiButton-label makeStyles-buttonLabel-179"
                                      >
                                        <span
                                          className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                        >
                                          <ExternalLink
                                            color="black"
                                            size={18}
                                          >
                                            <svg
                                              fill="none"
                                              height={18}
                                              stroke="black"
                                              strokeLinecap="round"
                                              strokeLinejoin="round"
                                              strokeWidth="2"
                                              viewBox="0 0 24 24"
                                              width={18}
                                              xmlns="http://www.w3.org/2000/svg"
                                            >
                                              <path
                                                d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"
                                              />
                                              <polyline
                                                points="15 3 21 3 21 9"
                                              />
                                              <line
                                                x1="10"
                                                x2="21"
                                                y1="14"
                                                y2="3"
                                              />
                                            </svg>
                                          </ExternalLink>
                                        </span>
                                        Learn more
                                      </span>
                                    </a>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(Button)>
                            </WithStyles(ForwardRef(Button))>
                          </div>
                        </Button>
                      </div>
                    </div>
                  </div>
                </div>
              </ParallaxBanner>
            </LandingHeader>
            <LandingSection
              backgroundColor="default"
              flexRowDirection="row-reverse"
              leftChild={
                <div
                  className="makeStyles-textContentContainer-4"
                >
                  <Typography
                    align="left"
                    color="textPrimary"
                    gutterBottom={true}
                    variant="h3"
                  >
                    Inspiration through technology
                  </Typography>
                  <Typography
                    align="left"
                    className="makeStyles-textDescriptionContainer-5"
                    color="textSecondary"
                    gutterBottom={true}
                    variant="body1"
                  >
                    Discover the power of Color Quantization via the Cinderblox Color Studio. By leveraging open-source image analysis tools you can turn a given image into a beautiful color palette for your next creative project!
                  </Typography>
                  <div
                    className="makeStyles-landingSectionCTAButtonContainer-6"
                  >
                    <Button
                      addGlow={false}
                      color="primary"
                      component={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        }
                      }
                      href="/color-studio"
                      paddingRight={false}
                      variant="contained"
                    >
                      Find your palette
                    </Button>
                  </div>
                </div>
              }
              leftGridItemProps={
                Object {
                  "md": 5,
                  "xs": 12,
                }
              }
              rightChild={
                <Svgurl
                  className="makeStyles-presentation-2"
                />
              }
              rightGridItemProps={
                Object {
                  "md": 7,
                  "xs": 12,
                }
              }
            >
              <WithStyles(ForwardRef(Paper))
                className="makeStyles-root-220 makeStyles-defaultBackground-221"
                elevation={0}
                square={true}
              >
                <ForwardRef(Paper)
                  className="makeStyles-root-220 makeStyles-defaultBackground-221"
                  classes={
                    Object {
                      "elevation0": "MuiPaper-elevation0",
                      "elevation1": "MuiPaper-elevation1",
                      "elevation10": "MuiPaper-elevation10",
                      "elevation11": "MuiPaper-elevation11",
                      "elevation12": "MuiPaper-elevation12",
                      "elevation13": "MuiPaper-elevation13",
                      "elevation14": "MuiPaper-elevation14",
                      "elevation15": "MuiPaper-elevation15",
                      "elevation16": "MuiPaper-elevation16",
                      "elevation17": "MuiPaper-elevation17",
                      "elevation18": "MuiPaper-elevation18",
                      "elevation19": "MuiPaper-elevation19",
                      "elevation2": "MuiPaper-elevation2",
                      "elevation20": "MuiPaper-elevation20",
                      "elevation21": "MuiPaper-elevation21",
                      "elevation22": "MuiPaper-elevation22",
                      "elevation23": "MuiPaper-elevation23",
                      "elevation24": "MuiPaper-elevation24",
                      "elevation3": "MuiPaper-elevation3",
                      "elevation4": "MuiPaper-elevation4",
                      "elevation5": "MuiPaper-elevation5",
                      "elevation6": "MuiPaper-elevation6",
                      "elevation7": "MuiPaper-elevation7",
                      "elevation8": "MuiPaper-elevation8",
                      "elevation9": "MuiPaper-elevation9",
                      "outlined": "MuiPaper-outlined",
                      "root": "MuiPaper-root",
                      "rounded": "MuiPaper-rounded",
                    }
                  }
                  elevation={0}
                  square={true}
                >
                  <div
                    className="MuiPaper-root makeStyles-root-220 makeStyles-defaultBackground-221 MuiPaper-elevation0"
                  >
                    <ContentMarginContainer>
                      <div
                        className="makeStyles-root-225"
                      >
                        <GridContainer
                          direction="row-reverse"
                        >
                          <WithStyles(ForwardRef(Grid))
                            container={true}
                            direction="row-reverse"
                          >
                            <ForwardRef(Grid)
                              classes={
                                Object {
                                  "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                  "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                  "container": "MuiGrid-container",
                                  "direction-xs-column": "MuiGrid-direction-xs-column",
                                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                  "grid-lg-1": "MuiGrid-grid-lg-1",
                                  "grid-lg-10": "MuiGrid-grid-lg-10",
                                  "grid-lg-11": "MuiGrid-grid-lg-11",
                                  "grid-lg-12": "MuiGrid-grid-lg-12",
                                  "grid-lg-2": "MuiGrid-grid-lg-2",
                                  "grid-lg-3": "MuiGrid-grid-lg-3",
                                  "grid-lg-4": "MuiGrid-grid-lg-4",
                                  "grid-lg-5": "MuiGrid-grid-lg-5",
                                  "grid-lg-6": "MuiGrid-grid-lg-6",
                                  "grid-lg-7": "MuiGrid-grid-lg-7",
                                  "grid-lg-8": "MuiGrid-grid-lg-8",
                                  "grid-lg-9": "MuiGrid-grid-lg-9",
                                  "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                  "grid-lg-true": "MuiGrid-grid-lg-true",
                                  "grid-md-1": "MuiGrid-grid-md-1",
                                  "grid-md-10": "MuiGrid-grid-md-10",
                                  "grid-md-11": "MuiGrid-grid-md-11",
                                  "grid-md-12": "MuiGrid-grid-md-12",
                                  "grid-md-2": "MuiGrid-grid-md-2",
                                  "grid-md-3": "MuiGrid-grid-md-3",
                                  "grid-md-4": "MuiGrid-grid-md-4",
                                  "grid-md-5": "MuiGrid-grid-md-5",
                                  "grid-md-6": "MuiGrid-grid-md-6",
                                  "grid-md-7": "MuiGrid-grid-md-7",
                                  "grid-md-8": "MuiGrid-grid-md-8",
                                  "grid-md-9": "MuiGrid-grid-md-9",
                                  "grid-md-auto": "MuiGrid-grid-md-auto",
                                  "grid-md-true": "MuiGrid-grid-md-true",
                                  "grid-sm-1": "MuiGrid-grid-sm-1",
                                  "grid-sm-10": "MuiGrid-grid-sm-10",
                                  "grid-sm-11": "MuiGrid-grid-sm-11",
                                  "grid-sm-12": "MuiGrid-grid-sm-12",
                                  "grid-sm-2": "MuiGrid-grid-sm-2",
                                  "grid-sm-3": "MuiGrid-grid-sm-3",
                                  "grid-sm-4": "MuiGrid-grid-sm-4",
                                  "grid-sm-5": "MuiGrid-grid-sm-5",
                                  "grid-sm-6": "MuiGrid-grid-sm-6",
                                  "grid-sm-7": "MuiGrid-grid-sm-7",
                                  "grid-sm-8": "MuiGrid-grid-sm-8",
                                  "grid-sm-9": "MuiGrid-grid-sm-9",
                                  "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                  "grid-sm-true": "MuiGrid-grid-sm-true",
                                  "grid-xl-1": "MuiGrid-grid-xl-1",
                                  "grid-xl-10": "MuiGrid-grid-xl-10",
                                  "grid-xl-11": "MuiGrid-grid-xl-11",
                                  "grid-xl-12": "MuiGrid-grid-xl-12",
                                  "grid-xl-2": "MuiGrid-grid-xl-2",
                                  "grid-xl-3": "MuiGrid-grid-xl-3",
                                  "grid-xl-4": "MuiGrid-grid-xl-4",
                                  "grid-xl-5": "MuiGrid-grid-xl-5",
                                  "grid-xl-6": "MuiGrid-grid-xl-6",
                                  "grid-xl-7": "MuiGrid-grid-xl-7",
                                  "grid-xl-8": "MuiGrid-grid-xl-8",
                                  "grid-xl-9": "MuiGrid-grid-xl-9",
                                  "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                  "grid-xl-true": "MuiGrid-grid-xl-true",
                                  "grid-xs-1": "MuiGrid-grid-xs-1",
                                  "grid-xs-10": "MuiGrid-grid-xs-10",
                                  "grid-xs-11": "MuiGrid-grid-xs-11",
                                  "grid-xs-12": "MuiGrid-grid-xs-12",
                                  "grid-xs-2": "MuiGrid-grid-xs-2",
                                  "grid-xs-3": "MuiGrid-grid-xs-3",
                                  "grid-xs-4": "MuiGrid-grid-xs-4",
                                  "grid-xs-5": "MuiGrid-grid-xs-5",
                                  "grid-xs-6": "MuiGrid-grid-xs-6",
                                  "grid-xs-7": "MuiGrid-grid-xs-7",
                                  "grid-xs-8": "MuiGrid-grid-xs-8",
                                  "grid-xs-9": "MuiGrid-grid-xs-9",
                                  "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                  "grid-xs-true": "MuiGrid-grid-xs-true",
                                  "item": "MuiGrid-item",
                                  "justify-xs-center": "MuiGrid-justify-xs-center",
                                  "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                  "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                  "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                  "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                  "root": "MuiGrid-root",
                                  "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                  "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                  "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                  "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                  "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                  "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                  "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                  "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                  "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                  "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                  "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                }
                              }
                              container={true}
                              direction="row-reverse"
                            >
                              <div
                                className="MuiGrid-root MuiGrid-container MuiGrid-direction-xs-row-reverse"
                              >
                                <GridItem
                                  md={5}
                                  xs={12}
                                >
                                  <WithStyles(ForwardRef(Grid))
                                    item={true}
                                    md={5}
                                    xs={12}
                                  >
                                    <ForwardRef(Grid)
                                      classes={
                                        Object {
                                          "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                          "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                          "container": "MuiGrid-container",
                                          "direction-xs-column": "MuiGrid-direction-xs-column",
                                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                          "grid-lg-1": "MuiGrid-grid-lg-1",
                                          "grid-lg-10": "MuiGrid-grid-lg-10",
                                          "grid-lg-11": "MuiGrid-grid-lg-11",
                                          "grid-lg-12": "MuiGrid-grid-lg-12",
                                          "grid-lg-2": "MuiGrid-grid-lg-2",
                                          "grid-lg-3": "MuiGrid-grid-lg-3",
                                          "grid-lg-4": "MuiGrid-grid-lg-4",
                                          "grid-lg-5": "MuiGrid-grid-lg-5",
                                          "grid-lg-6": "MuiGrid-grid-lg-6",
                                          "grid-lg-7": "MuiGrid-grid-lg-7",
                                          "grid-lg-8": "MuiGrid-grid-lg-8",
                                          "grid-lg-9": "MuiGrid-grid-lg-9",
                                          "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                          "grid-lg-true": "MuiGrid-grid-lg-true",
                                          "grid-md-1": "MuiGrid-grid-md-1",
                                          "grid-md-10": "MuiGrid-grid-md-10",
                                          "grid-md-11": "MuiGrid-grid-md-11",
                                          "grid-md-12": "MuiGrid-grid-md-12",
                                          "grid-md-2": "MuiGrid-grid-md-2",
                                          "grid-md-3": "MuiGrid-grid-md-3",
                                          "grid-md-4": "MuiGrid-grid-md-4",
                                          "grid-md-5": "MuiGrid-grid-md-5",
                                          "grid-md-6": "MuiGrid-grid-md-6",
                                          "grid-md-7": "MuiGrid-grid-md-7",
                                          "grid-md-8": "MuiGrid-grid-md-8",
                                          "grid-md-9": "MuiGrid-grid-md-9",
                                          "grid-md-auto": "MuiGrid-grid-md-auto",
                                          "grid-md-true": "MuiGrid-grid-md-true",
                                          "grid-sm-1": "MuiGrid-grid-sm-1",
                                          "grid-sm-10": "MuiGrid-grid-sm-10",
                                          "grid-sm-11": "MuiGrid-grid-sm-11",
                                          "grid-sm-12": "MuiGrid-grid-sm-12",
                                          "grid-sm-2": "MuiGrid-grid-sm-2",
                                          "grid-sm-3": "MuiGrid-grid-sm-3",
                                          "grid-sm-4": "MuiGrid-grid-sm-4",
                                          "grid-sm-5": "MuiGrid-grid-sm-5",
                                          "grid-sm-6": "MuiGrid-grid-sm-6",
                                          "grid-sm-7": "MuiGrid-grid-sm-7",
                                          "grid-sm-8": "MuiGrid-grid-sm-8",
                                          "grid-sm-9": "MuiGrid-grid-sm-9",
                                          "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                          "grid-sm-true": "MuiGrid-grid-sm-true",
                                          "grid-xl-1": "MuiGrid-grid-xl-1",
                                          "grid-xl-10": "MuiGrid-grid-xl-10",
                                          "grid-xl-11": "MuiGrid-grid-xl-11",
                                          "grid-xl-12": "MuiGrid-grid-xl-12",
                                          "grid-xl-2": "MuiGrid-grid-xl-2",
                                          "grid-xl-3": "MuiGrid-grid-xl-3",
                                          "grid-xl-4": "MuiGrid-grid-xl-4",
                                          "grid-xl-5": "MuiGrid-grid-xl-5",
                                          "grid-xl-6": "MuiGrid-grid-xl-6",
                                          "grid-xl-7": "MuiGrid-grid-xl-7",
                                          "grid-xl-8": "MuiGrid-grid-xl-8",
                                          "grid-xl-9": "MuiGrid-grid-xl-9",
                                          "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                          "grid-xl-true": "MuiGrid-grid-xl-true",
                                          "grid-xs-1": "MuiGrid-grid-xs-1",
                                          "grid-xs-10": "MuiGrid-grid-xs-10",
                                          "grid-xs-11": "MuiGrid-grid-xs-11",
                                          "grid-xs-12": "MuiGrid-grid-xs-12",
                                          "grid-xs-2": "MuiGrid-grid-xs-2",
                                          "grid-xs-3": "MuiGrid-grid-xs-3",
                                          "grid-xs-4": "MuiGrid-grid-xs-4",
                                          "grid-xs-5": "MuiGrid-grid-xs-5",
                                          "grid-xs-6": "MuiGrid-grid-xs-6",
                                          "grid-xs-7": "MuiGrid-grid-xs-7",
                                          "grid-xs-8": "MuiGrid-grid-xs-8",
                                          "grid-xs-9": "MuiGrid-grid-xs-9",
                                          "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                          "grid-xs-true": "MuiGrid-grid-xs-true",
                                          "item": "MuiGrid-item",
                                          "justify-xs-center": "MuiGrid-justify-xs-center",
                                          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                          "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                          "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                          "root": "MuiGrid-root",
                                          "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                          "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                          "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                          "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                          "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                          "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                          "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                          "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                          "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                          "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                          "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                        }
                                      }
                                      item={true}
                                      md={5}
                                      xs={12}
                                    >
                                      <div
                                        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-5"
                                      >
                                        <div
                                          className="makeStyles-textContentContainer-4"
                                        >
                                          <Typography
                                            align="left"
                                            color="textPrimary"
                                            gutterBottom={true}
                                            variant="h3"
                                          >
                                            <WithStyles(ForwardRef(Typography))
                                              align="left"
                                              classes={
                                                Object {
                                                  "colorTextPrimary": "makeStyles-colorTextPrimary-146",
                                                  "colorTextSecondary": "makeStyles-colorTextSecondary-147",
                                                }
                                              }
                                              color="textPrimary"
                                              gutterBottom={true}
                                              variant="h3"
                                            >
                                              <ForwardRef(Typography)
                                                align="left"
                                                classes={
                                                  Object {
                                                    "alignCenter": "MuiTypography-alignCenter",
                                                    "alignJustify": "MuiTypography-alignJustify",
                                                    "alignLeft": "MuiTypography-alignLeft",
                                                    "alignRight": "MuiTypography-alignRight",
                                                    "body1": "MuiTypography-body1",
                                                    "body2": "MuiTypography-body2",
                                                    "button": "MuiTypography-button",
                                                    "caption": "MuiTypography-caption",
                                                    "colorError": "MuiTypography-colorError",
                                                    "colorInherit": "MuiTypography-colorInherit",
                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary makeStyles-colorTextPrimary-146",
                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary makeStyles-colorTextSecondary-147",
                                                    "displayBlock": "MuiTypography-displayBlock",
                                                    "displayInline": "MuiTypography-displayInline",
                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                    "h1": "MuiTypography-h1",
                                                    "h2": "MuiTypography-h2",
                                                    "h3": "MuiTypography-h3",
                                                    "h4": "MuiTypography-h4",
                                                    "h5": "MuiTypography-h5",
                                                    "h6": "MuiTypography-h6",
                                                    "noWrap": "MuiTypography-noWrap",
                                                    "overline": "MuiTypography-overline",
                                                    "paragraph": "MuiTypography-paragraph",
                                                    "root": "MuiTypography-root",
                                                    "srOnly": "MuiTypography-srOnly",
                                                    "subtitle1": "MuiTypography-subtitle1",
                                                    "subtitle2": "MuiTypography-subtitle2",
                                                  }
                                                }
                                                color="textPrimary"
                                                gutterBottom={true}
                                                variant="h3"
                                              >
                                                <h3
                                                  className="MuiTypography-root MuiTypography-h3 MuiTypography-colorTextPrimary makeStyles-colorTextPrimary-146 MuiTypography-gutterBottom MuiTypography-alignLeft"
                                                >
                                                  Inspiration through technology
                                                </h3>
                                              </ForwardRef(Typography)>
                                            </WithStyles(ForwardRef(Typography))>
                                          </Typography>
                                          <Typography
                                            align="left"
                                            className="makeStyles-textDescriptionContainer-5"
                                            color="textSecondary"
                                            gutterBottom={true}
                                            variant="body1"
                                          >
                                            <WithStyles(ForwardRef(Typography))
                                              align="left"
                                              className="makeStyles-textDescriptionContainer-5"
                                              classes={
                                                Object {
                                                  "colorTextPrimary": "makeStyles-colorTextPrimary-146",
                                                  "colorTextSecondary": "makeStyles-colorTextSecondary-147",
                                                }
                                              }
                                              color="textSecondary"
                                              gutterBottom={true}
                                              variant="body1"
                                            >
                                              <ForwardRef(Typography)
                                                align="left"
                                                className="makeStyles-textDescriptionContainer-5"
                                                classes={
                                                  Object {
                                                    "alignCenter": "MuiTypography-alignCenter",
                                                    "alignJustify": "MuiTypography-alignJustify",
                                                    "alignLeft": "MuiTypography-alignLeft",
                                                    "alignRight": "MuiTypography-alignRight",
                                                    "body1": "MuiTypography-body1",
                                                    "body2": "MuiTypography-body2",
                                                    "button": "MuiTypography-button",
                                                    "caption": "MuiTypography-caption",
                                                    "colorError": "MuiTypography-colorError",
                                                    "colorInherit": "MuiTypography-colorInherit",
                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary makeStyles-colorTextPrimary-146",
                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary makeStyles-colorTextSecondary-147",
                                                    "displayBlock": "MuiTypography-displayBlock",
                                                    "displayInline": "MuiTypography-displayInline",
                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                    "h1": "MuiTypography-h1",
                                                    "h2": "MuiTypography-h2",
                                                    "h3": "MuiTypography-h3",
                                                    "h4": "MuiTypography-h4",
                                                    "h5": "MuiTypography-h5",
                                                    "h6": "MuiTypography-h6",
                                                    "noWrap": "MuiTypography-noWrap",
                                                    "overline": "MuiTypography-overline",
                                                    "paragraph": "MuiTypography-paragraph",
                                                    "root": "MuiTypography-root",
                                                    "srOnly": "MuiTypography-srOnly",
                                                    "subtitle1": "MuiTypography-subtitle1",
                                                    "subtitle2": "MuiTypography-subtitle2",
                                                  }
                                                }
                                                color="textSecondary"
                                                gutterBottom={true}
                                                variant="body1"
                                              >
                                                <p
                                                  className="MuiTypography-root makeStyles-textDescriptionContainer-5 MuiTypography-body1 MuiTypography-colorTextSecondary makeStyles-colorTextSecondary-147 MuiTypography-gutterBottom MuiTypography-alignLeft"
                                                >
                                                  Discover the power of Color Quantization via the Cinderblox Color Studio. By leveraging open-source image analysis tools you can turn a given image into a beautiful color palette for your next creative project!
                                                </p>
                                              </ForwardRef(Typography)>
                                            </WithStyles(ForwardRef(Typography))>
                                          </Typography>
                                          <div
                                            className="makeStyles-landingSectionCTAButtonContainer-6"
                                          >
                                            <Button
                                              addGlow={false}
                                              color="primary"
                                              component={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "render": [Function],
                                                }
                                              }
                                              href="/color-studio"
                                              paddingRight={false}
                                              variant="contained"
                                            >
                                              <div
                                                className=""
                                              >
                                                <WithStyles(ForwardRef(Button))
                                                  classes={
                                                    Object {
                                                      "containedPrimary": "makeStyles-containedPrimary-180",
                                                      "containedSecondary": "makeStyles-containedSecondary-181",
                                                      "label": "makeStyles-buttonLabel-179",
                                                      "root": "makeStyles-root-178",
                                                    }
                                                  }
                                                  color="primary"
                                                  component={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "render": [Function],
                                                    }
                                                  }
                                                  disableRipple={true}
                                                  href="/color-studio"
                                                  variant="contained"
                                                >
                                                  <ForwardRef(Button)
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiButton-colorInherit",
                                                        "contained": "MuiButton-contained",
                                                        "containedPrimary": "MuiButton-containedPrimary makeStyles-containedPrimary-180",
                                                        "containedSecondary": "MuiButton-containedSecondary makeStyles-containedSecondary-181",
                                                        "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                        "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                        "disableElevation": "MuiButton-disableElevation",
                                                        "disabled": "Mui-disabled",
                                                        "endIcon": "MuiButton-endIcon",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "fullWidth": "MuiButton-fullWidth",
                                                        "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                        "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                        "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                        "label": "MuiButton-label makeStyles-buttonLabel-179",
                                                        "outlined": "MuiButton-outlined",
                                                        "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                        "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                        "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                        "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                        "root": "MuiButton-root makeStyles-root-178",
                                                        "sizeLarge": "MuiButton-sizeLarge",
                                                        "sizeSmall": "MuiButton-sizeSmall",
                                                        "startIcon": "MuiButton-startIcon",
                                                        "text": "MuiButton-text",
                                                        "textPrimary": "MuiButton-textPrimary",
                                                        "textSecondary": "MuiButton-textSecondary",
                                                        "textSizeLarge": "MuiButton-textSizeLarge",
                                                        "textSizeSmall": "MuiButton-textSizeSmall",
                                                      }
                                                    }
                                                    color="primary"
                                                    component={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "render": [Function],
                                                      }
                                                    }
                                                    disableRipple={true}
                                                    href="/color-studio"
                                                    variant="contained"
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      className="MuiButton-root makeStyles-root-178 MuiButton-contained MuiButton-containedPrimary makeStyles-containedPrimary-180"
                                                      component={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "render": [Function],
                                                        }
                                                      }
                                                      disableRipple={true}
                                                      disabled={false}
                                                      focusRipple={true}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      href="/color-studio"
                                                      type="button"
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        className="MuiButton-root makeStyles-root-178 MuiButton-contained MuiButton-containedPrimary makeStyles-containedPrimary-180"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        component={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "render": [Function],
                                                          }
                                                        }
                                                        disableRipple={true}
                                                        disabled={false}
                                                        focusRipple={true}
                                                        focusVisibleClassName="Mui-focusVisible"
                                                        href="/color-studio"
                                                        type="button"
                                                      >
                                                        <ForwardRef
                                                          aria-disabled={false}
                                                          className="MuiButtonBase-root MuiButton-root makeStyles-root-178 MuiButton-contained MuiButton-containedPrimary makeStyles-containedPrimary-180"
                                                          href="/color-studio"
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          role="button"
                                                          tabIndex={0}
                                                        >
                                                          <BaseLink
                                                            aria-disabled={false}
                                                            className="MuiButtonBase-root MuiButton-root makeStyles-root-178 MuiButton-contained MuiButton-containedPrimary makeStyles-containedPrimary-180"
                                                            href="/color-studio"
                                                            innerRef={[Function]}
                                                            onBlur={[Function]}
                                                            onDragLeave={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            role="button"
                                                            tabIndex={0}
                                                          >
                                                            <WithStyles(ForwardRef(Link))
                                                              aria-disabled={false}
                                                              className="MuiButtonBase-root MuiButton-root makeStyles-root-178 MuiButton-contained MuiButton-containedPrimary makeStyles-containedPrimary-180"
                                                              component={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "propTypes": Object {},
                                                                  "render": [Function],
                                                                }
                                                              }
                                                              href="/color-studio"
                                                              onBlur={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              role="button"
                                                              tabIndex={0}
                                                            >
                                                              <ForwardRef(Link)
                                                                aria-disabled={false}
                                                                className="MuiButtonBase-root MuiButton-root makeStyles-root-178 MuiButton-contained MuiButton-containedPrimary makeStyles-containedPrimary-180"
                                                                classes={
                                                                  Object {
                                                                    "button": "MuiLink-button",
                                                                    "focusVisible": "Mui-focusVisible",
                                                                    "root": "MuiLink-root",
                                                                    "underlineAlways": "MuiLink-underlineAlways",
                                                                    "underlineHover": "MuiLink-underlineHover",
                                                                    "underlineNone": "MuiLink-underlineNone",
                                                                  }
                                                                }
                                                                component={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "propTypes": Object {},
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                href="/color-studio"
                                                                onBlur={[Function]}
                                                                onDragLeave={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                onMouseDown={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                onTouchMove={[Function]}
                                                                onTouchStart={[Function]}
                                                                role="button"
                                                                tabIndex={0}
                                                              >
                                                                <WithStyles(ForwardRef(Typography))
                                                                  aria-disabled={false}
                                                                  className="MuiLink-root MuiLink-underlineHover MuiButtonBase-root MuiButton-root makeStyles-root-178 MuiButton-contained MuiButton-containedPrimary makeStyles-containedPrimary-180"
                                                                  color="primary"
                                                                  component={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "propTypes": Object {},
                                                                      "render": [Function],
                                                                    }
                                                                  }
                                                                  href="/color-studio"
                                                                  onBlur={[Function]}
                                                                  onDragLeave={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                  onTouchMove={[Function]}
                                                                  onTouchStart={[Function]}
                                                                  role="button"
                                                                  tabIndex={0}
                                                                  variant="inherit"
                                                                >
                                                                  <ForwardRef(Typography)
                                                                    aria-disabled={false}
                                                                    className="MuiLink-root MuiLink-underlineHover MuiButtonBase-root MuiButton-root makeStyles-root-178 MuiButton-contained MuiButton-containedPrimary makeStyles-containedPrimary-180"
                                                                    classes={
                                                                      Object {
                                                                        "alignCenter": "MuiTypography-alignCenter",
                                                                        "alignJustify": "MuiTypography-alignJustify",
                                                                        "alignLeft": "MuiTypography-alignLeft",
                                                                        "alignRight": "MuiTypography-alignRight",
                                                                        "body1": "MuiTypography-body1",
                                                                        "body2": "MuiTypography-body2",
                                                                        "button": "MuiTypography-button",
                                                                        "caption": "MuiTypography-caption",
                                                                        "colorError": "MuiTypography-colorError",
                                                                        "colorInherit": "MuiTypography-colorInherit",
                                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                        "displayBlock": "MuiTypography-displayBlock",
                                                                        "displayInline": "MuiTypography-displayInline",
                                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                                        "h1": "MuiTypography-h1",
                                                                        "h2": "MuiTypography-h2",
                                                                        "h3": "MuiTypography-h3",
                                                                        "h4": "MuiTypography-h4",
                                                                        "h5": "MuiTypography-h5",
                                                                        "h6": "MuiTypography-h6",
                                                                        "noWrap": "MuiTypography-noWrap",
                                                                        "overline": "MuiTypography-overline",
                                                                        "paragraph": "MuiTypography-paragraph",
                                                                        "root": "MuiTypography-root",
                                                                        "srOnly": "MuiTypography-srOnly",
                                                                        "subtitle1": "MuiTypography-subtitle1",
                                                                        "subtitle2": "MuiTypography-subtitle2",
                                                                      }
                                                                    }
                                                                    color="primary"
                                                                    component={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "propTypes": Object {},
                                                                        "render": [Function],
                                                                      }
                                                                    }
                                                                    href="/color-studio"
                                                                    onBlur={[Function]}
                                                                    onDragLeave={[Function]}
                                                                    onFocus={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    onKeyUp={[Function]}
                                                                    onMouseDown={[Function]}
                                                                    onMouseLeave={[Function]}
                                                                    onMouseUp={[Function]}
                                                                    onTouchEnd={[Function]}
                                                                    onTouchMove={[Function]}
                                                                    onTouchStart={[Function]}
                                                                    role="button"
                                                                    tabIndex={0}
                                                                    variant="inherit"
                                                                  >
                                                                    <ForwardRef(NextComposed)
                                                                      aria-disabled={false}
                                                                      className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiButtonBase-root MuiButton-root makeStyles-root-178 MuiButton-contained MuiButton-containedPrimary makeStyles-containedPrimary-180 MuiTypography-colorPrimary"
                                                                      href="/color-studio"
                                                                      onBlur={[Function]}
                                                                      onDragLeave={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onKeyUp={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onMouseLeave={[Function]}
                                                                      onMouseUp={[Function]}
                                                                      onTouchEnd={[Function]}
                                                                      onTouchMove={[Function]}
                                                                      onTouchStart={[Function]}
                                                                      role="button"
                                                                      tabIndex={0}
                                                                    >
                                                                      <Link
                                                                        href="/color-studio"
                                                                      >
                                                                        <a
                                                                          aria-disabled={false}
                                                                          className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiButtonBase-root MuiButton-root makeStyles-root-178 MuiButton-contained MuiButton-containedPrimary makeStyles-containedPrimary-180 MuiTypography-colorPrimary"
                                                                          href="/color-studio"
                                                                          onBlur={[Function]}
                                                                          onClick={[Function]}
                                                                          onDragLeave={[Function]}
                                                                          onFocus={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onKeyUp={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onMouseEnter={[Function]}
                                                                          onMouseLeave={[Function]}
                                                                          onMouseUp={[Function]}
                                                                          onTouchEnd={[Function]}
                                                                          onTouchMove={[Function]}
                                                                          onTouchStart={[Function]}
                                                                          role="button"
                                                                          tabIndex={0}
                                                                        >
                                                                          <span
                                                                            className="MuiButton-label makeStyles-buttonLabel-179"
                                                                          >
                                                                            Find your palette
                                                                          </span>
                                                                        </a>
                                                                      </Link>
                                                                    </ForwardRef(NextComposed)>
                                                                  </ForwardRef(Typography)>
                                                                </WithStyles(ForwardRef(Typography))>
                                                              </ForwardRef(Link)>
                                                            </WithStyles(ForwardRef(Link))>
                                                          </BaseLink>
                                                        </ForwardRef>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(Button)>
                                                </WithStyles(ForwardRef(Button))>
                                              </div>
                                            </Button>
                                          </div>
                                        </div>
                                      </div>
                                    </ForwardRef(Grid)>
                                  </WithStyles(ForwardRef(Grid))>
                                </GridItem>
                                <GridItem
                                  md={7}
                                  xs={12}
                                >
                                  <WithStyles(ForwardRef(Grid))
                                    item={true}
                                    md={7}
                                    xs={12}
                                  >
                                    <ForwardRef(Grid)
                                      classes={
                                        Object {
                                          "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                          "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                          "container": "MuiGrid-container",
                                          "direction-xs-column": "MuiGrid-direction-xs-column",
                                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                          "grid-lg-1": "MuiGrid-grid-lg-1",
                                          "grid-lg-10": "MuiGrid-grid-lg-10",
                                          "grid-lg-11": "MuiGrid-grid-lg-11",
                                          "grid-lg-12": "MuiGrid-grid-lg-12",
                                          "grid-lg-2": "MuiGrid-grid-lg-2",
                                          "grid-lg-3": "MuiGrid-grid-lg-3",
                                          "grid-lg-4": "MuiGrid-grid-lg-4",
                                          "grid-lg-5": "MuiGrid-grid-lg-5",
                                          "grid-lg-6": "MuiGrid-grid-lg-6",
                                          "grid-lg-7": "MuiGrid-grid-lg-7",
                                          "grid-lg-8": "MuiGrid-grid-lg-8",
                                          "grid-lg-9": "MuiGrid-grid-lg-9",
                                          "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                          "grid-lg-true": "MuiGrid-grid-lg-true",
                                          "grid-md-1": "MuiGrid-grid-md-1",
                                          "grid-md-10": "MuiGrid-grid-md-10",
                                          "grid-md-11": "MuiGrid-grid-md-11",
                                          "grid-md-12": "MuiGrid-grid-md-12",
                                          "grid-md-2": "MuiGrid-grid-md-2",
                                          "grid-md-3": "MuiGrid-grid-md-3",
                                          "grid-md-4": "MuiGrid-grid-md-4",
                                          "grid-md-5": "MuiGrid-grid-md-5",
                                          "grid-md-6": "MuiGrid-grid-md-6",
                                          "grid-md-7": "MuiGrid-grid-md-7",
                                          "grid-md-8": "MuiGrid-grid-md-8",
                                          "grid-md-9": "MuiGrid-grid-md-9",
                                          "grid-md-auto": "MuiGrid-grid-md-auto",
                                          "grid-md-true": "MuiGrid-grid-md-true",
                                          "grid-sm-1": "MuiGrid-grid-sm-1",
                                          "grid-sm-10": "MuiGrid-grid-sm-10",
                                          "grid-sm-11": "MuiGrid-grid-sm-11",
                                          "grid-sm-12": "MuiGrid-grid-sm-12",
                                          "grid-sm-2": "MuiGrid-grid-sm-2",
                                          "grid-sm-3": "MuiGrid-grid-sm-3",
                                          "grid-sm-4": "MuiGrid-grid-sm-4",
                                          "grid-sm-5": "MuiGrid-grid-sm-5",
                                          "grid-sm-6": "MuiGrid-grid-sm-6",
                                          "grid-sm-7": "MuiGrid-grid-sm-7",
                                          "grid-sm-8": "MuiGrid-grid-sm-8",
                                          "grid-sm-9": "MuiGrid-grid-sm-9",
                                          "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                          "grid-sm-true": "MuiGrid-grid-sm-true",
                                          "grid-xl-1": "MuiGrid-grid-xl-1",
                                          "grid-xl-10": "MuiGrid-grid-xl-10",
                                          "grid-xl-11": "MuiGrid-grid-xl-11",
                                          "grid-xl-12": "MuiGrid-grid-xl-12",
                                          "grid-xl-2": "MuiGrid-grid-xl-2",
                                          "grid-xl-3": "MuiGrid-grid-xl-3",
                                          "grid-xl-4": "MuiGrid-grid-xl-4",
                                          "grid-xl-5": "MuiGrid-grid-xl-5",
                                          "grid-xl-6": "MuiGrid-grid-xl-6",
                                          "grid-xl-7": "MuiGrid-grid-xl-7",
                                          "grid-xl-8": "MuiGrid-grid-xl-8",
                                          "grid-xl-9": "MuiGrid-grid-xl-9",
                                          "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                          "grid-xl-true": "MuiGrid-grid-xl-true",
                                          "grid-xs-1": "MuiGrid-grid-xs-1",
                                          "grid-xs-10": "MuiGrid-grid-xs-10",
                                          "grid-xs-11": "MuiGrid-grid-xs-11",
                                          "grid-xs-12": "MuiGrid-grid-xs-12",
                                          "grid-xs-2": "MuiGrid-grid-xs-2",
                                          "grid-xs-3": "MuiGrid-grid-xs-3",
                                          "grid-xs-4": "MuiGrid-grid-xs-4",
                                          "grid-xs-5": "MuiGrid-grid-xs-5",
                                          "grid-xs-6": "MuiGrid-grid-xs-6",
                                          "grid-xs-7": "MuiGrid-grid-xs-7",
                                          "grid-xs-8": "MuiGrid-grid-xs-8",
                                          "grid-xs-9": "MuiGrid-grid-xs-9",
                                          "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                          "grid-xs-true": "MuiGrid-grid-xs-true",
                                          "item": "MuiGrid-item",
                                          "justify-xs-center": "MuiGrid-justify-xs-center",
                                          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                          "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                          "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                          "root": "MuiGrid-root",
                                          "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                          "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                          "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                          "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                          "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                          "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                          "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                          "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                          "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                          "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                          "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                        }
                                      }
                                      item={true}
                                      md={7}
                                      xs={12}
                                    >
                                      <div
                                        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-7"
                                      >
                                        <Svgurl
                                          className="makeStyles-presentation-2"
                                        />
                                      </div>
                                    </ForwardRef(Grid)>
                                  </WithStyles(ForwardRef(Grid))>
                                </GridItem>
                              </div>
                            </ForwardRef(Grid)>
                          </WithStyles(ForwardRef(Grid))>
                        </GridContainer>
                      </div>
                    </ContentMarginContainer>
                  </div>
                </ForwardRef(Paper)>
              </WithStyles(ForwardRef(Paper))>
            </LandingSection>
            <LandingSection
              backgroundColor="paper"
              flexRowDirection="row"
              leftChild={
                <div
                  className="makeStyles-textContentContainer-4"
                >
                  <WithStyles(ForwardRef(List))
                    component="ol"
                    subheader={
                      <Typography
                        variant="h3"
                      >
                        How it works
                      </Typography>
                    }
                  >
                    <WithStyles(ForwardRef(ListItem))
                      alignItems="flex-start"
                      disableGutters={true}
                    >
                      <WithStyles(ForwardRef(ListItemAvatar))>
                        <ListItemCounter
                          count={1}
                        />
                      </WithStyles(ForwardRef(ListItemAvatar))>
                      <WithStyles(ForwardRef(ListItemText))
                        primary="Culpa aliquid quos vel totam quia sequi voluptates fuga sunt. Amet ut possimus dolor maxime dolor sunt ipsum. Id error possimus veniam sed doloribus."
                        primaryTypographyProps={
                          Object {
                            "color": "textSecondary",
                          }
                        }
                      />
                    </WithStyles(ForwardRef(ListItem))>
                    <WithStyles(ForwardRef(ListItem))
                      alignItems="flex-start"
                      disableGutters={true}
                    >
                      <WithStyles(ForwardRef(ListItemAvatar))>
                        <ListItemCounter
                          count={2}
                        />
                      </WithStyles(ForwardRef(ListItemAvatar))>
                      <WithStyles(ForwardRef(ListItemText))
                        primary="Culpa aliquid quos vel totam quia sequi voluptates fuga sunt. Amet ut possimus dolor maxime dolor sunt ipsum. Id error possimus veniam sed doloribus."
                        primaryTypographyProps={
                          Object {
                            "color": "textSecondary",
                          }
                        }
                      />
                    </WithStyles(ForwardRef(ListItem))>
                    <WithStyles(ForwardRef(ListItem))
                      alignItems="flex-start"
                      disableGutters={true}
                    >
                      <WithStyles(ForwardRef(ListItemAvatar))>
                        <ListItemCounter
                          count={3}
                        />
                      </WithStyles(ForwardRef(ListItemAvatar))>
                      <WithStyles(ForwardRef(ListItemText))
                        primary="Culpa aliquid quos vel totam quia sequi voluptates fuga sunt. Amet ut possimus dolor maxime dolor sunt ipsum. Id error possimus veniam sed doloribus."
                        primaryTypographyProps={
                          Object {
                            "color": "textSecondary",
                          }
                        }
                      />
                    </WithStyles(ForwardRef(ListItem))>
                  </WithStyles(ForwardRef(List))>
                  <div
                    style={
                      Object {
                        "alignItems": "center",
                        "display": "flex",
                        "flexDirection": "row",
                        "justifyContent": "flex-end",
                        "paddingTop": "32px",
                      }
                    }
                  >
                    <Button
                      addGlow={true}
                      color="primary"
                      component="a"
                      href="https://github.com/z-nith/cinderblox-studio"
                      paddingRight={true}
                      startIcon={
                        <GitHub
                          color="white"
                          size={18}
                        />
                      }
                      variant="contained"
                    >
                      GitHub
                    </Button>
                    <Button
                      addGlow={false}
                      color="secondary"
                      component="a"
                      href="https://en.wikipedia.org/wiki/Color_quantization"
                      paddingRight={false}
                      startIcon={
                        <ExternalLink
                          color="black"
                          size={18}
                        />
                      }
                      variant="contained"
                    >
                      Learn more
                    </Button>
                  </div>
                </div>
              }
              leftGridItemProps={
                Object {
                  "md": 6,
                  "xs": 12,
                }
              }
              rightChild={
                <Svgurl
                  className="makeStyles-presentation-2"
                />
              }
              rightGridItemProps={
                Object {
                  "md": 6,
                  "xs": 12,
                }
              }
            >
              <WithStyles(ForwardRef(Paper))
                className="makeStyles-root-220 makeStyles-paperBackground-222"
                elevation={0}
                square={true}
              >
                <ForwardRef(Paper)
                  className="makeStyles-root-220 makeStyles-paperBackground-222"
                  classes={
                    Object {
                      "elevation0": "MuiPaper-elevation0",
                      "elevation1": "MuiPaper-elevation1",
                      "elevation10": "MuiPaper-elevation10",
                      "elevation11": "MuiPaper-elevation11",
                      "elevation12": "MuiPaper-elevation12",
                      "elevation13": "MuiPaper-elevation13",
                      "elevation14": "MuiPaper-elevation14",
                      "elevation15": "MuiPaper-elevation15",
                      "elevation16": "MuiPaper-elevation16",
                      "elevation17": "MuiPaper-elevation17",
                      "elevation18": "MuiPaper-elevation18",
                      "elevation19": "MuiPaper-elevation19",
                      "elevation2": "MuiPaper-elevation2",
                      "elevation20": "MuiPaper-elevation20",
                      "elevation21": "MuiPaper-elevation21",
                      "elevation22": "MuiPaper-elevation22",
                      "elevation23": "MuiPaper-elevation23",
                      "elevation24": "MuiPaper-elevation24",
                      "elevation3": "MuiPaper-elevation3",
                      "elevation4": "MuiPaper-elevation4",
                      "elevation5": "MuiPaper-elevation5",
                      "elevation6": "MuiPaper-elevation6",
                      "elevation7": "MuiPaper-elevation7",
                      "elevation8": "MuiPaper-elevation8",
                      "elevation9": "MuiPaper-elevation9",
                      "outlined": "MuiPaper-outlined",
                      "root": "MuiPaper-root",
                      "rounded": "MuiPaper-rounded",
                    }
                  }
                  elevation={0}
                  square={true}
                >
                  <div
                    className="MuiPaper-root makeStyles-root-220 makeStyles-paperBackground-222 MuiPaper-elevation0"
                  >
                    <ContentMarginContainer>
                      <div
                        className="makeStyles-root-225"
                      >
                        <GridContainer
                          direction="row"
                        >
                          <WithStyles(ForwardRef(Grid))
                            container={true}
                            direction="row"
                          >
                            <ForwardRef(Grid)
                              classes={
                                Object {
                                  "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                  "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                  "container": "MuiGrid-container",
                                  "direction-xs-column": "MuiGrid-direction-xs-column",
                                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                  "grid-lg-1": "MuiGrid-grid-lg-1",
                                  "grid-lg-10": "MuiGrid-grid-lg-10",
                                  "grid-lg-11": "MuiGrid-grid-lg-11",
                                  "grid-lg-12": "MuiGrid-grid-lg-12",
                                  "grid-lg-2": "MuiGrid-grid-lg-2",
                                  "grid-lg-3": "MuiGrid-grid-lg-3",
                                  "grid-lg-4": "MuiGrid-grid-lg-4",
                                  "grid-lg-5": "MuiGrid-grid-lg-5",
                                  "grid-lg-6": "MuiGrid-grid-lg-6",
                                  "grid-lg-7": "MuiGrid-grid-lg-7",
                                  "grid-lg-8": "MuiGrid-grid-lg-8",
                                  "grid-lg-9": "MuiGrid-grid-lg-9",
                                  "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                  "grid-lg-true": "MuiGrid-grid-lg-true",
                                  "grid-md-1": "MuiGrid-grid-md-1",
                                  "grid-md-10": "MuiGrid-grid-md-10",
                                  "grid-md-11": "MuiGrid-grid-md-11",
                                  "grid-md-12": "MuiGrid-grid-md-12",
                                  "grid-md-2": "MuiGrid-grid-md-2",
                                  "grid-md-3": "MuiGrid-grid-md-3",
                                  "grid-md-4": "MuiGrid-grid-md-4",
                                  "grid-md-5": "MuiGrid-grid-md-5",
                                  "grid-md-6": "MuiGrid-grid-md-6",
                                  "grid-md-7": "MuiGrid-grid-md-7",
                                  "grid-md-8": "MuiGrid-grid-md-8",
                                  "grid-md-9": "MuiGrid-grid-md-9",
                                  "grid-md-auto": "MuiGrid-grid-md-auto",
                                  "grid-md-true": "MuiGrid-grid-md-true",
                                  "grid-sm-1": "MuiGrid-grid-sm-1",
                                  "grid-sm-10": "MuiGrid-grid-sm-10",
                                  "grid-sm-11": "MuiGrid-grid-sm-11",
                                  "grid-sm-12": "MuiGrid-grid-sm-12",
                                  "grid-sm-2": "MuiGrid-grid-sm-2",
                                  "grid-sm-3": "MuiGrid-grid-sm-3",
                                  "grid-sm-4": "MuiGrid-grid-sm-4",
                                  "grid-sm-5": "MuiGrid-grid-sm-5",
                                  "grid-sm-6": "MuiGrid-grid-sm-6",
                                  "grid-sm-7": "MuiGrid-grid-sm-7",
                                  "grid-sm-8": "MuiGrid-grid-sm-8",
                                  "grid-sm-9": "MuiGrid-grid-sm-9",
                                  "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                  "grid-sm-true": "MuiGrid-grid-sm-true",
                                  "grid-xl-1": "MuiGrid-grid-xl-1",
                                  "grid-xl-10": "MuiGrid-grid-xl-10",
                                  "grid-xl-11": "MuiGrid-grid-xl-11",
                                  "grid-xl-12": "MuiGrid-grid-xl-12",
                                  "grid-xl-2": "MuiGrid-grid-xl-2",
                                  "grid-xl-3": "MuiGrid-grid-xl-3",
                                  "grid-xl-4": "MuiGrid-grid-xl-4",
                                  "grid-xl-5": "MuiGrid-grid-xl-5",
                                  "grid-xl-6": "MuiGrid-grid-xl-6",
                                  "grid-xl-7": "MuiGrid-grid-xl-7",
                                  "grid-xl-8": "MuiGrid-grid-xl-8",
                                  "grid-xl-9": "MuiGrid-grid-xl-9",
                                  "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                  "grid-xl-true": "MuiGrid-grid-xl-true",
                                  "grid-xs-1": "MuiGrid-grid-xs-1",
                                  "grid-xs-10": "MuiGrid-grid-xs-10",
                                  "grid-xs-11": "MuiGrid-grid-xs-11",
                                  "grid-xs-12": "MuiGrid-grid-xs-12",
                                  "grid-xs-2": "MuiGrid-grid-xs-2",
                                  "grid-xs-3": "MuiGrid-grid-xs-3",
                                  "grid-xs-4": "MuiGrid-grid-xs-4",
                                  "grid-xs-5": "MuiGrid-grid-xs-5",
                                  "grid-xs-6": "MuiGrid-grid-xs-6",
                                  "grid-xs-7": "MuiGrid-grid-xs-7",
                                  "grid-xs-8": "MuiGrid-grid-xs-8",
                                  "grid-xs-9": "MuiGrid-grid-xs-9",
                                  "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                  "grid-xs-true": "MuiGrid-grid-xs-true",
                                  "item": "MuiGrid-item",
                                  "justify-xs-center": "MuiGrid-justify-xs-center",
                                  "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                  "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                  "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                  "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                  "root": "MuiGrid-root",
                                  "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                  "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                  "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                  "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                  "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                  "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                  "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                  "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                  "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                  "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                  "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                }
                              }
                              container={true}
                              direction="row"
                            >
                              <div
                                className="MuiGrid-root MuiGrid-container"
                              >
                                <GridItem
                                  md={6}
                                  xs={12}
                                >
                                  <WithStyles(ForwardRef(Grid))
                                    item={true}
                                    md={6}
                                    xs={12}
                                  >
                                    <ForwardRef(Grid)
                                      classes={
                                        Object {
                                          "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                          "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                          "container": "MuiGrid-container",
                                          "direction-xs-column": "MuiGrid-direction-xs-column",
                                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                          "grid-lg-1": "MuiGrid-grid-lg-1",
                                          "grid-lg-10": "MuiGrid-grid-lg-10",
                                          "grid-lg-11": "MuiGrid-grid-lg-11",
                                          "grid-lg-12": "MuiGrid-grid-lg-12",
                                          "grid-lg-2": "MuiGrid-grid-lg-2",
                                          "grid-lg-3": "MuiGrid-grid-lg-3",
                                          "grid-lg-4": "MuiGrid-grid-lg-4",
                                          "grid-lg-5": "MuiGrid-grid-lg-5",
                                          "grid-lg-6": "MuiGrid-grid-lg-6",
                                          "grid-lg-7": "MuiGrid-grid-lg-7",
                                          "grid-lg-8": "MuiGrid-grid-lg-8",
                                          "grid-lg-9": "MuiGrid-grid-lg-9",
                                          "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                          "grid-lg-true": "MuiGrid-grid-lg-true",
                                          "grid-md-1": "MuiGrid-grid-md-1",
                                          "grid-md-10": "MuiGrid-grid-md-10",
                                          "grid-md-11": "MuiGrid-grid-md-11",
                                          "grid-md-12": "MuiGrid-grid-md-12",
                                          "grid-md-2": "MuiGrid-grid-md-2",
                                          "grid-md-3": "MuiGrid-grid-md-3",
                                          "grid-md-4": "MuiGrid-grid-md-4",
                                          "grid-md-5": "MuiGrid-grid-md-5",
                                          "grid-md-6": "MuiGrid-grid-md-6",
                                          "grid-md-7": "MuiGrid-grid-md-7",
                                          "grid-md-8": "MuiGrid-grid-md-8",
                                          "grid-md-9": "MuiGrid-grid-md-9",
                                          "grid-md-auto": "MuiGrid-grid-md-auto",
                                          "grid-md-true": "MuiGrid-grid-md-true",
                                          "grid-sm-1": "MuiGrid-grid-sm-1",
                                          "grid-sm-10": "MuiGrid-grid-sm-10",
                                          "grid-sm-11": "MuiGrid-grid-sm-11",
                                          "grid-sm-12": "MuiGrid-grid-sm-12",
                                          "grid-sm-2": "MuiGrid-grid-sm-2",
                                          "grid-sm-3": "MuiGrid-grid-sm-3",
                                          "grid-sm-4": "MuiGrid-grid-sm-4",
                                          "grid-sm-5": "MuiGrid-grid-sm-5",
                                          "grid-sm-6": "MuiGrid-grid-sm-6",
                                          "grid-sm-7": "MuiGrid-grid-sm-7",
                                          "grid-sm-8": "MuiGrid-grid-sm-8",
                                          "grid-sm-9": "MuiGrid-grid-sm-9",
                                          "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                          "grid-sm-true": "MuiGrid-grid-sm-true",
                                          "grid-xl-1": "MuiGrid-grid-xl-1",
                                          "grid-xl-10": "MuiGrid-grid-xl-10",
                                          "grid-xl-11": "MuiGrid-grid-xl-11",
                                          "grid-xl-12": "MuiGrid-grid-xl-12",
                                          "grid-xl-2": "MuiGrid-grid-xl-2",
                                          "grid-xl-3": "MuiGrid-grid-xl-3",
                                          "grid-xl-4": "MuiGrid-grid-xl-4",
                                          "grid-xl-5": "MuiGrid-grid-xl-5",
                                          "grid-xl-6": "MuiGrid-grid-xl-6",
                                          "grid-xl-7": "MuiGrid-grid-xl-7",
                                          "grid-xl-8": "MuiGrid-grid-xl-8",
                                          "grid-xl-9": "MuiGrid-grid-xl-9",
                                          "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                          "grid-xl-true": "MuiGrid-grid-xl-true",
                                          "grid-xs-1": "MuiGrid-grid-xs-1",
                                          "grid-xs-10": "MuiGrid-grid-xs-10",
                                          "grid-xs-11": "MuiGrid-grid-xs-11",
                                          "grid-xs-12": "MuiGrid-grid-xs-12",
                                          "grid-xs-2": "MuiGrid-grid-xs-2",
                                          "grid-xs-3": "MuiGrid-grid-xs-3",
                                          "grid-xs-4": "MuiGrid-grid-xs-4",
                                          "grid-xs-5": "MuiGrid-grid-xs-5",
                                          "grid-xs-6": "MuiGrid-grid-xs-6",
                                          "grid-xs-7": "MuiGrid-grid-xs-7",
                                          "grid-xs-8": "MuiGrid-grid-xs-8",
                                          "grid-xs-9": "MuiGrid-grid-xs-9",
                                          "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                          "grid-xs-true": "MuiGrid-grid-xs-true",
                                          "item": "MuiGrid-item",
                                          "justify-xs-center": "MuiGrid-justify-xs-center",
                                          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                          "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                          "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                          "root": "MuiGrid-root",
                                          "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                          "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                          "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                          "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                          "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                          "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                          "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                          "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                          "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                          "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                          "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                        }
                                      }
                                      item={true}
                                      md={6}
                                      xs={12}
                                    >
                                      <div
                                        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-6"
                                      >
                                        <div
                                          className="makeStyles-textContentContainer-4"
                                        >
                                          <WithStyles(ForwardRef(List))
                                            component="ol"
                                            subheader={
                                              <Typography
                                                variant="h3"
                                              >
                                                How it works
                                              </Typography>
                                            }
                                          >
                                            <ForwardRef(List)
                                              classes={
                                                Object {
                                                  "dense": "MuiList-dense",
                                                  "padding": "MuiList-padding",
                                                  "root": "MuiList-root",
                                                  "subheader": "MuiList-subheader",
                                                }
                                              }
                                              component="ol"
                                              subheader={
                                                <Typography
                                                  variant="h3"
                                                >
                                                  How it works
                                                </Typography>
                                              }
                                            >
                                              <ol
                                                className="MuiList-root MuiList-padding MuiList-subheader"
                                              >
                                                <Typography
                                                  variant="h3"
                                                >
                                                  <WithStyles(ForwardRef(Typography))
                                                    classes={
                                                      Object {
                                                        "colorTextPrimary": "makeStyles-colorTextPrimary-146",
                                                        "colorTextSecondary": "makeStyles-colorTextSecondary-147",
                                                      }
                                                    }
                                                    variant="h3"
                                                  >
                                                    <ForwardRef(Typography)
                                                      classes={
                                                        Object {
                                                          "alignCenter": "MuiTypography-alignCenter",
                                                          "alignJustify": "MuiTypography-alignJustify",
                                                          "alignLeft": "MuiTypography-alignLeft",
                                                          "alignRight": "MuiTypography-alignRight",
                                                          "body1": "MuiTypography-body1",
                                                          "body2": "MuiTypography-body2",
                                                          "button": "MuiTypography-button",
                                                          "caption": "MuiTypography-caption",
                                                          "colorError": "MuiTypography-colorError",
                                                          "colorInherit": "MuiTypography-colorInherit",
                                                          "colorPrimary": "MuiTypography-colorPrimary",
                                                          "colorSecondary": "MuiTypography-colorSecondary",
                                                          "colorTextPrimary": "MuiTypography-colorTextPrimary makeStyles-colorTextPrimary-146",
                                                          "colorTextSecondary": "MuiTypography-colorTextSecondary makeStyles-colorTextSecondary-147",
                                                          "displayBlock": "MuiTypography-displayBlock",
                                                          "displayInline": "MuiTypography-displayInline",
                                                          "gutterBottom": "MuiTypography-gutterBottom",
                                                          "h1": "MuiTypography-h1",
                                                          "h2": "MuiTypography-h2",
                                                          "h3": "MuiTypography-h3",
                                                          "h4": "MuiTypography-h4",
                                                          "h5": "MuiTypography-h5",
                                                          "h6": "MuiTypography-h6",
                                                          "noWrap": "MuiTypography-noWrap",
                                                          "overline": "MuiTypography-overline",
                                                          "paragraph": "MuiTypography-paragraph",
                                                          "root": "MuiTypography-root",
                                                          "srOnly": "MuiTypography-srOnly",
                                                          "subtitle1": "MuiTypography-subtitle1",
                                                          "subtitle2": "MuiTypography-subtitle2",
                                                        }
                                                      }
                                                      variant="h3"
                                                    >
                                                      <h3
                                                        className="MuiTypography-root MuiTypography-h3"
                                                      >
                                                        How it works
                                                      </h3>
                                                    </ForwardRef(Typography)>
                                                  </WithStyles(ForwardRef(Typography))>
                                                </Typography>
                                                <WithStyles(ForwardRef(ListItem))
                                                  alignItems="flex-start"
                                                  disableGutters={true}
                                                >
                                                  <ForwardRef(ListItem)
                                                    alignItems="flex-start"
                                                    classes={
                                                      Object {
                                                        "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                        "button": "MuiListItem-button",
                                                        "container": "MuiListItem-container",
                                                        "dense": "MuiListItem-dense",
                                                        "disabled": "Mui-disabled",
                                                        "divider": "MuiListItem-divider",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "gutters": "MuiListItem-gutters",
                                                        "root": "MuiListItem-root",
                                                        "secondaryAction": "MuiListItem-secondaryAction",
                                                        "selected": "Mui-selected",
                                                      }
                                                    }
                                                    disableGutters={true}
                                                  >
                                                    <li
                                                      className="MuiListItem-root MuiListItem-alignItemsFlexStart"
                                                      disabled={false}
                                                    >
                                                      <WithStyles(ForwardRef(ListItemAvatar))
                                                        key=".0"
                                                      >
                                                        <ForwardRef(ListItemAvatar)
                                                          classes={
                                                            Object {
                                                              "alignItemsFlexStart": "MuiListItemAvatar-alignItemsFlexStart",
                                                              "root": "MuiListItemAvatar-root",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="MuiListItemAvatar-root MuiListItemAvatar-alignItemsFlexStart"
                                                          >
                                                            <ListItemCounter
                                                              count={1}
                                                            >
                                                              <div
                                                                className="makeStyles-root-346"
                                                              >
                                                                <div
                                                                  className="makeStyles-circleContainer-347"
                                                                >
                                                                  <WithStyles(ForwardRef(Typography))
                                                                    color="textPrimary"
                                                                    variant="h5"
                                                                  >
                                                                    <ForwardRef(Typography)
                                                                      classes={
                                                                        Object {
                                                                          "alignCenter": "MuiTypography-alignCenter",
                                                                          "alignJustify": "MuiTypography-alignJustify",
                                                                          "alignLeft": "MuiTypography-alignLeft",
                                                                          "alignRight": "MuiTypography-alignRight",
                                                                          "body1": "MuiTypography-body1",
                                                                          "body2": "MuiTypography-body2",
                                                                          "button": "MuiTypography-button",
                                                                          "caption": "MuiTypography-caption",
                                                                          "colorError": "MuiTypography-colorError",
                                                                          "colorInherit": "MuiTypography-colorInherit",
                                                                          "colorPrimary": "MuiTypography-colorPrimary",
                                                                          "colorSecondary": "MuiTypography-colorSecondary",
                                                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                          "displayBlock": "MuiTypography-displayBlock",
                                                                          "displayInline": "MuiTypography-displayInline",
                                                                          "gutterBottom": "MuiTypography-gutterBottom",
                                                                          "h1": "MuiTypography-h1",
                                                                          "h2": "MuiTypography-h2",
                                                                          "h3": "MuiTypography-h3",
                                                                          "h4": "MuiTypography-h4",
                                                                          "h5": "MuiTypography-h5",
                                                                          "h6": "MuiTypography-h6",
                                                                          "noWrap": "MuiTypography-noWrap",
                                                                          "overline": "MuiTypography-overline",
                                                                          "paragraph": "MuiTypography-paragraph",
                                                                          "root": "MuiTypography-root",
                                                                          "srOnly": "MuiTypography-srOnly",
                                                                          "subtitle1": "MuiTypography-subtitle1",
                                                                          "subtitle2": "MuiTypography-subtitle2",
                                                                        }
                                                                      }
                                                                      color="textPrimary"
                                                                      variant="h5"
                                                                    >
                                                                      <h5
                                                                        className="MuiTypography-root MuiTypography-h5 MuiTypography-colorTextPrimary"
                                                                      >
                                                                        1
                                                                      </h5>
                                                                    </ForwardRef(Typography)>
                                                                  </WithStyles(ForwardRef(Typography))>
                                                                </div>
                                                              </div>
                                                            </ListItemCounter>
                                                          </div>
                                                        </ForwardRef(ListItemAvatar)>
                                                      </WithStyles(ForwardRef(ListItemAvatar))>
                                                      <WithStyles(ForwardRef(ListItemText))
                                                        key=".1"
                                                        primary="Culpa aliquid quos vel totam quia sequi voluptates fuga sunt. Amet ut possimus dolor maxime dolor sunt ipsum. Id error possimus veniam sed doloribus."
                                                        primaryTypographyProps={
                                                          Object {
                                                            "color": "textSecondary",
                                                          }
                                                        }
                                                      >
                                                        <ForwardRef(ListItemText)
                                                          classes={
                                                            Object {
                                                              "dense": "MuiListItemText-dense",
                                                              "inset": "MuiListItemText-inset",
                                                              "multiline": "MuiListItemText-multiline",
                                                              "primary": "MuiListItemText-primary",
                                                              "root": "MuiListItemText-root",
                                                              "secondary": "MuiListItemText-secondary",
                                                            }
                                                          }
                                                          primary="Culpa aliquid quos vel totam quia sequi voluptates fuga sunt. Amet ut possimus dolor maxime dolor sunt ipsum. Id error possimus veniam sed doloribus."
                                                          primaryTypographyProps={
                                                            Object {
                                                              "color": "textSecondary",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="MuiListItemText-root"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              className="MuiListItemText-primary"
                                                              color="textSecondary"
                                                              component="span"
                                                              display="block"
                                                              variant="body1"
                                                            >
                                                              <ForwardRef(Typography)
                                                                className="MuiListItemText-primary"
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="textSecondary"
                                                                component="span"
                                                                display="block"
                                                                variant="body1"
                                                              >
                                                                <span
                                                                  className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-colorTextSecondary MuiTypography-displayBlock"
                                                                >
                                                                  Culpa aliquid quos vel totam quia sequi voluptates fuga sunt. Amet ut possimus dolor maxime dolor sunt ipsum. Id error possimus veniam sed doloribus.
                                                                </span>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </div>
                                                        </ForwardRef(ListItemText)>
                                                      </WithStyles(ForwardRef(ListItemText))>
                                                    </li>
                                                  </ForwardRef(ListItem)>
                                                </WithStyles(ForwardRef(ListItem))>
                                                <WithStyles(ForwardRef(ListItem))
                                                  alignItems="flex-start"
                                                  disableGutters={true}
                                                >
                                                  <ForwardRef(ListItem)
                                                    alignItems="flex-start"
                                                    classes={
                                                      Object {
                                                        "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                        "button": "MuiListItem-button",
                                                        "container": "MuiListItem-container",
                                                        "dense": "MuiListItem-dense",
                                                        "disabled": "Mui-disabled",
                                                        "divider": "MuiListItem-divider",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "gutters": "MuiListItem-gutters",
                                                        "root": "MuiListItem-root",
                                                        "secondaryAction": "MuiListItem-secondaryAction",
                                                        "selected": "Mui-selected",
                                                      }
                                                    }
                                                    disableGutters={true}
                                                  >
                                                    <li
                                                      className="MuiListItem-root MuiListItem-alignItemsFlexStart"
                                                      disabled={false}
                                                    >
                                                      <WithStyles(ForwardRef(ListItemAvatar))
                                                        key=".0"
                                                      >
                                                        <ForwardRef(ListItemAvatar)
                                                          classes={
                                                            Object {
                                                              "alignItemsFlexStart": "MuiListItemAvatar-alignItemsFlexStart",
                                                              "root": "MuiListItemAvatar-root",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="MuiListItemAvatar-root MuiListItemAvatar-alignItemsFlexStart"
                                                          >
                                                            <ListItemCounter
                                                              count={2}
                                                            >
                                                              <div
                                                                className="makeStyles-root-346"
                                                              >
                                                                <div
                                                                  className="makeStyles-circleContainer-347"
                                                                >
                                                                  <WithStyles(ForwardRef(Typography))
                                                                    color="textPrimary"
                                                                    variant="h5"
                                                                  >
                                                                    <ForwardRef(Typography)
                                                                      classes={
                                                                        Object {
                                                                          "alignCenter": "MuiTypography-alignCenter",
                                                                          "alignJustify": "MuiTypography-alignJustify",
                                                                          "alignLeft": "MuiTypography-alignLeft",
                                                                          "alignRight": "MuiTypography-alignRight",
                                                                          "body1": "MuiTypography-body1",
                                                                          "body2": "MuiTypography-body2",
                                                                          "button": "MuiTypography-button",
                                                                          "caption": "MuiTypography-caption",
                                                                          "colorError": "MuiTypography-colorError",
                                                                          "colorInherit": "MuiTypography-colorInherit",
                                                                          "colorPrimary": "MuiTypography-colorPrimary",
                                                                          "colorSecondary": "MuiTypography-colorSecondary",
                                                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                          "displayBlock": "MuiTypography-displayBlock",
                                                                          "displayInline": "MuiTypography-displayInline",
                                                                          "gutterBottom": "MuiTypography-gutterBottom",
                                                                          "h1": "MuiTypography-h1",
                                                                          "h2": "MuiTypography-h2",
                                                                          "h3": "MuiTypography-h3",
                                                                          "h4": "MuiTypography-h4",
                                                                          "h5": "MuiTypography-h5",
                                                                          "h6": "MuiTypography-h6",
                                                                          "noWrap": "MuiTypography-noWrap",
                                                                          "overline": "MuiTypography-overline",
                                                                          "paragraph": "MuiTypography-paragraph",
                                                                          "root": "MuiTypography-root",
                                                                          "srOnly": "MuiTypography-srOnly",
                                                                          "subtitle1": "MuiTypography-subtitle1",
                                                                          "subtitle2": "MuiTypography-subtitle2",
                                                                        }
                                                                      }
                                                                      color="textPrimary"
                                                                      variant="h5"
                                                                    >
                                                                      <h5
                                                                        className="MuiTypography-root MuiTypography-h5 MuiTypography-colorTextPrimary"
                                                                      >
                                                                        2
                                                                      </h5>
                                                                    </ForwardRef(Typography)>
                                                                  </WithStyles(ForwardRef(Typography))>
                                                                </div>
                                                              </div>
                                                            </ListItemCounter>
                                                          </div>
                                                        </ForwardRef(ListItemAvatar)>
                                                      </WithStyles(ForwardRef(ListItemAvatar))>
                                                      <WithStyles(ForwardRef(ListItemText))
                                                        key=".1"
                                                        primary="Culpa aliquid quos vel totam quia sequi voluptates fuga sunt. Amet ut possimus dolor maxime dolor sunt ipsum. Id error possimus veniam sed doloribus."
                                                        primaryTypographyProps={
                                                          Object {
                                                            "color": "textSecondary",
                                                          }
                                                        }
                                                      >
                                                        <ForwardRef(ListItemText)
                                                          classes={
                                                            Object {
                                                              "dense": "MuiListItemText-dense",
                                                              "inset": "MuiListItemText-inset",
                                                              "multiline": "MuiListItemText-multiline",
                                                              "primary": "MuiListItemText-primary",
                                                              "root": "MuiListItemText-root",
                                                              "secondary": "MuiListItemText-secondary",
                                                            }
                                                          }
                                                          primary="Culpa aliquid quos vel totam quia sequi voluptates fuga sunt. Amet ut possimus dolor maxime dolor sunt ipsum. Id error possimus veniam sed doloribus."
                                                          primaryTypographyProps={
                                                            Object {
                                                              "color": "textSecondary",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="MuiListItemText-root"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              className="MuiListItemText-primary"
                                                              color="textSecondary"
                                                              component="span"
                                                              display="block"
                                                              variant="body1"
                                                            >
                                                              <ForwardRef(Typography)
                                                                className="MuiListItemText-primary"
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="textSecondary"
                                                                component="span"
                                                                display="block"
                                                                variant="body1"
                                                              >
                                                                <span
                                                                  className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-colorTextSecondary MuiTypography-displayBlock"
                                                                >
                                                                  Culpa aliquid quos vel totam quia sequi voluptates fuga sunt. Amet ut possimus dolor maxime dolor sunt ipsum. Id error possimus veniam sed doloribus.
                                                                </span>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </div>
                                                        </ForwardRef(ListItemText)>
                                                      </WithStyles(ForwardRef(ListItemText))>
                                                    </li>
                                                  </ForwardRef(ListItem)>
                                                </WithStyles(ForwardRef(ListItem))>
                                                <WithStyles(ForwardRef(ListItem))
                                                  alignItems="flex-start"
                                                  disableGutters={true}
                                                >
                                                  <ForwardRef(ListItem)
                                                    alignItems="flex-start"
                                                    classes={
                                                      Object {
                                                        "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                        "button": "MuiListItem-button",
                                                        "container": "MuiListItem-container",
                                                        "dense": "MuiListItem-dense",
                                                        "disabled": "Mui-disabled",
                                                        "divider": "MuiListItem-divider",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "gutters": "MuiListItem-gutters",
                                                        "root": "MuiListItem-root",
                                                        "secondaryAction": "MuiListItem-secondaryAction",
                                                        "selected": "Mui-selected",
                                                      }
                                                    }
                                                    disableGutters={true}
                                                  >
                                                    <li
                                                      className="MuiListItem-root MuiListItem-alignItemsFlexStart"
                                                      disabled={false}
                                                    >
                                                      <WithStyles(ForwardRef(ListItemAvatar))
                                                        key=".0"
                                                      >
                                                        <ForwardRef(ListItemAvatar)
                                                          classes={
                                                            Object {
                                                              "alignItemsFlexStart": "MuiListItemAvatar-alignItemsFlexStart",
                                                              "root": "MuiListItemAvatar-root",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="MuiListItemAvatar-root MuiListItemAvatar-alignItemsFlexStart"
                                                          >
                                                            <ListItemCounter
                                                              count={3}
                                                            >
                                                              <div
                                                                className="makeStyles-root-346"
                                                              >
                                                                <div
                                                                  className="makeStyles-circleContainer-347"
                                                                >
                                                                  <WithStyles(ForwardRef(Typography))
                                                                    color="textPrimary"
                                                                    variant="h5"
                                                                  >
                                                                    <ForwardRef(Typography)
                                                                      classes={
                                                                        Object {
                                                                          "alignCenter": "MuiTypography-alignCenter",
                                                                          "alignJustify": "MuiTypography-alignJustify",
                                                                          "alignLeft": "MuiTypography-alignLeft",
                                                                          "alignRight": "MuiTypography-alignRight",
                                                                          "body1": "MuiTypography-body1",
                                                                          "body2": "MuiTypography-body2",
                                                                          "button": "MuiTypography-button",
                                                                          "caption": "MuiTypography-caption",
                                                                          "colorError": "MuiTypography-colorError",
                                                                          "colorInherit": "MuiTypography-colorInherit",
                                                                          "colorPrimary": "MuiTypography-colorPrimary",
                                                                          "colorSecondary": "MuiTypography-colorSecondary",
                                                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                          "displayBlock": "MuiTypography-displayBlock",
                                                                          "displayInline": "MuiTypography-displayInline",
                                                                          "gutterBottom": "MuiTypography-gutterBottom",
                                                                          "h1": "MuiTypography-h1",
                                                                          "h2": "MuiTypography-h2",
                                                                          "h3": "MuiTypography-h3",
                                                                          "h4": "MuiTypography-h4",
                                                                          "h5": "MuiTypography-h5",
                                                                          "h6": "MuiTypography-h6",
                                                                          "noWrap": "MuiTypography-noWrap",
                                                                          "overline": "MuiTypography-overline",
                                                                          "paragraph": "MuiTypography-paragraph",
                                                                          "root": "MuiTypography-root",
                                                                          "srOnly": "MuiTypography-srOnly",
                                                                          "subtitle1": "MuiTypography-subtitle1",
                                                                          "subtitle2": "MuiTypography-subtitle2",
                                                                        }
                                                                      }
                                                                      color="textPrimary"
                                                                      variant="h5"
                                                                    >
                                                                      <h5
                                                                        className="MuiTypography-root MuiTypography-h5 MuiTypography-colorTextPrimary"
                                                                      >
                                                                        3
                                                                      </h5>
                                                                    </ForwardRef(Typography)>
                                                                  </WithStyles(ForwardRef(Typography))>
                                                                </div>
                                                              </div>
                                                            </ListItemCounter>
                                                          </div>
                                                        </ForwardRef(ListItemAvatar)>
                                                      </WithStyles(ForwardRef(ListItemAvatar))>
                                                      <WithStyles(ForwardRef(ListItemText))
                                                        key=".1"
                                                        primary="Culpa aliquid quos vel totam quia sequi voluptates fuga sunt. Amet ut possimus dolor maxime dolor sunt ipsum. Id error possimus veniam sed doloribus."
                                                        primaryTypographyProps={
                                                          Object {
                                                            "color": "textSecondary",
                                                          }
                                                        }
                                                      >
                                                        <ForwardRef(ListItemText)
                                                          classes={
                                                            Object {
                                                              "dense": "MuiListItemText-dense",
                                                              "inset": "MuiListItemText-inset",
                                                              "multiline": "MuiListItemText-multiline",
                                                              "primary": "MuiListItemText-primary",
                                                              "root": "MuiListItemText-root",
                                                              "secondary": "MuiListItemText-secondary",
                                                            }
                                                          }
                                                          primary="Culpa aliquid quos vel totam quia sequi voluptates fuga sunt. Amet ut possimus dolor maxime dolor sunt ipsum. Id error possimus veniam sed doloribus."
                                                          primaryTypographyProps={
                                                            Object {
                                                              "color": "textSecondary",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="MuiListItemText-root"
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              className="MuiListItemText-primary"
                                                              color="textSecondary"
                                                              component="span"
                                                              display="block"
                                                              variant="body1"
                                                            >
                                                              <ForwardRef(Typography)
                                                                className="MuiListItemText-primary"
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                color="textSecondary"
                                                                component="span"
                                                                display="block"
                                                                variant="body1"
                                                              >
                                                                <span
                                                                  className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-colorTextSecondary MuiTypography-displayBlock"
                                                                >
                                                                  Culpa aliquid quos vel totam quia sequi voluptates fuga sunt. Amet ut possimus dolor maxime dolor sunt ipsum. Id error possimus veniam sed doloribus.
                                                                </span>
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </div>
                                                        </ForwardRef(ListItemText)>
                                                      </WithStyles(ForwardRef(ListItemText))>
                                                    </li>
                                                  </ForwardRef(ListItem)>
                                                </WithStyles(ForwardRef(ListItem))>
                                              </ol>
                                            </ForwardRef(List)>
                                          </WithStyles(ForwardRef(List))>
                                          <div
                                            style={
                                              Object {
                                                "alignItems": "center",
                                                "display": "flex",
                                                "flexDirection": "row",
                                                "justifyContent": "flex-end",
                                                "paddingTop": "32px",
                                              }
                                            }
                                          >
                                            <Button
                                              addGlow={true}
                                              color="primary"
                                              component="a"
                                              href="https://github.com/z-nith/cinderblox-studio"
                                              paddingRight={true}
                                              startIcon={
                                                <GitHub
                                                  color="white"
                                                  size={18}
                                                />
                                              }
                                              variant="contained"
                                            >
                                              <div
                                                className="makeStyles-addRightPadding-182"
                                              >
                                                <WithStyles(ForwardRef(Button))
                                                  classes={
                                                    Object {
                                                      "containedPrimary": "makeStyles-containedPrimary-180",
                                                      "containedSecondary": "makeStyles-containedSecondary-181",
                                                      "label": "makeStyles-buttonLabel-179",
                                                      "root": "makeStyles-root-178 makeStyles-addPrimaryGlow-183",
                                                    }
                                                  }
                                                  color="primary"
                                                  component="a"
                                                  disableRipple={true}
                                                  href="https://github.com/z-nith/cinderblox-studio"
                                                  startIcon={
                                                    <GitHub
                                                      color="white"
                                                      size={18}
                                                    />
                                                  }
                                                  variant="contained"
                                                >
                                                  <ForwardRef(Button)
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiButton-colorInherit",
                                                        "contained": "MuiButton-contained",
                                                        "containedPrimary": "MuiButton-containedPrimary makeStyles-containedPrimary-180",
                                                        "containedSecondary": "MuiButton-containedSecondary makeStyles-containedSecondary-181",
                                                        "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                        "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                        "disableElevation": "MuiButton-disableElevation",
                                                        "disabled": "Mui-disabled",
                                                        "endIcon": "MuiButton-endIcon",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "fullWidth": "MuiButton-fullWidth",
                                                        "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                        "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                        "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                        "label": "MuiButton-label makeStyles-buttonLabel-179",
                                                        "outlined": "MuiButton-outlined",
                                                        "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                        "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                        "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                        "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                        "root": "MuiButton-root makeStyles-root-178 makeStyles-addPrimaryGlow-183",
                                                        "sizeLarge": "MuiButton-sizeLarge",
                                                        "sizeSmall": "MuiButton-sizeSmall",
                                                        "startIcon": "MuiButton-startIcon",
                                                        "text": "MuiButton-text",
                                                        "textPrimary": "MuiButton-textPrimary",
                                                        "textSecondary": "MuiButton-textSecondary",
                                                        "textSizeLarge": "MuiButton-textSizeLarge",
                                                        "textSizeSmall": "MuiButton-textSizeSmall",
                                                      }
                                                    }
                                                    color="primary"
                                                    component="a"
                                                    disableRipple={true}
                                                    href="https://github.com/z-nith/cinderblox-studio"
                                                    startIcon={
                                                      <GitHub
                                                        color="white"
                                                        size={18}
                                                      />
                                                    }
                                                    variant="contained"
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      className="MuiButton-root makeStyles-root-178 makeStyles-addPrimaryGlow-183 MuiButton-contained MuiButton-containedPrimary makeStyles-containedPrimary-180"
                                                      component="a"
                                                      disableRipple={true}
                                                      disabled={false}
                                                      focusRipple={true}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      href="https://github.com/z-nith/cinderblox-studio"
                                                      type="button"
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        className="MuiButton-root makeStyles-root-178 makeStyles-addPrimaryGlow-183 MuiButton-contained MuiButton-containedPrimary makeStyles-containedPrimary-180"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        component="a"
                                                        disableRipple={true}
                                                        disabled={false}
                                                        focusRipple={true}
                                                        focusVisibleClassName="Mui-focusVisible"
                                                        href="https://github.com/z-nith/cinderblox-studio"
                                                        type="button"
                                                      >
                                                        <a
                                                          aria-disabled={false}
                                                          className="MuiButtonBase-root MuiButton-root makeStyles-root-178 makeStyles-addPrimaryGlow-183 MuiButton-contained MuiButton-containedPrimary makeStyles-containedPrimary-180"
                                                          href="https://github.com/z-nith/cinderblox-studio"
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={0}
                                                        >
                                                          <span
                                                            className="MuiButton-label makeStyles-buttonLabel-179"
                                                          >
                                                            <span
                                                              className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                                            >
                                                              <GitHub
                                                                color="white"
                                                                size={18}
                                                              >
                                                                <svg
                                                                  fill="none"
                                                                  height={18}
                                                                  stroke="white"
                                                                  strokeLinecap="round"
                                                                  strokeLinejoin="round"
                                                                  strokeWidth="2"
                                                                  viewBox="0 0 24 24"
                                                                  width={18}
                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                >
                                                                  <path
                                                                    d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"
                                                                  />
                                                                </svg>
                                                              </GitHub>
                                                            </span>
                                                            GitHub
                                                          </span>
                                                        </a>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(Button)>
                                                </WithStyles(ForwardRef(Button))>
                                              </div>
                                            </Button>
                                            <Button
                                              addGlow={false}
                                              color="secondary"
                                              component="a"
                                              href="https://en.wikipedia.org/wiki/Color_quantization"
                                              paddingRight={false}
                                              startIcon={
                                                <ExternalLink
                                                  color="black"
                                                  size={18}
                                                />
                                              }
                                              variant="contained"
                                            >
                                              <div
                                                className=""
                                              >
                                                <WithStyles(ForwardRef(Button))
                                                  classes={
                                                    Object {
                                                      "containedPrimary": "makeStyles-containedPrimary-180",
                                                      "containedSecondary": "makeStyles-containedSecondary-181",
                                                      "label": "makeStyles-buttonLabel-179",
                                                      "root": "makeStyles-root-178",
                                                    }
                                                  }
                                                  color="secondary"
                                                  component="a"
                                                  disableRipple={true}
                                                  href="https://en.wikipedia.org/wiki/Color_quantization"
                                                  startIcon={
                                                    <ExternalLink
                                                      color="black"
                                                      size={18}
                                                    />
                                                  }
                                                  variant="contained"
                                                >
                                                  <ForwardRef(Button)
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiButton-colorInherit",
                                                        "contained": "MuiButton-contained",
                                                        "containedPrimary": "MuiButton-containedPrimary makeStyles-containedPrimary-180",
                                                        "containedSecondary": "MuiButton-containedSecondary makeStyles-containedSecondary-181",
                                                        "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                        "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                        "disableElevation": "MuiButton-disableElevation",
                                                        "disabled": "Mui-disabled",
                                                        "endIcon": "MuiButton-endIcon",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "fullWidth": "MuiButton-fullWidth",
                                                        "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                        "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                        "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                        "label": "MuiButton-label makeStyles-buttonLabel-179",
                                                        "outlined": "MuiButton-outlined",
                                                        "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                        "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                        "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                        "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                        "root": "MuiButton-root makeStyles-root-178",
                                                        "sizeLarge": "MuiButton-sizeLarge",
                                                        "sizeSmall": "MuiButton-sizeSmall",
                                                        "startIcon": "MuiButton-startIcon",
                                                        "text": "MuiButton-text",
                                                        "textPrimary": "MuiButton-textPrimary",
                                                        "textSecondary": "MuiButton-textSecondary",
                                                        "textSizeLarge": "MuiButton-textSizeLarge",
                                                        "textSizeSmall": "MuiButton-textSizeSmall",
                                                      }
                                                    }
                                                    color="secondary"
                                                    component="a"
                                                    disableRipple={true}
                                                    href="https://en.wikipedia.org/wiki/Color_quantization"
                                                    startIcon={
                                                      <ExternalLink
                                                        color="black"
                                                        size={18}
                                                      />
                                                    }
                                                    variant="contained"
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      className="MuiButton-root makeStyles-root-178 MuiButton-contained MuiButton-containedSecondary makeStyles-containedSecondary-181"
                                                      component="a"
                                                      disableRipple={true}
                                                      disabled={false}
                                                      focusRipple={true}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      href="https://en.wikipedia.org/wiki/Color_quantization"
                                                      type="button"
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        className="MuiButton-root makeStyles-root-178 MuiButton-contained MuiButton-containedSecondary makeStyles-containedSecondary-181"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        component="a"
                                                        disableRipple={true}
                                                        disabled={false}
                                                        focusRipple={true}
                                                        focusVisibleClassName="Mui-focusVisible"
                                                        href="https://en.wikipedia.org/wiki/Color_quantization"
                                                        type="button"
                                                      >
                                                        <a
                                                          aria-disabled={false}
                                                          className="MuiButtonBase-root MuiButton-root makeStyles-root-178 MuiButton-contained MuiButton-containedSecondary makeStyles-containedSecondary-181"
                                                          href="https://en.wikipedia.org/wiki/Color_quantization"
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={0}
                                                        >
                                                          <span
                                                            className="MuiButton-label makeStyles-buttonLabel-179"
                                                          >
                                                            <span
                                                              className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                                            >
                                                              <ExternalLink
                                                                color="black"
                                                                size={18}
                                                              >
                                                                <svg
                                                                  fill="none"
                                                                  height={18}
                                                                  stroke="black"
                                                                  strokeLinecap="round"
                                                                  strokeLinejoin="round"
                                                                  strokeWidth="2"
                                                                  viewBox="0 0 24 24"
                                                                  width={18}
                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                >
                                                                  <path
                                                                    d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"
                                                                  />
                                                                  <polyline
                                                                    points="15 3 21 3 21 9"
                                                                  />
                                                                  <line
                                                                    x1="10"
                                                                    x2="21"
                                                                    y1="14"
                                                                    y2="3"
                                                                  />
                                                                </svg>
                                                              </ExternalLink>
                                                            </span>
                                                            Learn more
                                                          </span>
                                                        </a>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(Button)>
                                                </WithStyles(ForwardRef(Button))>
                                              </div>
                                            </Button>
                                          </div>
                                        </div>
                                      </div>
                                    </ForwardRef(Grid)>
                                  </WithStyles(ForwardRef(Grid))>
                                </GridItem>
                                <GridItem
                                  md={6}
                                  xs={12}
                                >
                                  <WithStyles(ForwardRef(Grid))
                                    item={true}
                                    md={6}
                                    xs={12}
                                  >
                                    <ForwardRef(Grid)
                                      classes={
                                        Object {
                                          "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                          "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                          "container": "MuiGrid-container",
                                          "direction-xs-column": "MuiGrid-direction-xs-column",
                                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                          "grid-lg-1": "MuiGrid-grid-lg-1",
                                          "grid-lg-10": "MuiGrid-grid-lg-10",
                                          "grid-lg-11": "MuiGrid-grid-lg-11",
                                          "grid-lg-12": "MuiGrid-grid-lg-12",
                                          "grid-lg-2": "MuiGrid-grid-lg-2",
                                          "grid-lg-3": "MuiGrid-grid-lg-3",
                                          "grid-lg-4": "MuiGrid-grid-lg-4",
                                          "grid-lg-5": "MuiGrid-grid-lg-5",
                                          "grid-lg-6": "MuiGrid-grid-lg-6",
                                          "grid-lg-7": "MuiGrid-grid-lg-7",
                                          "grid-lg-8": "MuiGrid-grid-lg-8",
                                          "grid-lg-9": "MuiGrid-grid-lg-9",
                                          "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                          "grid-lg-true": "MuiGrid-grid-lg-true",
                                          "grid-md-1": "MuiGrid-grid-md-1",
                                          "grid-md-10": "MuiGrid-grid-md-10",
                                          "grid-md-11": "MuiGrid-grid-md-11",
                                          "grid-md-12": "MuiGrid-grid-md-12",
                                          "grid-md-2": "MuiGrid-grid-md-2",
                                          "grid-md-3": "MuiGrid-grid-md-3",
                                          "grid-md-4": "MuiGrid-grid-md-4",
                                          "grid-md-5": "MuiGrid-grid-md-5",
                                          "grid-md-6": "MuiGrid-grid-md-6",
                                          "grid-md-7": "MuiGrid-grid-md-7",
                                          "grid-md-8": "MuiGrid-grid-md-8",
                                          "grid-md-9": "MuiGrid-grid-md-9",
                                          "grid-md-auto": "MuiGrid-grid-md-auto",
                                          "grid-md-true": "MuiGrid-grid-md-true",
                                          "grid-sm-1": "MuiGrid-grid-sm-1",
                                          "grid-sm-10": "MuiGrid-grid-sm-10",
                                          "grid-sm-11": "MuiGrid-grid-sm-11",
                                          "grid-sm-12": "MuiGrid-grid-sm-12",
                                          "grid-sm-2": "MuiGrid-grid-sm-2",
                                          "grid-sm-3": "MuiGrid-grid-sm-3",
                                          "grid-sm-4": "MuiGrid-grid-sm-4",
                                          "grid-sm-5": "MuiGrid-grid-sm-5",
                                          "grid-sm-6": "MuiGrid-grid-sm-6",
                                          "grid-sm-7": "MuiGrid-grid-sm-7",
                                          "grid-sm-8": "MuiGrid-grid-sm-8",
                                          "grid-sm-9": "MuiGrid-grid-sm-9",
                                          "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                          "grid-sm-true": "MuiGrid-grid-sm-true",
                                          "grid-xl-1": "MuiGrid-grid-xl-1",
                                          "grid-xl-10": "MuiGrid-grid-xl-10",
                                          "grid-xl-11": "MuiGrid-grid-xl-11",
                                          "grid-xl-12": "MuiGrid-grid-xl-12",
                                          "grid-xl-2": "MuiGrid-grid-xl-2",
                                          "grid-xl-3": "MuiGrid-grid-xl-3",
                                          "grid-xl-4": "MuiGrid-grid-xl-4",
                                          "grid-xl-5": "MuiGrid-grid-xl-5",
                                          "grid-xl-6": "MuiGrid-grid-xl-6",
                                          "grid-xl-7": "MuiGrid-grid-xl-7",
                                          "grid-xl-8": "MuiGrid-grid-xl-8",
                                          "grid-xl-9": "MuiGrid-grid-xl-9",
                                          "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                          "grid-xl-true": "MuiGrid-grid-xl-true",
                                          "grid-xs-1": "MuiGrid-grid-xs-1",
                                          "grid-xs-10": "MuiGrid-grid-xs-10",
                                          "grid-xs-11": "MuiGrid-grid-xs-11",
                                          "grid-xs-12": "MuiGrid-grid-xs-12",
                                          "grid-xs-2": "MuiGrid-grid-xs-2",
                                          "grid-xs-3": "MuiGrid-grid-xs-3",
                                          "grid-xs-4": "MuiGrid-grid-xs-4",
                                          "grid-xs-5": "MuiGrid-grid-xs-5",
                                          "grid-xs-6": "MuiGrid-grid-xs-6",
                                          "grid-xs-7": "MuiGrid-grid-xs-7",
                                          "grid-xs-8": "MuiGrid-grid-xs-8",
                                          "grid-xs-9": "MuiGrid-grid-xs-9",
                                          "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                          "grid-xs-true": "MuiGrid-grid-xs-true",
                                          "item": "MuiGrid-item",
                                          "justify-xs-center": "MuiGrid-justify-xs-center",
                                          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                          "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                          "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                          "root": "MuiGrid-root",
                                          "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                          "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                          "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                          "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                          "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                          "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                          "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                          "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                          "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                          "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                          "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                        }
                                      }
                                      item={true}
                                      md={6}
                                      xs={12}
                                    >
                                      <div
                                        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-6"
                                      >
                                        <Svgurl
                                          className="makeStyles-presentation-2"
                                        />
                                      </div>
                                    </ForwardRef(Grid)>
                                  </WithStyles(ForwardRef(Grid))>
                                </GridItem>
                              </div>
                            </ForwardRef(Grid)>
                          </WithStyles(ForwardRef(Grid))>
                        </GridContainer>
                      </div>
                    </ContentMarginContainer>
                  </div>
                </ForwardRef(Paper)>
              </WithStyles(ForwardRef(Paper))>
            </LandingSection>
            <LandingSection
              backgroundColor="default"
              flexRowDirection="row-reverse"
              leftChild={
                <div
                  className="makeStyles-textContentContainer-4"
                >
                  <Typography
                    align="left"
                    color="textPrimary"
                    gutterBottom={true}
                    variant="h3"
                  >
                    Build something with the CinderBlox API
                  </Typography>
                  <Typography
                    align="left"
                    className="makeStyles-textDescriptionContainer-5"
                    color="textSecondary"
                    gutterBottom={true}
                    variant="body1"
                  >
                    CinderBlox offers a public API endpoint as a service too!
                  </Typography>
                  <div
                    className="makeStyles-landingSectionCTAButtonContainer-6"
                  >
                    <Button
                      addGlow={false}
                      color="primary"
                      component="a"
                      href="https://google.com"
                      paddingRight={false}
                      startIcon={
                        <Book
                          color="white"
                          size={18}
                        />
                      }
                      variant="contained"
                    >
                      See the docs
                    </Button>
                  </div>
                </div>
              }
              leftGridItemProps={
                Object {
                  "md": 5,
                  "xs": 12,
                }
              }
              rightChild={
                <Svgurl
                  className="makeStyles-presentation-2 makeStyles-apiIllustration-3"
                />
              }
              rightGridItemProps={
                Object {
                  "md": 7,
                  "xs": 12,
                }
              }
            >
              <WithStyles(ForwardRef(Paper))
                className="makeStyles-root-220 makeStyles-defaultBackground-221"
                elevation={0}
                square={true}
              >
                <ForwardRef(Paper)
                  className="makeStyles-root-220 makeStyles-defaultBackground-221"
                  classes={
                    Object {
                      "elevation0": "MuiPaper-elevation0",
                      "elevation1": "MuiPaper-elevation1",
                      "elevation10": "MuiPaper-elevation10",
                      "elevation11": "MuiPaper-elevation11",
                      "elevation12": "MuiPaper-elevation12",
                      "elevation13": "MuiPaper-elevation13",
                      "elevation14": "MuiPaper-elevation14",
                      "elevation15": "MuiPaper-elevation15",
                      "elevation16": "MuiPaper-elevation16",
                      "elevation17": "MuiPaper-elevation17",
                      "elevation18": "MuiPaper-elevation18",
                      "elevation19": "MuiPaper-elevation19",
                      "elevation2": "MuiPaper-elevation2",
                      "elevation20": "MuiPaper-elevation20",
                      "elevation21": "MuiPaper-elevation21",
                      "elevation22": "MuiPaper-elevation22",
                      "elevation23": "MuiPaper-elevation23",
                      "elevation24": "MuiPaper-elevation24",
                      "elevation3": "MuiPaper-elevation3",
                      "elevation4": "MuiPaper-elevation4",
                      "elevation5": "MuiPaper-elevation5",
                      "elevation6": "MuiPaper-elevation6",
                      "elevation7": "MuiPaper-elevation7",
                      "elevation8": "MuiPaper-elevation8",
                      "elevation9": "MuiPaper-elevation9",
                      "outlined": "MuiPaper-outlined",
                      "root": "MuiPaper-root",
                      "rounded": "MuiPaper-rounded",
                    }
                  }
                  elevation={0}
                  square={true}
                >
                  <div
                    className="MuiPaper-root makeStyles-root-220 makeStyles-defaultBackground-221 MuiPaper-elevation0"
                  >
                    <ContentMarginContainer>
                      <div
                        className="makeStyles-root-225"
                      >
                        <GridContainer
                          direction="row-reverse"
                        >
                          <WithStyles(ForwardRef(Grid))
                            container={true}
                            direction="row-reverse"
                          >
                            <ForwardRef(Grid)
                              classes={
                                Object {
                                  "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                  "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                  "container": "MuiGrid-container",
                                  "direction-xs-column": "MuiGrid-direction-xs-column",
                                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                  "grid-lg-1": "MuiGrid-grid-lg-1",
                                  "grid-lg-10": "MuiGrid-grid-lg-10",
                                  "grid-lg-11": "MuiGrid-grid-lg-11",
                                  "grid-lg-12": "MuiGrid-grid-lg-12",
                                  "grid-lg-2": "MuiGrid-grid-lg-2",
                                  "grid-lg-3": "MuiGrid-grid-lg-3",
                                  "grid-lg-4": "MuiGrid-grid-lg-4",
                                  "grid-lg-5": "MuiGrid-grid-lg-5",
                                  "grid-lg-6": "MuiGrid-grid-lg-6",
                                  "grid-lg-7": "MuiGrid-grid-lg-7",
                                  "grid-lg-8": "MuiGrid-grid-lg-8",
                                  "grid-lg-9": "MuiGrid-grid-lg-9",
                                  "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                  "grid-lg-true": "MuiGrid-grid-lg-true",
                                  "grid-md-1": "MuiGrid-grid-md-1",
                                  "grid-md-10": "MuiGrid-grid-md-10",
                                  "grid-md-11": "MuiGrid-grid-md-11",
                                  "grid-md-12": "MuiGrid-grid-md-12",
                                  "grid-md-2": "MuiGrid-grid-md-2",
                                  "grid-md-3": "MuiGrid-grid-md-3",
                                  "grid-md-4": "MuiGrid-grid-md-4",
                                  "grid-md-5": "MuiGrid-grid-md-5",
                                  "grid-md-6": "MuiGrid-grid-md-6",
                                  "grid-md-7": "MuiGrid-grid-md-7",
                                  "grid-md-8": "MuiGrid-grid-md-8",
                                  "grid-md-9": "MuiGrid-grid-md-9",
                                  "grid-md-auto": "MuiGrid-grid-md-auto",
                                  "grid-md-true": "MuiGrid-grid-md-true",
                                  "grid-sm-1": "MuiGrid-grid-sm-1",
                                  "grid-sm-10": "MuiGrid-grid-sm-10",
                                  "grid-sm-11": "MuiGrid-grid-sm-11",
                                  "grid-sm-12": "MuiGrid-grid-sm-12",
                                  "grid-sm-2": "MuiGrid-grid-sm-2",
                                  "grid-sm-3": "MuiGrid-grid-sm-3",
                                  "grid-sm-4": "MuiGrid-grid-sm-4",
                                  "grid-sm-5": "MuiGrid-grid-sm-5",
                                  "grid-sm-6": "MuiGrid-grid-sm-6",
                                  "grid-sm-7": "MuiGrid-grid-sm-7",
                                  "grid-sm-8": "MuiGrid-grid-sm-8",
                                  "grid-sm-9": "MuiGrid-grid-sm-9",
                                  "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                  "grid-sm-true": "MuiGrid-grid-sm-true",
                                  "grid-xl-1": "MuiGrid-grid-xl-1",
                                  "grid-xl-10": "MuiGrid-grid-xl-10",
                                  "grid-xl-11": "MuiGrid-grid-xl-11",
                                  "grid-xl-12": "MuiGrid-grid-xl-12",
                                  "grid-xl-2": "MuiGrid-grid-xl-2",
                                  "grid-xl-3": "MuiGrid-grid-xl-3",
                                  "grid-xl-4": "MuiGrid-grid-xl-4",
                                  "grid-xl-5": "MuiGrid-grid-xl-5",
                                  "grid-xl-6": "MuiGrid-grid-xl-6",
                                  "grid-xl-7": "MuiGrid-grid-xl-7",
                                  "grid-xl-8": "MuiGrid-grid-xl-8",
                                  "grid-xl-9": "MuiGrid-grid-xl-9",
                                  "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                  "grid-xl-true": "MuiGrid-grid-xl-true",
                                  "grid-xs-1": "MuiGrid-grid-xs-1",
                                  "grid-xs-10": "MuiGrid-grid-xs-10",
                                  "grid-xs-11": "MuiGrid-grid-xs-11",
                                  "grid-xs-12": "MuiGrid-grid-xs-12",
                                  "grid-xs-2": "MuiGrid-grid-xs-2",
                                  "grid-xs-3": "MuiGrid-grid-xs-3",
                                  "grid-xs-4": "MuiGrid-grid-xs-4",
                                  "grid-xs-5": "MuiGrid-grid-xs-5",
                                  "grid-xs-6": "MuiGrid-grid-xs-6",
                                  "grid-xs-7": "MuiGrid-grid-xs-7",
                                  "grid-xs-8": "MuiGrid-grid-xs-8",
                                  "grid-xs-9": "MuiGrid-grid-xs-9",
                                  "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                  "grid-xs-true": "MuiGrid-grid-xs-true",
                                  "item": "MuiGrid-item",
                                  "justify-xs-center": "MuiGrid-justify-xs-center",
                                  "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                  "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                  "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                  "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                  "root": "MuiGrid-root",
                                  "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                  "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                  "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                  "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                  "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                  "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                  "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                  "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                  "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                  "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                  "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                }
                              }
                              container={true}
                              direction="row-reverse"
                            >
                              <div
                                className="MuiGrid-root MuiGrid-container MuiGrid-direction-xs-row-reverse"
                              >
                                <GridItem
                                  md={5}
                                  xs={12}
                                >
                                  <WithStyles(ForwardRef(Grid))
                                    item={true}
                                    md={5}
                                    xs={12}
                                  >
                                    <ForwardRef(Grid)
                                      classes={
                                        Object {
                                          "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                          "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                          "container": "MuiGrid-container",
                                          "direction-xs-column": "MuiGrid-direction-xs-column",
                                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                          "grid-lg-1": "MuiGrid-grid-lg-1",
                                          "grid-lg-10": "MuiGrid-grid-lg-10",
                                          "grid-lg-11": "MuiGrid-grid-lg-11",
                                          "grid-lg-12": "MuiGrid-grid-lg-12",
                                          "grid-lg-2": "MuiGrid-grid-lg-2",
                                          "grid-lg-3": "MuiGrid-grid-lg-3",
                                          "grid-lg-4": "MuiGrid-grid-lg-4",
                                          "grid-lg-5": "MuiGrid-grid-lg-5",
                                          "grid-lg-6": "MuiGrid-grid-lg-6",
                                          "grid-lg-7": "MuiGrid-grid-lg-7",
                                          "grid-lg-8": "MuiGrid-grid-lg-8",
                                          "grid-lg-9": "MuiGrid-grid-lg-9",
                                          "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                          "grid-lg-true": "MuiGrid-grid-lg-true",
                                          "grid-md-1": "MuiGrid-grid-md-1",
                                          "grid-md-10": "MuiGrid-grid-md-10",
                                          "grid-md-11": "MuiGrid-grid-md-11",
                                          "grid-md-12": "MuiGrid-grid-md-12",
                                          "grid-md-2": "MuiGrid-grid-md-2",
                                          "grid-md-3": "MuiGrid-grid-md-3",
                                          "grid-md-4": "MuiGrid-grid-md-4",
                                          "grid-md-5": "MuiGrid-grid-md-5",
                                          "grid-md-6": "MuiGrid-grid-md-6",
                                          "grid-md-7": "MuiGrid-grid-md-7",
                                          "grid-md-8": "MuiGrid-grid-md-8",
                                          "grid-md-9": "MuiGrid-grid-md-9",
                                          "grid-md-auto": "MuiGrid-grid-md-auto",
                                          "grid-md-true": "MuiGrid-grid-md-true",
                                          "grid-sm-1": "MuiGrid-grid-sm-1",
                                          "grid-sm-10": "MuiGrid-grid-sm-10",
                                          "grid-sm-11": "MuiGrid-grid-sm-11",
                                          "grid-sm-12": "MuiGrid-grid-sm-12",
                                          "grid-sm-2": "MuiGrid-grid-sm-2",
                                          "grid-sm-3": "MuiGrid-grid-sm-3",
                                          "grid-sm-4": "MuiGrid-grid-sm-4",
                                          "grid-sm-5": "MuiGrid-grid-sm-5",
                                          "grid-sm-6": "MuiGrid-grid-sm-6",
                                          "grid-sm-7": "MuiGrid-grid-sm-7",
                                          "grid-sm-8": "MuiGrid-grid-sm-8",
                                          "grid-sm-9": "MuiGrid-grid-sm-9",
                                          "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                          "grid-sm-true": "MuiGrid-grid-sm-true",
                                          "grid-xl-1": "MuiGrid-grid-xl-1",
                                          "grid-xl-10": "MuiGrid-grid-xl-10",
                                          "grid-xl-11": "MuiGrid-grid-xl-11",
                                          "grid-xl-12": "MuiGrid-grid-xl-12",
                                          "grid-xl-2": "MuiGrid-grid-xl-2",
                                          "grid-xl-3": "MuiGrid-grid-xl-3",
                                          "grid-xl-4": "MuiGrid-grid-xl-4",
                                          "grid-xl-5": "MuiGrid-grid-xl-5",
                                          "grid-xl-6": "MuiGrid-grid-xl-6",
                                          "grid-xl-7": "MuiGrid-grid-xl-7",
                                          "grid-xl-8": "MuiGrid-grid-xl-8",
                                          "grid-xl-9": "MuiGrid-grid-xl-9",
                                          "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                          "grid-xl-true": "MuiGrid-grid-xl-true",
                                          "grid-xs-1": "MuiGrid-grid-xs-1",
                                          "grid-xs-10": "MuiGrid-grid-xs-10",
                                          "grid-xs-11": "MuiGrid-grid-xs-11",
                                          "grid-xs-12": "MuiGrid-grid-xs-12",
                                          "grid-xs-2": "MuiGrid-grid-xs-2",
                                          "grid-xs-3": "MuiGrid-grid-xs-3",
                                          "grid-xs-4": "MuiGrid-grid-xs-4",
                                          "grid-xs-5": "MuiGrid-grid-xs-5",
                                          "grid-xs-6": "MuiGrid-grid-xs-6",
                                          "grid-xs-7": "MuiGrid-grid-xs-7",
                                          "grid-xs-8": "MuiGrid-grid-xs-8",
                                          "grid-xs-9": "MuiGrid-grid-xs-9",
                                          "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                          "grid-xs-true": "MuiGrid-grid-xs-true",
                                          "item": "MuiGrid-item",
                                          "justify-xs-center": "MuiGrid-justify-xs-center",
                                          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                          "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                          "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                          "root": "MuiGrid-root",
                                          "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                          "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                          "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                          "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                          "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                          "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                          "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                          "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                          "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                          "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                          "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                        }
                                      }
                                      item={true}
                                      md={5}
                                      xs={12}
                                    >
                                      <div
                                        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-5"
                                      >
                                        <div
                                          className="makeStyles-textContentContainer-4"
                                        >
                                          <Typography
                                            align="left"
                                            color="textPrimary"
                                            gutterBottom={true}
                                            variant="h3"
                                          >
                                            <WithStyles(ForwardRef(Typography))
                                              align="left"
                                              classes={
                                                Object {
                                                  "colorTextPrimary": "makeStyles-colorTextPrimary-146",
                                                  "colorTextSecondary": "makeStyles-colorTextSecondary-147",
                                                }
                                              }
                                              color="textPrimary"
                                              gutterBottom={true}
                                              variant="h3"
                                            >
                                              <ForwardRef(Typography)
                                                align="left"
                                                classes={
                                                  Object {
                                                    "alignCenter": "MuiTypography-alignCenter",
                                                    "alignJustify": "MuiTypography-alignJustify",
                                                    "alignLeft": "MuiTypography-alignLeft",
                                                    "alignRight": "MuiTypography-alignRight",
                                                    "body1": "MuiTypography-body1",
                                                    "body2": "MuiTypography-body2",
                                                    "button": "MuiTypography-button",
                                                    "caption": "MuiTypography-caption",
                                                    "colorError": "MuiTypography-colorError",
                                                    "colorInherit": "MuiTypography-colorInherit",
                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary makeStyles-colorTextPrimary-146",
                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary makeStyles-colorTextSecondary-147",
                                                    "displayBlock": "MuiTypography-displayBlock",
                                                    "displayInline": "MuiTypography-displayInline",
                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                    "h1": "MuiTypography-h1",
                                                    "h2": "MuiTypography-h2",
                                                    "h3": "MuiTypography-h3",
                                                    "h4": "MuiTypography-h4",
                                                    "h5": "MuiTypography-h5",
                                                    "h6": "MuiTypography-h6",
                                                    "noWrap": "MuiTypography-noWrap",
                                                    "overline": "MuiTypography-overline",
                                                    "paragraph": "MuiTypography-paragraph",
                                                    "root": "MuiTypography-root",
                                                    "srOnly": "MuiTypography-srOnly",
                                                    "subtitle1": "MuiTypography-subtitle1",
                                                    "subtitle2": "MuiTypography-subtitle2",
                                                  }
                                                }
                                                color="textPrimary"
                                                gutterBottom={true}
                                                variant="h3"
                                              >
                                                <h3
                                                  className="MuiTypography-root MuiTypography-h3 MuiTypography-colorTextPrimary makeStyles-colorTextPrimary-146 MuiTypography-gutterBottom MuiTypography-alignLeft"
                                                >
                                                  Build something with the CinderBlox API
                                                </h3>
                                              </ForwardRef(Typography)>
                                            </WithStyles(ForwardRef(Typography))>
                                          </Typography>
                                          <Typography
                                            align="left"
                                            className="makeStyles-textDescriptionContainer-5"
                                            color="textSecondary"
                                            gutterBottom={true}
                                            variant="body1"
                                          >
                                            <WithStyles(ForwardRef(Typography))
                                              align="left"
                                              className="makeStyles-textDescriptionContainer-5"
                                              classes={
                                                Object {
                                                  "colorTextPrimary": "makeStyles-colorTextPrimary-146",
                                                  "colorTextSecondary": "makeStyles-colorTextSecondary-147",
                                                }
                                              }
                                              color="textSecondary"
                                              gutterBottom={true}
                                              variant="body1"
                                            >
                                              <ForwardRef(Typography)
                                                align="left"
                                                className="makeStyles-textDescriptionContainer-5"
                                                classes={
                                                  Object {
                                                    "alignCenter": "MuiTypography-alignCenter",
                                                    "alignJustify": "MuiTypography-alignJustify",
                                                    "alignLeft": "MuiTypography-alignLeft",
                                                    "alignRight": "MuiTypography-alignRight",
                                                    "body1": "MuiTypography-body1",
                                                    "body2": "MuiTypography-body2",
                                                    "button": "MuiTypography-button",
                                                    "caption": "MuiTypography-caption",
                                                    "colorError": "MuiTypography-colorError",
                                                    "colorInherit": "MuiTypography-colorInherit",
                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary makeStyles-colorTextPrimary-146",
                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary makeStyles-colorTextSecondary-147",
                                                    "displayBlock": "MuiTypography-displayBlock",
                                                    "displayInline": "MuiTypography-displayInline",
                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                    "h1": "MuiTypography-h1",
                                                    "h2": "MuiTypography-h2",
                                                    "h3": "MuiTypography-h3",
                                                    "h4": "MuiTypography-h4",
                                                    "h5": "MuiTypography-h5",
                                                    "h6": "MuiTypography-h6",
                                                    "noWrap": "MuiTypography-noWrap",
                                                    "overline": "MuiTypography-overline",
                                                    "paragraph": "MuiTypography-paragraph",
                                                    "root": "MuiTypography-root",
                                                    "srOnly": "MuiTypography-srOnly",
                                                    "subtitle1": "MuiTypography-subtitle1",
                                                    "subtitle2": "MuiTypography-subtitle2",
                                                  }
                                                }
                                                color="textSecondary"
                                                gutterBottom={true}
                                                variant="body1"
                                              >
                                                <p
                                                  className="MuiTypography-root makeStyles-textDescriptionContainer-5 MuiTypography-body1 MuiTypography-colorTextSecondary makeStyles-colorTextSecondary-147 MuiTypography-gutterBottom MuiTypography-alignLeft"
                                                >
                                                  CinderBlox offers a public API endpoint as a service too!
                                                </p>
                                              </ForwardRef(Typography)>
                                            </WithStyles(ForwardRef(Typography))>
                                          </Typography>
                                          <div
                                            className="makeStyles-landingSectionCTAButtonContainer-6"
                                          >
                                            <Button
                                              addGlow={false}
                                              color="primary"
                                              component="a"
                                              href="https://google.com"
                                              paddingRight={false}
                                              startIcon={
                                                <Book
                                                  color="white"
                                                  size={18}
                                                />
                                              }
                                              variant="contained"
                                            >
                                              <div
                                                className=""
                                              >
                                                <WithStyles(ForwardRef(Button))
                                                  classes={
                                                    Object {
                                                      "containedPrimary": "makeStyles-containedPrimary-180",
                                                      "containedSecondary": "makeStyles-containedSecondary-181",
                                                      "label": "makeStyles-buttonLabel-179",
                                                      "root": "makeStyles-root-178",
                                                    }
                                                  }
                                                  color="primary"
                                                  component="a"
                                                  disableRipple={true}
                                                  href="https://google.com"
                                                  startIcon={
                                                    <Book
                                                      color="white"
                                                      size={18}
                                                    />
                                                  }
                                                  variant="contained"
                                                >
                                                  <ForwardRef(Button)
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiButton-colorInherit",
                                                        "contained": "MuiButton-contained",
                                                        "containedPrimary": "MuiButton-containedPrimary makeStyles-containedPrimary-180",
                                                        "containedSecondary": "MuiButton-containedSecondary makeStyles-containedSecondary-181",
                                                        "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                        "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                        "disableElevation": "MuiButton-disableElevation",
                                                        "disabled": "Mui-disabled",
                                                        "endIcon": "MuiButton-endIcon",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "fullWidth": "MuiButton-fullWidth",
                                                        "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                        "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                        "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                        "label": "MuiButton-label makeStyles-buttonLabel-179",
                                                        "outlined": "MuiButton-outlined",
                                                        "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                        "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                        "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                        "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                        "root": "MuiButton-root makeStyles-root-178",
                                                        "sizeLarge": "MuiButton-sizeLarge",
                                                        "sizeSmall": "MuiButton-sizeSmall",
                                                        "startIcon": "MuiButton-startIcon",
                                                        "text": "MuiButton-text",
                                                        "textPrimary": "MuiButton-textPrimary",
                                                        "textSecondary": "MuiButton-textSecondary",
                                                        "textSizeLarge": "MuiButton-textSizeLarge",
                                                        "textSizeSmall": "MuiButton-textSizeSmall",
                                                      }
                                                    }
                                                    color="primary"
                                                    component="a"
                                                    disableRipple={true}
                                                    href="https://google.com"
                                                    startIcon={
                                                      <Book
                                                        color="white"
                                                        size={18}
                                                      />
                                                    }
                                                    variant="contained"
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      className="MuiButton-root makeStyles-root-178 MuiButton-contained MuiButton-containedPrimary makeStyles-containedPrimary-180"
                                                      component="a"
                                                      disableRipple={true}
                                                      disabled={false}
                                                      focusRipple={true}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      href="https://google.com"
                                                      type="button"
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        className="MuiButton-root makeStyles-root-178 MuiButton-contained MuiButton-containedPrimary makeStyles-containedPrimary-180"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        component="a"
                                                        disableRipple={true}
                                                        disabled={false}
                                                        focusRipple={true}
                                                        focusVisibleClassName="Mui-focusVisible"
                                                        href="https://google.com"
                                                        type="button"
                                                      >
                                                        <a
                                                          aria-disabled={false}
                                                          className="MuiButtonBase-root MuiButton-root makeStyles-root-178 MuiButton-contained MuiButton-containedPrimary makeStyles-containedPrimary-180"
                                                          href="https://google.com"
                                                          onBlur={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={0}
                                                        >
                                                          <span
                                                            className="MuiButton-label makeStyles-buttonLabel-179"
                                                          >
                                                            <span
                                                              className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                                            >
                                                              <Book
                                                                color="white"
                                                                size={18}
                                                              >
                                                                <svg
                                                                  fill="none"
                                                                  height={18}
                                                                  stroke="white"
                                                                  strokeLinecap="round"
                                                                  strokeLinejoin="round"
                                                                  strokeWidth="2"
                                                                  viewBox="0 0 24 24"
                                                                  width={18}
                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                >
                                                                  <path
                                                                    d="M4 19.5A2.5 2.5 0 0 1 6.5 17H20"
                                                                  />
                                                                  <path
                                                                    d="M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z"
                                                                  />
                                                                </svg>
                                                              </Book>
                                                            </span>
                                                            See the docs
                                                          </span>
                                                        </a>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(Button)>
                                                </WithStyles(ForwardRef(Button))>
                                              </div>
                                            </Button>
                                          </div>
                                        </div>
                                      </div>
                                    </ForwardRef(Grid)>
                                  </WithStyles(ForwardRef(Grid))>
                                </GridItem>
                                <GridItem
                                  md={7}
                                  xs={12}
                                >
                                  <WithStyles(ForwardRef(Grid))
                                    item={true}
                                    md={7}
                                    xs={12}
                                  >
                                    <ForwardRef(Grid)
                                      classes={
                                        Object {
                                          "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                          "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                          "container": "MuiGrid-container",
                                          "direction-xs-column": "MuiGrid-direction-xs-column",
                                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                          "grid-lg-1": "MuiGrid-grid-lg-1",
                                          "grid-lg-10": "MuiGrid-grid-lg-10",
                                          "grid-lg-11": "MuiGrid-grid-lg-11",
                                          "grid-lg-12": "MuiGrid-grid-lg-12",
                                          "grid-lg-2": "MuiGrid-grid-lg-2",
                                          "grid-lg-3": "MuiGrid-grid-lg-3",
                                          "grid-lg-4": "MuiGrid-grid-lg-4",
                                          "grid-lg-5": "MuiGrid-grid-lg-5",
                                          "grid-lg-6": "MuiGrid-grid-lg-6",
                                          "grid-lg-7": "MuiGrid-grid-lg-7",
                                          "grid-lg-8": "MuiGrid-grid-lg-8",
                                          "grid-lg-9": "MuiGrid-grid-lg-9",
                                          "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                          "grid-lg-true": "MuiGrid-grid-lg-true",
                                          "grid-md-1": "MuiGrid-grid-md-1",
                                          "grid-md-10": "MuiGrid-grid-md-10",
                                          "grid-md-11": "MuiGrid-grid-md-11",
                                          "grid-md-12": "MuiGrid-grid-md-12",
                                          "grid-md-2": "MuiGrid-grid-md-2",
                                          "grid-md-3": "MuiGrid-grid-md-3",
                                          "grid-md-4": "MuiGrid-grid-md-4",
                                          "grid-md-5": "MuiGrid-grid-md-5",
                                          "grid-md-6": "MuiGrid-grid-md-6",
                                          "grid-md-7": "MuiGrid-grid-md-7",
                                          "grid-md-8": "MuiGrid-grid-md-8",
                                          "grid-md-9": "MuiGrid-grid-md-9",
                                          "grid-md-auto": "MuiGrid-grid-md-auto",
                                          "grid-md-true": "MuiGrid-grid-md-true",
                                          "grid-sm-1": "MuiGrid-grid-sm-1",
                                          "grid-sm-10": "MuiGrid-grid-sm-10",
                                          "grid-sm-11": "MuiGrid-grid-sm-11",
                                          "grid-sm-12": "MuiGrid-grid-sm-12",
                                          "grid-sm-2": "MuiGrid-grid-sm-2",
                                          "grid-sm-3": "MuiGrid-grid-sm-3",
                                          "grid-sm-4": "MuiGrid-grid-sm-4",
                                          "grid-sm-5": "MuiGrid-grid-sm-5",
                                          "grid-sm-6": "MuiGrid-grid-sm-6",
                                          "grid-sm-7": "MuiGrid-grid-sm-7",
                                          "grid-sm-8": "MuiGrid-grid-sm-8",
                                          "grid-sm-9": "MuiGrid-grid-sm-9",
                                          "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                          "grid-sm-true": "MuiGrid-grid-sm-true",
                                          "grid-xl-1": "MuiGrid-grid-xl-1",
                                          "grid-xl-10": "MuiGrid-grid-xl-10",
                                          "grid-xl-11": "MuiGrid-grid-xl-11",
                                          "grid-xl-12": "MuiGrid-grid-xl-12",
                                          "grid-xl-2": "MuiGrid-grid-xl-2",
                                          "grid-xl-3": "MuiGrid-grid-xl-3",
                                          "grid-xl-4": "MuiGrid-grid-xl-4",
                                          "grid-xl-5": "MuiGrid-grid-xl-5",
                                          "grid-xl-6": "MuiGrid-grid-xl-6",
                                          "grid-xl-7": "MuiGrid-grid-xl-7",
                                          "grid-xl-8": "MuiGrid-grid-xl-8",
                                          "grid-xl-9": "MuiGrid-grid-xl-9",
                                          "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                          "grid-xl-true": "MuiGrid-grid-xl-true",
                                          "grid-xs-1": "MuiGrid-grid-xs-1",
                                          "grid-xs-10": "MuiGrid-grid-xs-10",
                                          "grid-xs-11": "MuiGrid-grid-xs-11",
                                          "grid-xs-12": "MuiGrid-grid-xs-12",
                                          "grid-xs-2": "MuiGrid-grid-xs-2",
                                          "grid-xs-3": "MuiGrid-grid-xs-3",
                                          "grid-xs-4": "MuiGrid-grid-xs-4",
                                          "grid-xs-5": "MuiGrid-grid-xs-5",
                                          "grid-xs-6": "MuiGrid-grid-xs-6",
                                          "grid-xs-7": "MuiGrid-grid-xs-7",
                                          "grid-xs-8": "MuiGrid-grid-xs-8",
                                          "grid-xs-9": "MuiGrid-grid-xs-9",
                                          "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                          "grid-xs-true": "MuiGrid-grid-xs-true",
                                          "item": "MuiGrid-item",
                                          "justify-xs-center": "MuiGrid-justify-xs-center",
                                          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                          "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                          "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                          "root": "MuiGrid-root",
                                          "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                          "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                          "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                          "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                          "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                          "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                          "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                          "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                          "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                          "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                          "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                        }
                                      }
                                      item={true}
                                      md={7}
                                      xs={12}
                                    >
                                      <div
                                        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-7"
                                      >
                                        <Svgurl
                                          className="makeStyles-presentation-2 makeStyles-apiIllustration-3"
                                        />
                                      </div>
                                    </ForwardRef(Grid)>
                                  </WithStyles(ForwardRef(Grid))>
                                </GridItem>
                              </div>
                            </ForwardRef(Grid)>
                          </WithStyles(ForwardRef(Grid))>
                        </GridContainer>
                      </div>
                    </ContentMarginContainer>
                  </div>
                </ForwardRef(Paper)>
              </WithStyles(ForwardRef(Paper))>
            </LandingSection>
            <Footer>
              <footer
                className="makeStyles-root-354"
              >
                <ContentMarginContainer>
                  <div
                    className="makeStyles-root-225"
                  >
                    <GridContainer
                      className="makeStyles-gridContainer-355"
                      direction="row"
                      justify="flex-start"
                    >
                      <WithStyles(ForwardRef(Grid))
                        className="makeStyles-gridContainer-355"
                        container={true}
                        direction="row"
                        justify="flex-start"
                      >
                        <ForwardRef(Grid)
                          className="makeStyles-gridContainer-355"
                          classes={
                            Object {
                              "align-content-xs-center": "MuiGrid-align-content-xs-center",
                              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                              "align-items-xs-center": "MuiGrid-align-items-xs-center",
                              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                              "container": "MuiGrid-container",
                              "direction-xs-column": "MuiGrid-direction-xs-column",
                              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                              "grid-lg-1": "MuiGrid-grid-lg-1",
                              "grid-lg-10": "MuiGrid-grid-lg-10",
                              "grid-lg-11": "MuiGrid-grid-lg-11",
                              "grid-lg-12": "MuiGrid-grid-lg-12",
                              "grid-lg-2": "MuiGrid-grid-lg-2",
                              "grid-lg-3": "MuiGrid-grid-lg-3",
                              "grid-lg-4": "MuiGrid-grid-lg-4",
                              "grid-lg-5": "MuiGrid-grid-lg-5",
                              "grid-lg-6": "MuiGrid-grid-lg-6",
                              "grid-lg-7": "MuiGrid-grid-lg-7",
                              "grid-lg-8": "MuiGrid-grid-lg-8",
                              "grid-lg-9": "MuiGrid-grid-lg-9",
                              "grid-lg-auto": "MuiGrid-grid-lg-auto",
                              "grid-lg-true": "MuiGrid-grid-lg-true",
                              "grid-md-1": "MuiGrid-grid-md-1",
                              "grid-md-10": "MuiGrid-grid-md-10",
                              "grid-md-11": "MuiGrid-grid-md-11",
                              "grid-md-12": "MuiGrid-grid-md-12",
                              "grid-md-2": "MuiGrid-grid-md-2",
                              "grid-md-3": "MuiGrid-grid-md-3",
                              "grid-md-4": "MuiGrid-grid-md-4",
                              "grid-md-5": "MuiGrid-grid-md-5",
                              "grid-md-6": "MuiGrid-grid-md-6",
                              "grid-md-7": "MuiGrid-grid-md-7",
                              "grid-md-8": "MuiGrid-grid-md-8",
                              "grid-md-9": "MuiGrid-grid-md-9",
                              "grid-md-auto": "MuiGrid-grid-md-auto",
                              "grid-md-true": "MuiGrid-grid-md-true",
                              "grid-sm-1": "MuiGrid-grid-sm-1",
                              "grid-sm-10": "MuiGrid-grid-sm-10",
                              "grid-sm-11": "MuiGrid-grid-sm-11",
                              "grid-sm-12": "MuiGrid-grid-sm-12",
                              "grid-sm-2": "MuiGrid-grid-sm-2",
                              "grid-sm-3": "MuiGrid-grid-sm-3",
                              "grid-sm-4": "MuiGrid-grid-sm-4",
                              "grid-sm-5": "MuiGrid-grid-sm-5",
                              "grid-sm-6": "MuiGrid-grid-sm-6",
                              "grid-sm-7": "MuiGrid-grid-sm-7",
                              "grid-sm-8": "MuiGrid-grid-sm-8",
                              "grid-sm-9": "MuiGrid-grid-sm-9",
                              "grid-sm-auto": "MuiGrid-grid-sm-auto",
                              "grid-sm-true": "MuiGrid-grid-sm-true",
                              "grid-xl-1": "MuiGrid-grid-xl-1",
                              "grid-xl-10": "MuiGrid-grid-xl-10",
                              "grid-xl-11": "MuiGrid-grid-xl-11",
                              "grid-xl-12": "MuiGrid-grid-xl-12",
                              "grid-xl-2": "MuiGrid-grid-xl-2",
                              "grid-xl-3": "MuiGrid-grid-xl-3",
                              "grid-xl-4": "MuiGrid-grid-xl-4",
                              "grid-xl-5": "MuiGrid-grid-xl-5",
                              "grid-xl-6": "MuiGrid-grid-xl-6",
                              "grid-xl-7": "MuiGrid-grid-xl-7",
                              "grid-xl-8": "MuiGrid-grid-xl-8",
                              "grid-xl-9": "MuiGrid-grid-xl-9",
                              "grid-xl-auto": "MuiGrid-grid-xl-auto",
                              "grid-xl-true": "MuiGrid-grid-xl-true",
                              "grid-xs-1": "MuiGrid-grid-xs-1",
                              "grid-xs-10": "MuiGrid-grid-xs-10",
                              "grid-xs-11": "MuiGrid-grid-xs-11",
                              "grid-xs-12": "MuiGrid-grid-xs-12",
                              "grid-xs-2": "MuiGrid-grid-xs-2",
                              "grid-xs-3": "MuiGrid-grid-xs-3",
                              "grid-xs-4": "MuiGrid-grid-xs-4",
                              "grid-xs-5": "MuiGrid-grid-xs-5",
                              "grid-xs-6": "MuiGrid-grid-xs-6",
                              "grid-xs-7": "MuiGrid-grid-xs-7",
                              "grid-xs-8": "MuiGrid-grid-xs-8",
                              "grid-xs-9": "MuiGrid-grid-xs-9",
                              "grid-xs-auto": "MuiGrid-grid-xs-auto",
                              "grid-xs-true": "MuiGrid-grid-xs-true",
                              "item": "MuiGrid-item",
                              "justify-xs-center": "MuiGrid-justify-xs-center",
                              "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                              "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                              "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                              "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                              "root": "MuiGrid-root",
                              "spacing-xs-1": "MuiGrid-spacing-xs-1",
                              "spacing-xs-10": "MuiGrid-spacing-xs-10",
                              "spacing-xs-2": "MuiGrid-spacing-xs-2",
                              "spacing-xs-3": "MuiGrid-spacing-xs-3",
                              "spacing-xs-4": "MuiGrid-spacing-xs-4",
                              "spacing-xs-5": "MuiGrid-spacing-xs-5",
                              "spacing-xs-6": "MuiGrid-spacing-xs-6",
                              "spacing-xs-7": "MuiGrid-spacing-xs-7",
                              "spacing-xs-8": "MuiGrid-spacing-xs-8",
                              "spacing-xs-9": "MuiGrid-spacing-xs-9",
                              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                              "zeroMinWidth": "MuiGrid-zeroMinWidth",
                            }
                          }
                          container={true}
                          direction="row"
                          justify="flex-start"
                        >
                          <div
                            className="MuiGrid-root makeStyles-gridContainer-355 MuiGrid-container"
                          >
                            <GridItem
                              className="makeStyles-developerInfoContainer-356"
                              md={4}
                              xs={12}
                            >
                              <WithStyles(ForwardRef(Grid))
                                className="makeStyles-developerInfoContainer-356"
                                item={true}
                                md={4}
                                xs={12}
                              >
                                <ForwardRef(Grid)
                                  className="makeStyles-developerInfoContainer-356"
                                  classes={
                                    Object {
                                      "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                      "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                      "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                      "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                      "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                      "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                      "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                      "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                      "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                      "container": "MuiGrid-container",
                                      "direction-xs-column": "MuiGrid-direction-xs-column",
                                      "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                      "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                      "grid-lg-1": "MuiGrid-grid-lg-1",
                                      "grid-lg-10": "MuiGrid-grid-lg-10",
                                      "grid-lg-11": "MuiGrid-grid-lg-11",
                                      "grid-lg-12": "MuiGrid-grid-lg-12",
                                      "grid-lg-2": "MuiGrid-grid-lg-2",
                                      "grid-lg-3": "MuiGrid-grid-lg-3",
                                      "grid-lg-4": "MuiGrid-grid-lg-4",
                                      "grid-lg-5": "MuiGrid-grid-lg-5",
                                      "grid-lg-6": "MuiGrid-grid-lg-6",
                                      "grid-lg-7": "MuiGrid-grid-lg-7",
                                      "grid-lg-8": "MuiGrid-grid-lg-8",
                                      "grid-lg-9": "MuiGrid-grid-lg-9",
                                      "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                      "grid-lg-true": "MuiGrid-grid-lg-true",
                                      "grid-md-1": "MuiGrid-grid-md-1",
                                      "grid-md-10": "MuiGrid-grid-md-10",
                                      "grid-md-11": "MuiGrid-grid-md-11",
                                      "grid-md-12": "MuiGrid-grid-md-12",
                                      "grid-md-2": "MuiGrid-grid-md-2",
                                      "grid-md-3": "MuiGrid-grid-md-3",
                                      "grid-md-4": "MuiGrid-grid-md-4",
                                      "grid-md-5": "MuiGrid-grid-md-5",
                                      "grid-md-6": "MuiGrid-grid-md-6",
                                      "grid-md-7": "MuiGrid-grid-md-7",
                                      "grid-md-8": "MuiGrid-grid-md-8",
                                      "grid-md-9": "MuiGrid-grid-md-9",
                                      "grid-md-auto": "MuiGrid-grid-md-auto",
                                      "grid-md-true": "MuiGrid-grid-md-true",
                                      "grid-sm-1": "MuiGrid-grid-sm-1",
                                      "grid-sm-10": "MuiGrid-grid-sm-10",
                                      "grid-sm-11": "MuiGrid-grid-sm-11",
                                      "grid-sm-12": "MuiGrid-grid-sm-12",
                                      "grid-sm-2": "MuiGrid-grid-sm-2",
                                      "grid-sm-3": "MuiGrid-grid-sm-3",
                                      "grid-sm-4": "MuiGrid-grid-sm-4",
                                      "grid-sm-5": "MuiGrid-grid-sm-5",
                                      "grid-sm-6": "MuiGrid-grid-sm-6",
                                      "grid-sm-7": "MuiGrid-grid-sm-7",
                                      "grid-sm-8": "MuiGrid-grid-sm-8",
                                      "grid-sm-9": "MuiGrid-grid-sm-9",
                                      "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                      "grid-sm-true": "MuiGrid-grid-sm-true",
                                      "grid-xl-1": "MuiGrid-grid-xl-1",
                                      "grid-xl-10": "MuiGrid-grid-xl-10",
                                      "grid-xl-11": "MuiGrid-grid-xl-11",
                                      "grid-xl-12": "MuiGrid-grid-xl-12",
                                      "grid-xl-2": "MuiGrid-grid-xl-2",
                                      "grid-xl-3": "MuiGrid-grid-xl-3",
                                      "grid-xl-4": "MuiGrid-grid-xl-4",
                                      "grid-xl-5": "MuiGrid-grid-xl-5",
                                      "grid-xl-6": "MuiGrid-grid-xl-6",
                                      "grid-xl-7": "MuiGrid-grid-xl-7",
                                      "grid-xl-8": "MuiGrid-grid-xl-8",
                                      "grid-xl-9": "MuiGrid-grid-xl-9",
                                      "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                      "grid-xl-true": "MuiGrid-grid-xl-true",
                                      "grid-xs-1": "MuiGrid-grid-xs-1",
                                      "grid-xs-10": "MuiGrid-grid-xs-10",
                                      "grid-xs-11": "MuiGrid-grid-xs-11",
                                      "grid-xs-12": "MuiGrid-grid-xs-12",
                                      "grid-xs-2": "MuiGrid-grid-xs-2",
                                      "grid-xs-3": "MuiGrid-grid-xs-3",
                                      "grid-xs-4": "MuiGrid-grid-xs-4",
                                      "grid-xs-5": "MuiGrid-grid-xs-5",
                                      "grid-xs-6": "MuiGrid-grid-xs-6",
                                      "grid-xs-7": "MuiGrid-grid-xs-7",
                                      "grid-xs-8": "MuiGrid-grid-xs-8",
                                      "grid-xs-9": "MuiGrid-grid-xs-9",
                                      "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                      "grid-xs-true": "MuiGrid-grid-xs-true",
                                      "item": "MuiGrid-item",
                                      "justify-xs-center": "MuiGrid-justify-xs-center",
                                      "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                      "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                      "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                      "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                      "root": "MuiGrid-root",
                                      "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                      "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                      "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                      "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                      "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                      "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                      "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                      "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                      "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                      "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                      "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                      "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                      "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                    }
                                  }
                                  item={true}
                                  md={4}
                                  xs={12}
                                >
                                  <div
                                    className="MuiGrid-root makeStyles-developerInfoContainer-356 MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-4"
                                  >
                                    <ClickableLogo
                                      gutterBottom={true}
                                      logoColor="black"
                                      variant="h5"
                                    >
                                      <Link
                                        external={false}
                                        href="/"
                                        underline="none"
                                        variant="wrapper"
                                      >
                                        <ForwardRef
                                          href="/"
                                          underline="none"
                                        >
                                          <BaseLink
                                            href="/"
                                            innerRef={null}
                                            underline="none"
                                          >
                                            <WithStyles(ForwardRef(Link))
                                              className="active"
                                              component={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "propTypes": Object {},
                                                  "render": [Function],
                                                }
                                              }
                                              href="/"
                                              underline="none"
                                            >
                                              <ForwardRef(Link)
                                                className="active"
                                                classes={
                                                  Object {
                                                    "button": "MuiLink-button",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiLink-root",
                                                    "underlineAlways": "MuiLink-underlineAlways",
                                                    "underlineHover": "MuiLink-underlineHover",
                                                    "underlineNone": "MuiLink-underlineNone",
                                                  }
                                                }
                                                component={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "propTypes": Object {},
                                                    "render": [Function],
                                                  }
                                                }
                                                href="/"
                                                underline="none"
                                              >
                                                <WithStyles(ForwardRef(Typography))
                                                  className="MuiLink-root MuiLink-underlineNone active"
                                                  color="primary"
                                                  component={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "propTypes": Object {},
                                                      "render": [Function],
                                                    }
                                                  }
                                                  href="/"
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  variant="inherit"
                                                >
                                                  <ForwardRef(Typography)
                                                    className="MuiLink-root MuiLink-underlineNone active"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                    color="primary"
                                                    component={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "propTypes": Object {},
                                                        "render": [Function],
                                                      }
                                                    }
                                                    href="/"
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    variant="inherit"
                                                  >
                                                    <ForwardRef(NextComposed)
                                                      className="MuiTypography-root MuiLink-root MuiLink-underlineNone active MuiTypography-colorPrimary"
                                                      href="/"
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                    >
                                                      <Link
                                                        href="/"
                                                      >
                                                        <a
                                                          className="MuiTypography-root MuiLink-root MuiLink-underlineNone active MuiTypography-colorPrimary"
                                                          href="/"
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onFocus={[Function]}
                                                          onMouseEnter={[Function]}
                                                        >
                                                          <WithStyles(ForwardRef(Typography))
                                                            className="makeStyles-title-361 makeStyles-blackLogo-365"
                                                            gutterBottom={true}
                                                            variant="h5"
                                                          >
                                                            <ForwardRef(Typography)
                                                              className="makeStyles-title-361 makeStyles-blackLogo-365"
                                                              classes={
                                                                Object {
                                                                  "alignCenter": "MuiTypography-alignCenter",
                                                                  "alignJustify": "MuiTypography-alignJustify",
                                                                  "alignLeft": "MuiTypography-alignLeft",
                                                                  "alignRight": "MuiTypography-alignRight",
                                                                  "body1": "MuiTypography-body1",
                                                                  "body2": "MuiTypography-body2",
                                                                  "button": "MuiTypography-button",
                                                                  "caption": "MuiTypography-caption",
                                                                  "colorError": "MuiTypography-colorError",
                                                                  "colorInherit": "MuiTypography-colorInherit",
                                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                  "displayBlock": "MuiTypography-displayBlock",
                                                                  "displayInline": "MuiTypography-displayInline",
                                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                                  "h1": "MuiTypography-h1",
                                                                  "h2": "MuiTypography-h2",
                                                                  "h3": "MuiTypography-h3",
                                                                  "h4": "MuiTypography-h4",
                                                                  "h5": "MuiTypography-h5",
                                                                  "h6": "MuiTypography-h6",
                                                                  "noWrap": "MuiTypography-noWrap",
                                                                  "overline": "MuiTypography-overline",
                                                                  "paragraph": "MuiTypography-paragraph",
                                                                  "root": "MuiTypography-root",
                                                                  "srOnly": "MuiTypography-srOnly",
                                                                  "subtitle1": "MuiTypography-subtitle1",
                                                                  "subtitle2": "MuiTypography-subtitle2",
                                                                }
                                                              }
                                                              gutterBottom={true}
                                                              variant="h5"
                                                            >
                                                              <h5
                                                                className="MuiTypography-root makeStyles-title-361 makeStyles-blackLogo-365 MuiTypography-h5 MuiTypography-gutterBottom"
                                                              >
                                                                CinderBlox
                                                              </h5>
                                                            </ForwardRef(Typography)>
                                                          </WithStyles(ForwardRef(Typography))>
                                                        </a>
                                                      </Link>
                                                    </ForwardRef(NextComposed)>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                              </ForwardRef(Link)>
                                            </WithStyles(ForwardRef(Link))>
                                          </BaseLink>
                                        </ForwardRef>
                                      </Link>
                                    </ClickableLogo>
                                    <Link
                                      external={true}
                                      href="https://github.com/Jmeza081"
                                      underline="none"
                                      variant="wrapper"
                                    >
                                      <a
                                        className="makeStyles-wrapping-link-79"
                                        href="https://github.com/Jmeza081"
                                        underline="none"
                                      >
                                        <DevelopedByInfo>
                                          <div
                                            className="makeStyles-root-366"
                                          >
                                            <Avatar
                                              alt="Developer: Jesse Meza"
                                              imgSize="medium"
                                              src="/img/author_avatar.jpg"
                                              toolTipText="See more works by Jesse"
                                            >
                                              <Tooltip
                                                arrow={true}
                                                title="See more works by Jesse"
                                              >
                                                <WithStyles(ForwardRef(Tooltip))
                                                  arrow={true}
                                                  classes={
                                                    Object {
                                                      "arrow": "makeStyles-arrow-85",
                                                      "tooltip": "makeStyles-tooltip-84",
                                                    }
                                                  }
                                                  title="See more works by Jesse"
                                                >
                                                  <ForwardRef(Tooltip)
                                                    arrow={true}
                                                    classes={
                                                      Object {
                                                        "arrow": "MuiTooltip-arrow makeStyles-arrow-85",
                                                        "popper": "MuiTooltip-popper",
                                                        "popperArrow": "MuiTooltip-popperArrow",
                                                        "popperInteractive": "MuiTooltip-popperInteractive",
                                                        "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-84",
                                                        "tooltipArrow": "MuiTooltip-tooltipArrow",
                                                        "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                                        "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                                        "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                                        "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                                        "touch": "MuiTooltip-touch",
                                                      }
                                                    }
                                                    title="See more works by Jesse"
                                                  >
                                                    <div
                                                      aria-describedby={null}
                                                      className=""
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseOver={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchStart={[Function]}
                                                      title="See more works by Jesse"
                                                    >
                                                      <WithStyles(ForwardRef(Avatar))
                                                        alt="Developer: Jesse Meza"
                                                        className="makeStyles-medium-82"
                                                        src="/img/author_avatar.jpg"
                                                      >
                                                        <ForwardRef(Avatar)
                                                          alt="Developer: Jesse Meza"
                                                          className="makeStyles-medium-82"
                                                          classes={
                                                            Object {
                                                              "circle": "MuiAvatar-circle",
                                                              "colorDefault": "MuiAvatar-colorDefault",
                                                              "fallback": "MuiAvatar-fallback",
                                                              "img": "MuiAvatar-img",
                                                              "root": "MuiAvatar-root",
                                                              "rounded": "MuiAvatar-rounded",
                                                              "square": "MuiAvatar-square",
                                                            }
                                                          }
                                                          src="/img/author_avatar.jpg"
                                                        >
                                                          <div
                                                            className="MuiAvatar-root MuiAvatar-circle makeStyles-medium-82"
                                                          >
                                                            <img
                                                              alt="Developer: Jesse Meza"
                                                              className="MuiAvatar-img"
                                                              src="/img/author_avatar.jpg"
                                                            />
                                                          </div>
                                                        </ForwardRef(Avatar)>
                                                      </WithStyles(ForwardRef(Avatar))>
                                                    </div>
                                                    <ForwardRef(Popper)
                                                      anchorEl={
                                                        <div
                                                          class=""
                                                          title="See more works by Jesse"
                                                        >
                                                          <div
                                                            class="MuiAvatar-root MuiAvatar-circle makeStyles-medium-82"
                                                          >
                                                            <img
                                                              alt="Developer: Jesse Meza"
                                                              class="MuiAvatar-img"
                                                              src="/img/author_avatar.jpg"
                                                            />
                                                          </div>
                                                        </div>
                                                      }
                                                      className="MuiTooltip-popper MuiTooltip-popperArrow"
                                                      id={null}
                                                      open={false}
                                                      placement="bottom"
                                                      popperOptions={
                                                        Object {
                                                          "modifiers": Object {
                                                            "arrow": Object {
                                                              "element": null,
                                                              "enabled": false,
                                                            },
                                                          },
                                                        }
                                                      }
                                                      transition={true}
                                                    />
                                                  </ForwardRef(Tooltip)>
                                                </WithStyles(ForwardRef(Tooltip))>
                                              </Tooltip>
                                            </Avatar>
                                            <WithStyles(ForwardRef(Typography))
                                              className="makeStyles-developerText-367"
                                              component="span"
                                              variant="body1"
                                            >
                                              <ForwardRef(Typography)
                                                className="makeStyles-developerText-367"
                                                classes={
                                                  Object {
                                                    "alignCenter": "MuiTypography-alignCenter",
                                                    "alignJustify": "MuiTypography-alignJustify",
                                                    "alignLeft": "MuiTypography-alignLeft",
                                                    "alignRight": "MuiTypography-alignRight",
                                                    "body1": "MuiTypography-body1",
                                                    "body2": "MuiTypography-body2",
                                                    "button": "MuiTypography-button",
                                                    "caption": "MuiTypography-caption",
                                                    "colorError": "MuiTypography-colorError",
                                                    "colorInherit": "MuiTypography-colorInherit",
                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                    "displayBlock": "MuiTypography-displayBlock",
                                                    "displayInline": "MuiTypography-displayInline",
                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                    "h1": "MuiTypography-h1",
                                                    "h2": "MuiTypography-h2",
                                                    "h3": "MuiTypography-h3",
                                                    "h4": "MuiTypography-h4",
                                                    "h5": "MuiTypography-h5",
                                                    "h6": "MuiTypography-h6",
                                                    "noWrap": "MuiTypography-noWrap",
                                                    "overline": "MuiTypography-overline",
                                                    "paragraph": "MuiTypography-paragraph",
                                                    "root": "MuiTypography-root",
                                                    "srOnly": "MuiTypography-srOnly",
                                                    "subtitle1": "MuiTypography-subtitle1",
                                                    "subtitle2": "MuiTypography-subtitle2",
                                                  }
                                                }
                                                component="span"
                                                variant="body1"
                                              >
                                                <span
                                                  className="MuiTypography-root makeStyles-developerText-367 MuiTypography-body1"
                                                >
                                                  Developed by
                                                   
                                                  <WithStyles(ForwardRef(Typography))
                                                    color="primary"
                                                    display="inline"
                                                    variant="body1"
                                                  >
                                                    <ForwardRef(Typography)
                                                      classes={
                                                        Object {
                                                          "alignCenter": "MuiTypography-alignCenter",
                                                          "alignJustify": "MuiTypography-alignJustify",
                                                          "alignLeft": "MuiTypography-alignLeft",
                                                          "alignRight": "MuiTypography-alignRight",
                                                          "body1": "MuiTypography-body1",
                                                          "body2": "MuiTypography-body2",
                                                          "button": "MuiTypography-button",
                                                          "caption": "MuiTypography-caption",
                                                          "colorError": "MuiTypography-colorError",
                                                          "colorInherit": "MuiTypography-colorInherit",
                                                          "colorPrimary": "MuiTypography-colorPrimary",
                                                          "colorSecondary": "MuiTypography-colorSecondary",
                                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                          "displayBlock": "MuiTypography-displayBlock",
                                                          "displayInline": "MuiTypography-displayInline",
                                                          "gutterBottom": "MuiTypography-gutterBottom",
                                                          "h1": "MuiTypography-h1",
                                                          "h2": "MuiTypography-h2",
                                                          "h3": "MuiTypography-h3",
                                                          "h4": "MuiTypography-h4",
                                                          "h5": "MuiTypography-h5",
                                                          "h6": "MuiTypography-h6",
                                                          "noWrap": "MuiTypography-noWrap",
                                                          "overline": "MuiTypography-overline",
                                                          "paragraph": "MuiTypography-paragraph",
                                                          "root": "MuiTypography-root",
                                                          "srOnly": "MuiTypography-srOnly",
                                                          "subtitle1": "MuiTypography-subtitle1",
                                                          "subtitle2": "MuiTypography-subtitle2",
                                                        }
                                                      }
                                                      color="primary"
                                                      display="inline"
                                                      variant="body1"
                                                    >
                                                      <p
                                                        className="MuiTypography-root MuiTypography-body1 MuiTypography-colorPrimary MuiTypography-displayInline"
                                                      >
                                                        Jesse Meza
                                                      </p>
                                                    </ForwardRef(Typography)>
                                                  </WithStyles(ForwardRef(Typography))>
                                                </span>
                                              </ForwardRef(Typography)>
                                            </WithStyles(ForwardRef(Typography))>
                                          </div>
                                        </DevelopedByInfo>
                                      </a>
                                    </Link>
                                  </div>
                                </ForwardRef(Grid)>
                              </WithStyles(ForwardRef(Grid))>
                            </GridItem>
                            <GridItem
                              className="makeStyles-flexRow-358"
                              md={8}
                              xs={12}
                            >
                              <WithStyles(ForwardRef(Grid))
                                className="makeStyles-flexRow-358"
                                item={true}
                                md={8}
                                xs={12}
                              >
                                <ForwardRef(Grid)
                                  className="makeStyles-flexRow-358"
                                  classes={
                                    Object {
                                      "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                      "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                      "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                      "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                      "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                      "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                      "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                      "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                      "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                      "container": "MuiGrid-container",
                                      "direction-xs-column": "MuiGrid-direction-xs-column",
                                      "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                      "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                      "grid-lg-1": "MuiGrid-grid-lg-1",
                                      "grid-lg-10": "MuiGrid-grid-lg-10",
                                      "grid-lg-11": "MuiGrid-grid-lg-11",
                                      "grid-lg-12": "MuiGrid-grid-lg-12",
                                      "grid-lg-2": "MuiGrid-grid-lg-2",
                                      "grid-lg-3": "MuiGrid-grid-lg-3",
                                      "grid-lg-4": "MuiGrid-grid-lg-4",
                                      "grid-lg-5": "MuiGrid-grid-lg-5",
                                      "grid-lg-6": "MuiGrid-grid-lg-6",
                                      "grid-lg-7": "MuiGrid-grid-lg-7",
                                      "grid-lg-8": "MuiGrid-grid-lg-8",
                                      "grid-lg-9": "MuiGrid-grid-lg-9",
                                      "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                      "grid-lg-true": "MuiGrid-grid-lg-true",
                                      "grid-md-1": "MuiGrid-grid-md-1",
                                      "grid-md-10": "MuiGrid-grid-md-10",
                                      "grid-md-11": "MuiGrid-grid-md-11",
                                      "grid-md-12": "MuiGrid-grid-md-12",
                                      "grid-md-2": "MuiGrid-grid-md-2",
                                      "grid-md-3": "MuiGrid-grid-md-3",
                                      "grid-md-4": "MuiGrid-grid-md-4",
                                      "grid-md-5": "MuiGrid-grid-md-5",
                                      "grid-md-6": "MuiGrid-grid-md-6",
                                      "grid-md-7": "MuiGrid-grid-md-7",
                                      "grid-md-8": "MuiGrid-grid-md-8",
                                      "grid-md-9": "MuiGrid-grid-md-9",
                                      "grid-md-auto": "MuiGrid-grid-md-auto",
                                      "grid-md-true": "MuiGrid-grid-md-true",
                                      "grid-sm-1": "MuiGrid-grid-sm-1",
                                      "grid-sm-10": "MuiGrid-grid-sm-10",
                                      "grid-sm-11": "MuiGrid-grid-sm-11",
                                      "grid-sm-12": "MuiGrid-grid-sm-12",
                                      "grid-sm-2": "MuiGrid-grid-sm-2",
                                      "grid-sm-3": "MuiGrid-grid-sm-3",
                                      "grid-sm-4": "MuiGrid-grid-sm-4",
                                      "grid-sm-5": "MuiGrid-grid-sm-5",
                                      "grid-sm-6": "MuiGrid-grid-sm-6",
                                      "grid-sm-7": "MuiGrid-grid-sm-7",
                                      "grid-sm-8": "MuiGrid-grid-sm-8",
                                      "grid-sm-9": "MuiGrid-grid-sm-9",
                                      "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                      "grid-sm-true": "MuiGrid-grid-sm-true",
                                      "grid-xl-1": "MuiGrid-grid-xl-1",
                                      "grid-xl-10": "MuiGrid-grid-xl-10",
                                      "grid-xl-11": "MuiGrid-grid-xl-11",
                                      "grid-xl-12": "MuiGrid-grid-xl-12",
                                      "grid-xl-2": "MuiGrid-grid-xl-2",
                                      "grid-xl-3": "MuiGrid-grid-xl-3",
                                      "grid-xl-4": "MuiGrid-grid-xl-4",
                                      "grid-xl-5": "MuiGrid-grid-xl-5",
                                      "grid-xl-6": "MuiGrid-grid-xl-6",
                                      "grid-xl-7": "MuiGrid-grid-xl-7",
                                      "grid-xl-8": "MuiGrid-grid-xl-8",
                                      "grid-xl-9": "MuiGrid-grid-xl-9",
                                      "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                      "grid-xl-true": "MuiGrid-grid-xl-true",
                                      "grid-xs-1": "MuiGrid-grid-xs-1",
                                      "grid-xs-10": "MuiGrid-grid-xs-10",
                                      "grid-xs-11": "MuiGrid-grid-xs-11",
                                      "grid-xs-12": "MuiGrid-grid-xs-12",
                                      "grid-xs-2": "MuiGrid-grid-xs-2",
                                      "grid-xs-3": "MuiGrid-grid-xs-3",
                                      "grid-xs-4": "MuiGrid-grid-xs-4",
                                      "grid-xs-5": "MuiGrid-grid-xs-5",
                                      "grid-xs-6": "MuiGrid-grid-xs-6",
                                      "grid-xs-7": "MuiGrid-grid-xs-7",
                                      "grid-xs-8": "MuiGrid-grid-xs-8",
                                      "grid-xs-9": "MuiGrid-grid-xs-9",
                                      "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                      "grid-xs-true": "MuiGrid-grid-xs-true",
                                      "item": "MuiGrid-item",
                                      "justify-xs-center": "MuiGrid-justify-xs-center",
                                      "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                      "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                      "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                      "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                      "root": "MuiGrid-root",
                                      "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                      "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                      "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                      "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                      "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                      "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                      "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                      "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                      "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                      "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                      "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                      "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                      "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                    }
                                  }
                                  item={true}
                                  md={8}
                                  xs={12}
                                >
                                  <div
                                    className="MuiGrid-root makeStyles-flexRow-358 MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-8"
                                  >
                                    <div
                                      className="makeStyles-linkGroupItemContainer-357"
                                    >
                                      <FooterLinkGroup
                                        groupHeader="Users"
                                        links={
                                          Array [
                                            Object {
                                              "displayText": "App",
                                              "href": "/color-studio",
                                              "icon": <Server
                                                color="white"
                                              />,
                                            },
                                            Object {
                                              "displayText": "Releases",
                                              "external": true,
                                              "href": "https://headwayapp.co/cinderblox-studio-release-notes",
                                              "icon": <Package
                                                color="white"
                                              />,
                                            },
                                          ]
                                        }
                                      >
                                        <div
                                          className="makeStyles-root-368"
                                        >
                                          <Typography
                                            variant="subtitle1"
                                          >
                                            <WithStyles(ForwardRef(Typography))
                                              classes={
                                                Object {
                                                  "colorTextPrimary": "makeStyles-colorTextPrimary-146",
                                                  "colorTextSecondary": "makeStyles-colorTextSecondary-147",
                                                }
                                              }
                                              variant="subtitle1"
                                            >
                                              <ForwardRef(Typography)
                                                classes={
                                                  Object {
                                                    "alignCenter": "MuiTypography-alignCenter",
                                                    "alignJustify": "MuiTypography-alignJustify",
                                                    "alignLeft": "MuiTypography-alignLeft",
                                                    "alignRight": "MuiTypography-alignRight",
                                                    "body1": "MuiTypography-body1",
                                                    "body2": "MuiTypography-body2",
                                                    "button": "MuiTypography-button",
                                                    "caption": "MuiTypography-caption",
                                                    "colorError": "MuiTypography-colorError",
                                                    "colorInherit": "MuiTypography-colorInherit",
                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary makeStyles-colorTextPrimary-146",
                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary makeStyles-colorTextSecondary-147",
                                                    "displayBlock": "MuiTypography-displayBlock",
                                                    "displayInline": "MuiTypography-displayInline",
                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                    "h1": "MuiTypography-h1",
                                                    "h2": "MuiTypography-h2",
                                                    "h3": "MuiTypography-h3",
                                                    "h4": "MuiTypography-h4",
                                                    "h5": "MuiTypography-h5",
                                                    "h6": "MuiTypography-h6",
                                                    "noWrap": "MuiTypography-noWrap",
                                                    "overline": "MuiTypography-overline",
                                                    "paragraph": "MuiTypography-paragraph",
                                                    "root": "MuiTypography-root",
                                                    "srOnly": "MuiTypography-srOnly",
                                                    "subtitle1": "MuiTypography-subtitle1",
                                                    "subtitle2": "MuiTypography-subtitle2",
                                                  }
                                                }
                                                variant="subtitle1"
                                              >
                                                <h6
                                                  className="MuiTypography-root MuiTypography-subtitle1"
                                                >
                                                  Users
                                                </h6>
                                              </ForwardRef(Typography)>
                                            </WithStyles(ForwardRef(Typography))>
                                          </Typography>
                                          <div
                                            className="makeStyles-linkContainer-369"
                                            key="footer-link-App"
                                          >
                                            <Link
                                              external={false}
                                              href="/color-studio"
                                              icon={
                                                <Server
                                                  color="white"
                                                />
                                              }
                                              key="footer-link-App"
                                              variant="footer"
                                            >
                                              <WithStyles(ForwardRef(Typography))
                                                className="makeStyles-footer-link-76"
                                                component={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "render": [Function],
                                                  }
                                                }
                                                href="/color-studio"
                                                icon={
                                                  <Server
                                                    color="white"
                                                  />
                                                }
                                                variant="body1"
                                              >
                                                <ForwardRef(Typography)
                                                  className="makeStyles-footer-link-76"
                                                  classes={
                                                    Object {
                                                      "alignCenter": "MuiTypography-alignCenter",
                                                      "alignJustify": "MuiTypography-alignJustify",
                                                      "alignLeft": "MuiTypography-alignLeft",
                                                      "alignRight": "MuiTypography-alignRight",
                                                      "body1": "MuiTypography-body1",
                                                      "body2": "MuiTypography-body2",
                                                      "button": "MuiTypography-button",
                                                      "caption": "MuiTypography-caption",
                                                      "colorError": "MuiTypography-colorError",
                                                      "colorInherit": "MuiTypography-colorInherit",
                                                      "colorPrimary": "MuiTypography-colorPrimary",
                                                      "colorSecondary": "MuiTypography-colorSecondary",
                                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                      "displayBlock": "MuiTypography-displayBlock",
                                                      "displayInline": "MuiTypography-displayInline",
                                                      "gutterBottom": "MuiTypography-gutterBottom",
                                                      "h1": "MuiTypography-h1",
                                                      "h2": "MuiTypography-h2",
                                                      "h3": "MuiTypography-h3",
                                                      "h4": "MuiTypography-h4",
                                                      "h5": "MuiTypography-h5",
                                                      "h6": "MuiTypography-h6",
                                                      "noWrap": "MuiTypography-noWrap",
                                                      "overline": "MuiTypography-overline",
                                                      "paragraph": "MuiTypography-paragraph",
                                                      "root": "MuiTypography-root",
                                                      "srOnly": "MuiTypography-srOnly",
                                                      "subtitle1": "MuiTypography-subtitle1",
                                                      "subtitle2": "MuiTypography-subtitle2",
                                                    }
                                                  }
                                                  component={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "render": [Function],
                                                    }
                                                  }
                                                  href="/color-studio"
                                                  icon={
                                                    <Server
                                                      color="white"
                                                    />
                                                  }
                                                  variant="body1"
                                                >
                                                  <ForwardRef
                                                    className="MuiTypography-root makeStyles-footer-link-76 MuiTypography-body1"
                                                    href="/color-studio"
                                                    icon={
                                                      <Server
                                                        color="white"
                                                      />
                                                    }
                                                  >
                                                    <BaseLink
                                                      className="MuiTypography-root makeStyles-footer-link-76 MuiTypography-body1"
                                                      href="/color-studio"
                                                      icon={
                                                        <Server
                                                          color="white"
                                                        />
                                                      }
                                                      innerRef={null}
                                                    >
                                                      <WithStyles(ForwardRef(Link))
                                                        className="MuiTypography-root makeStyles-footer-link-76 MuiTypography-body1"
                                                        component={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "propTypes": Object {},
                                                            "render": [Function],
                                                          }
                                                        }
                                                        href="/color-studio"
                                                        icon={
                                                          <Server
                                                            color="white"
                                                          />
                                                        }
                                                      >
                                                        <ForwardRef(Link)
                                                          className="MuiTypography-root makeStyles-footer-link-76 MuiTypography-body1"
                                                          classes={
                                                            Object {
                                                              "button": "MuiLink-button",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "root": "MuiLink-root",
                                                              "underlineAlways": "MuiLink-underlineAlways",
                                                              "underlineHover": "MuiLink-underlineHover",
                                                              "underlineNone": "MuiLink-underlineNone",
                                                            }
                                                          }
                                                          component={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "propTypes": Object {},
                                                              "render": [Function],
                                                            }
                                                          }
                                                          href="/color-studio"
                                                          icon={
                                                            <Server
                                                              color="white"
                                                            />
                                                          }
                                                        >
                                                          <WithStyles(ForwardRef(Typography))
                                                            className="MuiLink-root MuiLink-underlineHover MuiTypography-root makeStyles-footer-link-76 MuiTypography-body1"
                                                            color="primary"
                                                            component={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "propTypes": Object {},
                                                                "render": [Function],
                                                              }
                                                            }
                                                            href="/color-studio"
                                                            icon={
                                                              <Server
                                                                color="white"
                                                              />
                                                            }
                                                            onBlur={[Function]}
                                                            onFocus={[Function]}
                                                            variant="inherit"
                                                          >
                                                            <ForwardRef(Typography)
                                                              className="MuiLink-root MuiLink-underlineHover MuiTypography-root makeStyles-footer-link-76 MuiTypography-body1"
                                                              classes={
                                                                Object {
                                                                  "alignCenter": "MuiTypography-alignCenter",
                                                                  "alignJustify": "MuiTypography-alignJustify",
                                                                  "alignLeft": "MuiTypography-alignLeft",
                                                                  "alignRight": "MuiTypography-alignRight",
                                                                  "body1": "MuiTypography-body1",
                                                                  "body2": "MuiTypography-body2",
                                                                  "button": "MuiTypography-button",
                                                                  "caption": "MuiTypography-caption",
                                                                  "colorError": "MuiTypography-colorError",
                                                                  "colorInherit": "MuiTypography-colorInherit",
                                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                  "displayBlock": "MuiTypography-displayBlock",
                                                                  "displayInline": "MuiTypography-displayInline",
                                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                                  "h1": "MuiTypography-h1",
                                                                  "h2": "MuiTypography-h2",
                                                                  "h3": "MuiTypography-h3",
                                                                  "h4": "MuiTypography-h4",
                                                                  "h5": "MuiTypography-h5",
                                                                  "h6": "MuiTypography-h6",
                                                                  "noWrap": "MuiTypography-noWrap",
                                                                  "overline": "MuiTypography-overline",
                                                                  "paragraph": "MuiTypography-paragraph",
                                                                  "root": "MuiTypography-root",
                                                                  "srOnly": "MuiTypography-srOnly",
                                                                  "subtitle1": "MuiTypography-subtitle1",
                                                                  "subtitle2": "MuiTypography-subtitle2",
                                                                }
                                                              }
                                                              color="primary"
                                                              component={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "propTypes": Object {},
                                                                  "render": [Function],
                                                                }
                                                              }
                                                              href="/color-studio"
                                                              icon={
                                                                <Server
                                                                  color="white"
                                                                />
                                                              }
                                                              onBlur={[Function]}
                                                              onFocus={[Function]}
                                                              variant="inherit"
                                                            >
                                                              <ForwardRef(NextComposed)
                                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-root makeStyles-footer-link-76 MuiTypography-body1 MuiTypography-colorPrimary"
                                                                href="/color-studio"
                                                                icon={
                                                                  <Server
                                                                    color="white"
                                                                  />
                                                                }
                                                                onBlur={[Function]}
                                                                onFocus={[Function]}
                                                              >
                                                                <Link
                                                                  href="/color-studio"
                                                                >
                                                                  <a
                                                                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-root makeStyles-footer-link-76 MuiTypography-body1 MuiTypography-colorPrimary"
                                                                    href="/color-studio"
                                                                    icon={
                                                                      <Server
                                                                        color="white"
                                                                      />
                                                                    }
                                                                    onBlur={[Function]}
                                                                    onClick={[Function]}
                                                                    onFocus={[Function]}
                                                                    onMouseEnter={[Function]}
                                                                  >
                                                                    App
                                                                  </a>
                                                                </Link>
                                                              </ForwardRef(NextComposed)>
                                                            </ForwardRef(Typography)>
                                                          </WithStyles(ForwardRef(Typography))>
                                                        </ForwardRef(Link)>
                                                      </WithStyles(ForwardRef(Link))>
                                                    </BaseLink>
                                                  </ForwardRef>
                                                </ForwardRef(Typography)>
                                              </WithStyles(ForwardRef(Typography))>
                                            </Link>
                                          </div>
                                          <div
                                            className="makeStyles-linkContainer-369"
                                            key="footer-link-Releases"
                                          >
                                            <Link
                                              external={true}
                                              href="https://headwayapp.co/cinderblox-studio-release-notes"
                                              icon={
                                                <Package
                                                  color="white"
                                                />
                                              }
                                              key="footer-link-Releases"
                                              variant="footer"
                                            >
                                              <WithStyles(ForwardRef(Typography))
                                                className="makeStyles-footer-link-76"
                                                component="a"
                                                href="https://headwayapp.co/cinderblox-studio-release-notes"
                                                icon={
                                                  <Package
                                                    color="white"
                                                  />
                                                }
                                                variant="body1"
                                              >
                                                <ForwardRef(Typography)
                                                  className="makeStyles-footer-link-76"
                                                  classes={
                                                    Object {
                                                      "alignCenter": "MuiTypography-alignCenter",
                                                      "alignJustify": "MuiTypography-alignJustify",
                                                      "alignLeft": "MuiTypography-alignLeft",
                                                      "alignRight": "MuiTypography-alignRight",
                                                      "body1": "MuiTypography-body1",
                                                      "body2": "MuiTypography-body2",
                                                      "button": "MuiTypography-button",
                                                      "caption": "MuiTypography-caption",
                                                      "colorError": "MuiTypography-colorError",
                                                      "colorInherit": "MuiTypography-colorInherit",
                                                      "colorPrimary": "MuiTypography-colorPrimary",
                                                      "colorSecondary": "MuiTypography-colorSecondary",
                                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                      "displayBlock": "MuiTypography-displayBlock",
                                                      "displayInline": "MuiTypography-displayInline",
                                                      "gutterBottom": "MuiTypography-gutterBottom",
                                                      "h1": "MuiTypography-h1",
                                                      "h2": "MuiTypography-h2",
                                                      "h3": "MuiTypography-h3",
                                                      "h4": "MuiTypography-h4",
                                                      "h5": "MuiTypography-h5",
                                                      "h6": "MuiTypography-h6",
                                                      "noWrap": "MuiTypography-noWrap",
                                                      "overline": "MuiTypography-overline",
                                                      "paragraph": "MuiTypography-paragraph",
                                                      "root": "MuiTypography-root",
                                                      "srOnly": "MuiTypography-srOnly",
                                                      "subtitle1": "MuiTypography-subtitle1",
                                                      "subtitle2": "MuiTypography-subtitle2",
                                                    }
                                                  }
                                                  component="a"
                                                  href="https://headwayapp.co/cinderblox-studio-release-notes"
                                                  icon={
                                                    <Package
                                                      color="white"
                                                    />
                                                  }
                                                  variant="body1"
                                                >
                                                  <a
                                                    className="MuiTypography-root makeStyles-footer-link-76 MuiTypography-body1"
                                                    href="https://headwayapp.co/cinderblox-studio-release-notes"
                                                    icon={
                                                      <Package
                                                        color="white"
                                                      />
                                                    }
                                                  >
                                                    Releases
                                                  </a>
                                                </ForwardRef(Typography)>
                                              </WithStyles(ForwardRef(Typography))>
                                            </Link>
                                          </div>
                                        </div>
                                      </FooterLinkGroup>
                                    </div>
                                    <div
                                      className="makeStyles-linkGroupItemContainer-357"
                                    >
                                      <FooterLinkGroup
                                        groupHeader="Developers"
                                        links={
                                          Array [
                                            Object {
                                              "displayText": "API Docs",
                                              "external": true,
                                              "href": "https://google.com",
                                              "icon": <Book
                                                color="white"
                                              />,
                                            },
                                            Object {
                                              "displayText": "GitHub",
                                              "external": true,
                                              "href": "https://github.com/z-nith/cinderblox-studio",
                                              "icon": <GitHub
                                                color="white"
                                              />,
                                            },
                                          ]
                                        }
                                      >
                                        <div
                                          className="makeStyles-root-368"
                                        >
                                          <Typography
                                            variant="subtitle1"
                                          >
                                            <WithStyles(ForwardRef(Typography))
                                              classes={
                                                Object {
                                                  "colorTextPrimary": "makeStyles-colorTextPrimary-146",
                                                  "colorTextSecondary": "makeStyles-colorTextSecondary-147",
                                                }
                                              }
                                              variant="subtitle1"
                                            >
                                              <ForwardRef(Typography)
                                                classes={
                                                  Object {
                                                    "alignCenter": "MuiTypography-alignCenter",
                                                    "alignJustify": "MuiTypography-alignJustify",
                                                    "alignLeft": "MuiTypography-alignLeft",
                                                    "alignRight": "MuiTypography-alignRight",
                                                    "body1": "MuiTypography-body1",
                                                    "body2": "MuiTypography-body2",
                                                    "button": "MuiTypography-button",
                                                    "caption": "MuiTypography-caption",
                                                    "colorError": "MuiTypography-colorError",
                                                    "colorInherit": "MuiTypography-colorInherit",
                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary makeStyles-colorTextPrimary-146",
                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary makeStyles-colorTextSecondary-147",
                                                    "displayBlock": "MuiTypography-displayBlock",
                                                    "displayInline": "MuiTypography-displayInline",
                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                    "h1": "MuiTypography-h1",
                                                    "h2": "MuiTypography-h2",
                                                    "h3": "MuiTypography-h3",
                                                    "h4": "MuiTypography-h4",
                                                    "h5": "MuiTypography-h5",
                                                    "h6": "MuiTypography-h6",
                                                    "noWrap": "MuiTypography-noWrap",
                                                    "overline": "MuiTypography-overline",
                                                    "paragraph": "MuiTypography-paragraph",
                                                    "root": "MuiTypography-root",
                                                    "srOnly": "MuiTypography-srOnly",
                                                    "subtitle1": "MuiTypography-subtitle1",
                                                    "subtitle2": "MuiTypography-subtitle2",
                                                  }
                                                }
                                                variant="subtitle1"
                                              >
                                                <h6
                                                  className="MuiTypography-root MuiTypography-subtitle1"
                                                >
                                                  Developers
                                                </h6>
                                              </ForwardRef(Typography)>
                                            </WithStyles(ForwardRef(Typography))>
                                          </Typography>
                                          <div
                                            className="makeStyles-linkContainer-369"
                                            key="footer-link-APIDocs"
                                          >
                                            <Link
                                              external={true}
                                              href="https://google.com"
                                              icon={
                                                <Book
                                                  color="white"
                                                />
                                              }
                                              key="footer-link-API Docs"
                                              variant="footer"
                                            >
                                              <WithStyles(ForwardRef(Typography))
                                                className="makeStyles-footer-link-76"
                                                component="a"
                                                href="https://google.com"
                                                icon={
                                                  <Book
                                                    color="white"
                                                  />
                                                }
                                                variant="body1"
                                              >
                                                <ForwardRef(Typography)
                                                  className="makeStyles-footer-link-76"
                                                  classes={
                                                    Object {
                                                      "alignCenter": "MuiTypography-alignCenter",
                                                      "alignJustify": "MuiTypography-alignJustify",
                                                      "alignLeft": "MuiTypography-alignLeft",
                                                      "alignRight": "MuiTypography-alignRight",
                                                      "body1": "MuiTypography-body1",
                                                      "body2": "MuiTypography-body2",
                                                      "button": "MuiTypography-button",
                                                      "caption": "MuiTypography-caption",
                                                      "colorError": "MuiTypography-colorError",
                                                      "colorInherit": "MuiTypography-colorInherit",
                                                      "colorPrimary": "MuiTypography-colorPrimary",
                                                      "colorSecondary": "MuiTypography-colorSecondary",
                                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                      "displayBlock": "MuiTypography-displayBlock",
                                                      "displayInline": "MuiTypography-displayInline",
                                                      "gutterBottom": "MuiTypography-gutterBottom",
                                                      "h1": "MuiTypography-h1",
                                                      "h2": "MuiTypography-h2",
                                                      "h3": "MuiTypography-h3",
                                                      "h4": "MuiTypography-h4",
                                                      "h5": "MuiTypography-h5",
                                                      "h6": "MuiTypography-h6",
                                                      "noWrap": "MuiTypography-noWrap",
                                                      "overline": "MuiTypography-overline",
                                                      "paragraph": "MuiTypography-paragraph",
                                                      "root": "MuiTypography-root",
                                                      "srOnly": "MuiTypography-srOnly",
                                                      "subtitle1": "MuiTypography-subtitle1",
                                                      "subtitle2": "MuiTypography-subtitle2",
                                                    }
                                                  }
                                                  component="a"
                                                  href="https://google.com"
                                                  icon={
                                                    <Book
                                                      color="white"
                                                    />
                                                  }
                                                  variant="body1"
                                                >
                                                  <a
                                                    className="MuiTypography-root makeStyles-footer-link-76 MuiTypography-body1"
                                                    href="https://google.com"
                                                    icon={
                                                      <Book
                                                        color="white"
                                                      />
                                                    }
                                                  >
                                                    API Docs
                                                  </a>
                                                </ForwardRef(Typography)>
                                              </WithStyles(ForwardRef(Typography))>
                                            </Link>
                                          </div>
                                          <div
                                            className="makeStyles-linkContainer-369"
                                            key="footer-link-GitHub"
                                          >
                                            <Link
                                              external={true}
                                              href="https://github.com/z-nith/cinderblox-studio"
                                              icon={
                                                <GitHub
                                                  color="white"
                                                />
                                              }
                                              key="footer-link-GitHub"
                                              variant="footer"
                                            >
                                              <WithStyles(ForwardRef(Typography))
                                                className="makeStyles-footer-link-76"
                                                component="a"
                                                href="https://github.com/z-nith/cinderblox-studio"
                                                icon={
                                                  <GitHub
                                                    color="white"
                                                  />
                                                }
                                                variant="body1"
                                              >
                                                <ForwardRef(Typography)
                                                  className="makeStyles-footer-link-76"
                                                  classes={
                                                    Object {
                                                      "alignCenter": "MuiTypography-alignCenter",
                                                      "alignJustify": "MuiTypography-alignJustify",
                                                      "alignLeft": "MuiTypography-alignLeft",
                                                      "alignRight": "MuiTypography-alignRight",
                                                      "body1": "MuiTypography-body1",
                                                      "body2": "MuiTypography-body2",
                                                      "button": "MuiTypography-button",
                                                      "caption": "MuiTypography-caption",
                                                      "colorError": "MuiTypography-colorError",
                                                      "colorInherit": "MuiTypography-colorInherit",
                                                      "colorPrimary": "MuiTypography-colorPrimary",
                                                      "colorSecondary": "MuiTypography-colorSecondary",
                                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                      "displayBlock": "MuiTypography-displayBlock",
                                                      "displayInline": "MuiTypography-displayInline",
                                                      "gutterBottom": "MuiTypography-gutterBottom",
                                                      "h1": "MuiTypography-h1",
                                                      "h2": "MuiTypography-h2",
                                                      "h3": "MuiTypography-h3",
                                                      "h4": "MuiTypography-h4",
                                                      "h5": "MuiTypography-h5",
                                                      "h6": "MuiTypography-h6",
                                                      "noWrap": "MuiTypography-noWrap",
                                                      "overline": "MuiTypography-overline",
                                                      "paragraph": "MuiTypography-paragraph",
                                                      "root": "MuiTypography-root",
                                                      "srOnly": "MuiTypography-srOnly",
                                                      "subtitle1": "MuiTypography-subtitle1",
                                                      "subtitle2": "MuiTypography-subtitle2",
                                                    }
                                                  }
                                                  component="a"
                                                  href="https://github.com/z-nith/cinderblox-studio"
                                                  icon={
                                                    <GitHub
                                                      color="white"
                                                    />
                                                  }
                                                  variant="body1"
                                                >
                                                  <a
                                                    className="MuiTypography-root makeStyles-footer-link-76 MuiTypography-body1"
                                                    href="https://github.com/z-nith/cinderblox-studio"
                                                    icon={
                                                      <GitHub
                                                        color="white"
                                                      />
                                                    }
                                                  >
                                                    GitHub
                                                  </a>
                                                </ForwardRef(Typography)>
                                              </WithStyles(ForwardRef(Typography))>
                                            </Link>
                                          </div>
                                        </div>
                                      </FooterLinkGroup>
                                    </div>
                                    <div
                                      className="makeStyles-linkGroupItemContainer-357"
                                    >
                                      <FooterLinkGroup
                                        groupHeader="Legal"
                                        links={
                                          Array [
                                            Object {
                                              "displayText": "Licenses",
                                              "href": "/licenses",
                                              "icon": <File
                                                color="white"
                                              />,
                                            },
                                            Object {
                                              "displayText": "Terms of use",
                                              "href": "/terms-of-use",
                                              "icon": <Info
                                                color="white"
                                              />,
                                            },
                                          ]
                                        }
                                      >
                                        <div
                                          className="makeStyles-root-368"
                                        >
                                          <Typography
                                            variant="subtitle1"
                                          >
                                            <WithStyles(ForwardRef(Typography))
                                              classes={
                                                Object {
                                                  "colorTextPrimary": "makeStyles-colorTextPrimary-146",
                                                  "colorTextSecondary": "makeStyles-colorTextSecondary-147",
                                                }
                                              }
                                              variant="subtitle1"
                                            >
                                              <ForwardRef(Typography)
                                                classes={
                                                  Object {
                                                    "alignCenter": "MuiTypography-alignCenter",
                                                    "alignJustify": "MuiTypography-alignJustify",
                                                    "alignLeft": "MuiTypography-alignLeft",
                                                    "alignRight": "MuiTypography-alignRight",
                                                    "body1": "MuiTypography-body1",
                                                    "body2": "MuiTypography-body2",
                                                    "button": "MuiTypography-button",
                                                    "caption": "MuiTypography-caption",
                                                    "colorError": "MuiTypography-colorError",
                                                    "colorInherit": "MuiTypography-colorInherit",
                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary makeStyles-colorTextPrimary-146",
                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary makeStyles-colorTextSecondary-147",
                                                    "displayBlock": "MuiTypography-displayBlock",
                                                    "displayInline": "MuiTypography-displayInline",
                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                    "h1": "MuiTypography-h1",
                                                    "h2": "MuiTypography-h2",
                                                    "h3": "MuiTypography-h3",
                                                    "h4": "MuiTypography-h4",
                                                    "h5": "MuiTypography-h5",
                                                    "h6": "MuiTypography-h6",
                                                    "noWrap": "MuiTypography-noWrap",
                                                    "overline": "MuiTypography-overline",
                                                    "paragraph": "MuiTypography-paragraph",
                                                    "root": "MuiTypography-root",
                                                    "srOnly": "MuiTypography-srOnly",
                                                    "subtitle1": "MuiTypography-subtitle1",
                                                    "subtitle2": "MuiTypography-subtitle2",
                                                  }
                                                }
                                                variant="subtitle1"
                                              >
                                                <h6
                                                  className="MuiTypography-root MuiTypography-subtitle1"
                                                >
                                                  Legal
                                                </h6>
                                              </ForwardRef(Typography)>
                                            </WithStyles(ForwardRef(Typography))>
                                          </Typography>
                                          <div
                                            className="makeStyles-linkContainer-369"
                                            key="footer-link-Licenses"
                                          >
                                            <Link
                                              external={false}
                                              href="/licenses"
                                              icon={
                                                <File
                                                  color="white"
                                                />
                                              }
                                              key="footer-link-Licenses"
                                              variant="footer"
                                            >
                                              <WithStyles(ForwardRef(Typography))
                                                className="makeStyles-footer-link-76"
                                                component={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "render": [Function],
                                                  }
                                                }
                                                href="/licenses"
                                                icon={
                                                  <File
                                                    color="white"
                                                  />
                                                }
                                                variant="body1"
                                              >
                                                <ForwardRef(Typography)
                                                  className="makeStyles-footer-link-76"
                                                  classes={
                                                    Object {
                                                      "alignCenter": "MuiTypography-alignCenter",
                                                      "alignJustify": "MuiTypography-alignJustify",
                                                      "alignLeft": "MuiTypography-alignLeft",
                                                      "alignRight": "MuiTypography-alignRight",
                                                      "body1": "MuiTypography-body1",
                                                      "body2": "MuiTypography-body2",
                                                      "button": "MuiTypography-button",
                                                      "caption": "MuiTypography-caption",
                                                      "colorError": "MuiTypography-colorError",
                                                      "colorInherit": "MuiTypography-colorInherit",
                                                      "colorPrimary": "MuiTypography-colorPrimary",
                                                      "colorSecondary": "MuiTypography-colorSecondary",
                                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                      "displayBlock": "MuiTypography-displayBlock",
                                                      "displayInline": "MuiTypography-displayInline",
                                                      "gutterBottom": "MuiTypography-gutterBottom",
                                                      "h1": "MuiTypography-h1",
                                                      "h2": "MuiTypography-h2",
                                                      "h3": "MuiTypography-h3",
                                                      "h4": "MuiTypography-h4",
                                                      "h5": "MuiTypography-h5",
                                                      "h6": "MuiTypography-h6",
                                                      "noWrap": "MuiTypography-noWrap",
                                                      "overline": "MuiTypography-overline",
                                                      "paragraph": "MuiTypography-paragraph",
                                                      "root": "MuiTypography-root",
                                                      "srOnly": "MuiTypography-srOnly",
                                                      "subtitle1": "MuiTypography-subtitle1",
                                                      "subtitle2": "MuiTypography-subtitle2",
                                                    }
                                                  }
                                                  component={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "render": [Function],
                                                    }
                                                  }
                                                  href="/licenses"
                                                  icon={
                                                    <File
                                                      color="white"
                                                    />
                                                  }
                                                  variant="body1"
                                                >
                                                  <ForwardRef
                                                    className="MuiTypography-root makeStyles-footer-link-76 MuiTypography-body1"
                                                    href="/licenses"
                                                    icon={
                                                      <File
                                                        color="white"
                                                      />
                                                    }
                                                  >
                                                    <BaseLink
                                                      className="MuiTypography-root makeStyles-footer-link-76 MuiTypography-body1"
                                                      href="/licenses"
                                                      icon={
                                                        <File
                                                          color="white"
                                                        />
                                                      }
                                                      innerRef={null}
                                                    >
                                                      <WithStyles(ForwardRef(Link))
                                                        className="MuiTypography-root makeStyles-footer-link-76 MuiTypography-body1"
                                                        component={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "propTypes": Object {},
                                                            "render": [Function],
                                                          }
                                                        }
                                                        href="/licenses"
                                                        icon={
                                                          <File
                                                            color="white"
                                                          />
                                                        }
                                                      >
                                                        <ForwardRef(Link)
                                                          className="MuiTypography-root makeStyles-footer-link-76 MuiTypography-body1"
                                                          classes={
                                                            Object {
                                                              "button": "MuiLink-button",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "root": "MuiLink-root",
                                                              "underlineAlways": "MuiLink-underlineAlways",
                                                              "underlineHover": "MuiLink-underlineHover",
                                                              "underlineNone": "MuiLink-underlineNone",
                                                            }
                                                          }
                                                          component={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "propTypes": Object {},
                                                              "render": [Function],
                                                            }
                                                          }
                                                          href="/licenses"
                                                          icon={
                                                            <File
                                                              color="white"
                                                            />
                                                          }
                                                        >
                                                          <WithStyles(ForwardRef(Typography))
                                                            className="MuiLink-root MuiLink-underlineHover MuiTypography-root makeStyles-footer-link-76 MuiTypography-body1"
                                                            color="primary"
                                                            component={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "propTypes": Object {},
                                                                "render": [Function],
                                                              }
                                                            }
                                                            href="/licenses"
                                                            icon={
                                                              <File
                                                                color="white"
                                                              />
                                                            }
                                                            onBlur={[Function]}
                                                            onFocus={[Function]}
                                                            variant="inherit"
                                                          >
                                                            <ForwardRef(Typography)
                                                              className="MuiLink-root MuiLink-underlineHover MuiTypography-root makeStyles-footer-link-76 MuiTypography-body1"
                                                              classes={
                                                                Object {
                                                                  "alignCenter": "MuiTypography-alignCenter",
                                                                  "alignJustify": "MuiTypography-alignJustify",
                                                                  "alignLeft": "MuiTypography-alignLeft",
                                                                  "alignRight": "MuiTypography-alignRight",
                                                                  "body1": "MuiTypography-body1",
                                                                  "body2": "MuiTypography-body2",
                                                                  "button": "MuiTypography-button",
                                                                  "caption": "MuiTypography-caption",
                                                                  "colorError": "MuiTypography-colorError",
                                                                  "colorInherit": "MuiTypography-colorInherit",
                                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                  "displayBlock": "MuiTypography-displayBlock",
                                                                  "displayInline": "MuiTypography-displayInline",
                                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                                  "h1": "MuiTypography-h1",
                                                                  "h2": "MuiTypography-h2",
                                                                  "h3": "MuiTypography-h3",
                                                                  "h4": "MuiTypography-h4",
                                                                  "h5": "MuiTypography-h5",
                                                                  "h6": "MuiTypography-h6",
                                                                  "noWrap": "MuiTypography-noWrap",
                                                                  "overline": "MuiTypography-overline",
                                                                  "paragraph": "MuiTypography-paragraph",
                                                                  "root": "MuiTypography-root",
                                                                  "srOnly": "MuiTypography-srOnly",
                                                                  "subtitle1": "MuiTypography-subtitle1",
                                                                  "subtitle2": "MuiTypography-subtitle2",
                                                                }
                                                              }
                                                              color="primary"
                                                              component={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "propTypes": Object {},
                                                                  "render": [Function],
                                                                }
                                                              }
                                                              href="/licenses"
                                                              icon={
                                                                <File
                                                                  color="white"
                                                                />
                                                              }
                                                              onBlur={[Function]}
                                                              onFocus={[Function]}
                                                              variant="inherit"
                                                            >
                                                              <ForwardRef(NextComposed)
                                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-root makeStyles-footer-link-76 MuiTypography-body1 MuiTypography-colorPrimary"
                                                                href="/licenses"
                                                                icon={
                                                                  <File
                                                                    color="white"
                                                                  />
                                                                }
                                                                onBlur={[Function]}
                                                                onFocus={[Function]}
                                                              >
                                                                <Link
                                                                  href="/licenses"
                                                                >
                                                                  <a
                                                                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-root makeStyles-footer-link-76 MuiTypography-body1 MuiTypography-colorPrimary"
                                                                    href="/licenses"
                                                                    icon={
                                                                      <File
                                                                        color="white"
                                                                      />
                                                                    }
                                                                    onBlur={[Function]}
                                                                    onClick={[Function]}
                                                                    onFocus={[Function]}
                                                                    onMouseEnter={[Function]}
                                                                  >
                                                                    Licenses
                                                                  </a>
                                                                </Link>
                                                              </ForwardRef(NextComposed)>
                                                            </ForwardRef(Typography)>
                                                          </WithStyles(ForwardRef(Typography))>
                                                        </ForwardRef(Link)>
                                                      </WithStyles(ForwardRef(Link))>
                                                    </BaseLink>
                                                  </ForwardRef>
                                                </ForwardRef(Typography)>
                                              </WithStyles(ForwardRef(Typography))>
                                            </Link>
                                          </div>
                                          <div
                                            className="makeStyles-linkContainer-369"
                                            key="footer-link-Termsof use"
                                          >
                                            <Link
                                              external={false}
                                              href="/terms-of-use"
                                              icon={
                                                <Info
                                                  color="white"
                                                />
                                              }
                                              key="footer-link-Terms of use"
                                              variant="footer"
                                            >
                                              <WithStyles(ForwardRef(Typography))
                                                className="makeStyles-footer-link-76"
                                                component={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "render": [Function],
                                                  }
                                                }
                                                href="/terms-of-use"
                                                icon={
                                                  <Info
                                                    color="white"
                                                  />
                                                }
                                                variant="body1"
                                              >
                                                <ForwardRef(Typography)
                                                  className="makeStyles-footer-link-76"
                                                  classes={
                                                    Object {
                                                      "alignCenter": "MuiTypography-alignCenter",
                                                      "alignJustify": "MuiTypography-alignJustify",
                                                      "alignLeft": "MuiTypography-alignLeft",
                                                      "alignRight": "MuiTypography-alignRight",
                                                      "body1": "MuiTypography-body1",
                                                      "body2": "MuiTypography-body2",
                                                      "button": "MuiTypography-button",
                                                      "caption": "MuiTypography-caption",
                                                      "colorError": "MuiTypography-colorError",
                                                      "colorInherit": "MuiTypography-colorInherit",
                                                      "colorPrimary": "MuiTypography-colorPrimary",
                                                      "colorSecondary": "MuiTypography-colorSecondary",
                                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                      "displayBlock": "MuiTypography-displayBlock",
                                                      "displayInline": "MuiTypography-displayInline",
                                                      "gutterBottom": "MuiTypography-gutterBottom",
                                                      "h1": "MuiTypography-h1",
                                                      "h2": "MuiTypography-h2",
                                                      "h3": "MuiTypography-h3",
                                                      "h4": "MuiTypography-h4",
                                                      "h5": "MuiTypography-h5",
                                                      "h6": "MuiTypography-h6",
                                                      "noWrap": "MuiTypography-noWrap",
                                                      "overline": "MuiTypography-overline",
                                                      "paragraph": "MuiTypography-paragraph",
                                                      "root": "MuiTypography-root",
                                                      "srOnly": "MuiTypography-srOnly",
                                                      "subtitle1": "MuiTypography-subtitle1",
                                                      "subtitle2": "MuiTypography-subtitle2",
                                                    }
                                                  }
                                                  component={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "render": [Function],
                                                    }
                                                  }
                                                  href="/terms-of-use"
                                                  icon={
                                                    <Info
                                                      color="white"
                                                    />
                                                  }
                                                  variant="body1"
                                                >
                                                  <ForwardRef
                                                    className="MuiTypography-root makeStyles-footer-link-76 MuiTypography-body1"
                                                    href="/terms-of-use"
                                                    icon={
                                                      <Info
                                                        color="white"
                                                      />
                                                    }
                                                  >
                                                    <BaseLink
                                                      className="MuiTypography-root makeStyles-footer-link-76 MuiTypography-body1"
                                                      href="/terms-of-use"
                                                      icon={
                                                        <Info
                                                          color="white"
                                                        />
                                                      }
                                                      innerRef={null}
                                                    >
                                                      <WithStyles(ForwardRef(Link))
                                                        className="MuiTypography-root makeStyles-footer-link-76 MuiTypography-body1"
                                                        component={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "propTypes": Object {},
                                                            "render": [Function],
                                                          }
                                                        }
                                                        href="/terms-of-use"
                                                        icon={
                                                          <Info
                                                            color="white"
                                                          />
                                                        }
                                                      >
                                                        <ForwardRef(Link)
                                                          className="MuiTypography-root makeStyles-footer-link-76 MuiTypography-body1"
                                                          classes={
                                                            Object {
                                                              "button": "MuiLink-button",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "root": "MuiLink-root",
                                                              "underlineAlways": "MuiLink-underlineAlways",
                                                              "underlineHover": "MuiLink-underlineHover",
                                                              "underlineNone": "MuiLink-underlineNone",
                                                            }
                                                          }
                                                          component={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "propTypes": Object {},
                                                              "render": [Function],
                                                            }
                                                          }
                                                          href="/terms-of-use"
                                                          icon={
                                                            <Info
                                                              color="white"
                                                            />
                                                          }
                                                        >
                                                          <WithStyles(ForwardRef(Typography))
                                                            className="MuiLink-root MuiLink-underlineHover MuiTypography-root makeStyles-footer-link-76 MuiTypography-body1"
                                                            color="primary"
                                                            component={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "propTypes": Object {},
                                                                "render": [Function],
                                                              }
                                                            }
                                                            href="/terms-of-use"
                                                            icon={
                                                              <Info
                                                                color="white"
                                                              />
                                                            }
                                                            onBlur={[Function]}
                                                            onFocus={[Function]}
                                                            variant="inherit"
                                                          >
                                                            <ForwardRef(Typography)
                                                              className="MuiLink-root MuiLink-underlineHover MuiTypography-root makeStyles-footer-link-76 MuiTypography-body1"
                                                              classes={
                                                                Object {
                                                                  "alignCenter": "MuiTypography-alignCenter",
                                                                  "alignJustify": "MuiTypography-alignJustify",
                                                                  "alignLeft": "MuiTypography-alignLeft",
                                                                  "alignRight": "MuiTypography-alignRight",
                                                                  "body1": "MuiTypography-body1",
                                                                  "body2": "MuiTypography-body2",
                                                                  "button": "MuiTypography-button",
                                                                  "caption": "MuiTypography-caption",
                                                                  "colorError": "MuiTypography-colorError",
                                                                  "colorInherit": "MuiTypography-colorInherit",
                                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                  "displayBlock": "MuiTypography-displayBlock",
                                                                  "displayInline": "MuiTypography-displayInline",
                                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                                  "h1": "MuiTypography-h1",
                                                                  "h2": "MuiTypography-h2",
                                                                  "h3": "MuiTypography-h3",
                                                                  "h4": "MuiTypography-h4",
                                                                  "h5": "MuiTypography-h5",
                                                                  "h6": "MuiTypography-h6",
                                                                  "noWrap": "MuiTypography-noWrap",
                                                                  "overline": "MuiTypography-overline",
                                                                  "paragraph": "MuiTypography-paragraph",
                                                                  "root": "MuiTypography-root",
                                                                  "srOnly": "MuiTypography-srOnly",
                                                                  "subtitle1": "MuiTypography-subtitle1",
                                                                  "subtitle2": "MuiTypography-subtitle2",
                                                                }
                                                              }
                                                              color="primary"
                                                              component={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "propTypes": Object {},
                                                                  "render": [Function],
                                                                }
                                                              }
                                                              href="/terms-of-use"
                                                              icon={
                                                                <Info
                                                                  color="white"
                                                                />
                                                              }
                                                              onBlur={[Function]}
                                                              onFocus={[Function]}
                                                              variant="inherit"
                                                            >
                                                              <ForwardRef(NextComposed)
                                                                className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-root makeStyles-footer-link-76 MuiTypography-body1 MuiTypography-colorPrimary"
                                                                href="/terms-of-use"
                                                                icon={
                                                                  <Info
                                                                    color="white"
                                                                  />
                                                                }
                                                                onBlur={[Function]}
                                                                onFocus={[Function]}
                                                              >
                                                                <Link
                                                                  href="/terms-of-use"
                                                                >
                                                                  <a
                                                                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-root makeStyles-footer-link-76 MuiTypography-body1 MuiTypography-colorPrimary"
                                                                    href="/terms-of-use"
                                                                    icon={
                                                                      <Info
                                                                        color="white"
                                                                      />
                                                                    }
                                                                    onBlur={[Function]}
                                                                    onClick={[Function]}
                                                                    onFocus={[Function]}
                                                                    onMouseEnter={[Function]}
                                                                  >
                                                                    Terms of use
                                                                  </a>
                                                                </Link>
                                                              </ForwardRef(NextComposed)>
                                                            </ForwardRef(Typography)>
                                                          </WithStyles(ForwardRef(Typography))>
                                                        </ForwardRef(Link)>
                                                      </WithStyles(ForwardRef(Link))>
                                                    </BaseLink>
                                                  </ForwardRef>
                                                </ForwardRef(Typography)>
                                              </WithStyles(ForwardRef(Typography))>
                                            </Link>
                                          </div>
                                        </div>
                                      </FooterLinkGroup>
                                    </div>
                                    <div
                                      className="makeStyles-linkGroupItemContainer-357"
                                    >
                                      <FooterLinkGroup
                                        groupHeader="Social"
                                        links={
                                          Array [
                                            Object {
                                              "displayText": "GitHub",
                                              "external": true,
                                              "href": "https://github.com/z-nith/",
                                              "icon": <GitHub
                                                color="white"
                                              />,
                                            },
                                          ]
                                        }
                                      >
                                        <div
                                          className="makeStyles-root-368"
                                        >
                                          <Typography
                                            variant="subtitle1"
                                          >
                                            <WithStyles(ForwardRef(Typography))
                                              classes={
                                                Object {
                                                  "colorTextPrimary": "makeStyles-colorTextPrimary-146",
                                                  "colorTextSecondary": "makeStyles-colorTextSecondary-147",
                                                }
                                              }
                                              variant="subtitle1"
                                            >
                                              <ForwardRef(Typography)
                                                classes={
                                                  Object {
                                                    "alignCenter": "MuiTypography-alignCenter",
                                                    "alignJustify": "MuiTypography-alignJustify",
                                                    "alignLeft": "MuiTypography-alignLeft",
                                                    "alignRight": "MuiTypography-alignRight",
                                                    "body1": "MuiTypography-body1",
                                                    "body2": "MuiTypography-body2",
                                                    "button": "MuiTypography-button",
                                                    "caption": "MuiTypography-caption",
                                                    "colorError": "MuiTypography-colorError",
                                                    "colorInherit": "MuiTypography-colorInherit",
                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary makeStyles-colorTextPrimary-146",
                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary makeStyles-colorTextSecondary-147",
                                                    "displayBlock": "MuiTypography-displayBlock",
                                                    "displayInline": "MuiTypography-displayInline",
                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                    "h1": "MuiTypography-h1",
                                                    "h2": "MuiTypography-h2",
                                                    "h3": "MuiTypography-h3",
                                                    "h4": "MuiTypography-h4",
                                                    "h5": "MuiTypography-h5",
                                                    "h6": "MuiTypography-h6",
                                                    "noWrap": "MuiTypography-noWrap",
                                                    "overline": "MuiTypography-overline",
                                                    "paragraph": "MuiTypography-paragraph",
                                                    "root": "MuiTypography-root",
                                                    "srOnly": "MuiTypography-srOnly",
                                                    "subtitle1": "MuiTypography-subtitle1",
                                                    "subtitle2": "MuiTypography-subtitle2",
                                                  }
                                                }
                                                variant="subtitle1"
                                              >
                                                <h6
                                                  className="MuiTypography-root MuiTypography-subtitle1"
                                                >
                                                  Social
                                                </h6>
                                              </ForwardRef(Typography)>
                                            </WithStyles(ForwardRef(Typography))>
                                          </Typography>
                                          <div
                                            className="makeStyles-linkContainer-369"
                                            key="footer-link-GitHub"
                                          >
                                            <Link
                                              external={true}
                                              href="https://github.com/z-nith/"
                                              icon={
                                                <GitHub
                                                  color="white"
                                                />
                                              }
                                              key="footer-link-GitHub"
                                              variant="footer"
                                            >
                                              <WithStyles(ForwardRef(Typography))
                                                className="makeStyles-footer-link-76"
                                                component="a"
                                                href="https://github.com/z-nith/"
                                                icon={
                                                  <GitHub
                                                    color="white"
                                                  />
                                                }
                                                variant="body1"
                                              >
                                                <ForwardRef(Typography)
                                                  className="makeStyles-footer-link-76"
                                                  classes={
                                                    Object {
                                                      "alignCenter": "MuiTypography-alignCenter",
                                                      "alignJustify": "MuiTypography-alignJustify",
                                                      "alignLeft": "MuiTypography-alignLeft",
                                                      "alignRight": "MuiTypography-alignRight",
                                                      "body1": "MuiTypography-body1",
                                                      "body2": "MuiTypography-body2",
                                                      "button": "MuiTypography-button",
                                                      "caption": "MuiTypography-caption",
                                                      "colorError": "MuiTypography-colorError",
                                                      "colorInherit": "MuiTypography-colorInherit",
                                                      "colorPrimary": "MuiTypography-colorPrimary",
                                                      "colorSecondary": "MuiTypography-colorSecondary",
                                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                      "displayBlock": "MuiTypography-displayBlock",
                                                      "displayInline": "MuiTypography-displayInline",
                                                      "gutterBottom": "MuiTypography-gutterBottom",
                                                      "h1": "MuiTypography-h1",
                                                      "h2": "MuiTypography-h2",
                                                      "h3": "MuiTypography-h3",
                                                      "h4": "MuiTypography-h4",
                                                      "h5": "MuiTypography-h5",
                                                      "h6": "MuiTypography-h6",
                                                      "noWrap": "MuiTypography-noWrap",
                                                      "overline": "MuiTypography-overline",
                                                      "paragraph": "MuiTypography-paragraph",
                                                      "root": "MuiTypography-root",
                                                      "srOnly": "MuiTypography-srOnly",
                                                      "subtitle1": "MuiTypography-subtitle1",
                                                      "subtitle2": "MuiTypography-subtitle2",
                                                    }
                                                  }
                                                  component="a"
                                                  href="https://github.com/z-nith/"
                                                  icon={
                                                    <GitHub
                                                      color="white"
                                                    />
                                                  }
                                                  variant="body1"
                                                >
                                                  <a
                                                    className="MuiTypography-root makeStyles-footer-link-76 MuiTypography-body1"
                                                    href="https://github.com/z-nith/"
                                                    icon={
                                                      <GitHub
                                                        color="white"
                                                      />
                                                    }
                                                  >
                                                    GitHub
                                                  </a>
                                                </ForwardRef(Typography)>
                                              </WithStyles(ForwardRef(Typography))>
                                            </Link>
                                          </div>
                                        </div>
                                      </FooterLinkGroup>
                                    </div>
                                  </div>
                                </ForwardRef(Grid)>
                              </WithStyles(ForwardRef(Grid))>
                            </GridItem>
                          </div>
                        </ForwardRef(Grid)>
                      </WithStyles(ForwardRef(Grid))>
                    </GridContainer>
                  </div>
                </ContentMarginContainer>
                <div
                  className="makeStyles-copyrightContainer-360"
                >
                  <CopyrightNotice>
                    <WithStyles(ForwardRef(Typography))
                      className="makeStyles-copyrightText-370"
                    >
                      <ForwardRef(Typography)
                        className="makeStyles-copyrightText-370"
                        classes={
                          Object {
                            "alignCenter": "MuiTypography-alignCenter",
                            "alignJustify": "MuiTypography-alignJustify",
                            "alignLeft": "MuiTypography-alignLeft",
                            "alignRight": "MuiTypography-alignRight",
                            "body1": "MuiTypography-body1",
                            "body2": "MuiTypography-body2",
                            "button": "MuiTypography-button",
                            "caption": "MuiTypography-caption",
                            "colorError": "MuiTypography-colorError",
                            "colorInherit": "MuiTypography-colorInherit",
                            "colorPrimary": "MuiTypography-colorPrimary",
                            "colorSecondary": "MuiTypography-colorSecondary",
                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                            "displayBlock": "MuiTypography-displayBlock",
                            "displayInline": "MuiTypography-displayInline",
                            "gutterBottom": "MuiTypography-gutterBottom",
                            "h1": "MuiTypography-h1",
                            "h2": "MuiTypography-h2",
                            "h3": "MuiTypography-h3",
                            "h4": "MuiTypography-h4",
                            "h5": "MuiTypography-h5",
                            "h6": "MuiTypography-h6",
                            "noWrap": "MuiTypography-noWrap",
                            "overline": "MuiTypography-overline",
                            "paragraph": "MuiTypography-paragraph",
                            "root": "MuiTypography-root",
                            "srOnly": "MuiTypography-srOnly",
                            "subtitle1": "MuiTypography-subtitle1",
                            "subtitle2": "MuiTypography-subtitle2",
                          }
                        }
                      >
                        <p
                          className="MuiTypography-root makeStyles-copyrightText-370 MuiTypography-body1"
                        >
                          © CinderBlox 2020. All rights reserved.
                        </p>
                      </ForwardRef(Typography)>
                    </WithStyles(ForwardRef(Typography))>
                  </CopyrightNotice>
                </div>
              </footer>
            </Footer>
          </div>
        </Home>
      </Index>
    </ParallaxProvider>
  </ThemeProvider>
</HomeWithTheme>
`;
