// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Home should render without error 1`] = `
<HomeWithTheme>
  <ThemeProvider
    theme={
      Object {
        "breakpoints": Object {
          "between": [Function],
          "down": [Function],
          "keys": Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ],
          "only": [Function],
          "up": [Function],
          "values": Object {
            "lg": 1280,
            "md": 960,
            "sm": 600,
            "xl": 1920,
            "xs": 0,
          },
          "width": [Function],
        },
        "direction": "ltr",
        "mixins": Object {
          "gutters": [Function],
          "toolbar": Object {
            "@media (min-width:0px) and (orientation: landscape)": Object {
              "minHeight": 48,
            },
            "@media (min-width:600px)": Object {
              "minHeight": 64,
            },
            "minHeight": 56,
          },
        },
        "overrides": Object {
          "MuiTypography": Object {
            "h1": Object {
              "fontFamily": "Montserrat",
              "fontWeight": 900,
            },
            "h2": Object {
              "fontFamily": "Montserrat",
              "fontWeight": 900,
            },
            "h3": Object {
              "fontFamily": "Montserrat",
              "fontWeight": 900,
            },
            "h4": Object {
              "fontFamily": "Montserrat",
              "fontWeight": 900,
            },
            "h5": Object {
              "fontFamily": "Montserrat",
              "fontWeight": 900,
            },
            "h6": Object {
              "fontFamily": "Montserrat",
              "fontWeight": 900,
            },
            "subtitle1": Object {
              "fontWeight": "bold",
            },
            "subtitle2": Object {
              "fontWeight": "bold",
            },
          },
        },
        "palette": Object {
          "action": Object {
            "activatedOpacity": 0.12,
            "active": "rgba(0, 0, 0, 0.54)",
            "disabled": "rgba(0, 0, 0, 0.26)",
            "disabledBackground": "rgba(0, 0, 0, 0.12)",
            "disabledOpacity": 0.38,
            "focus": "rgba(0, 0, 0, 0.12)",
            "focusOpacity": 0.12,
            "hover": "rgba(0, 0, 0, 0.04)",
            "hoverOpacity": 0.04,
            "selected": "rgba(0, 0, 0, 0.08)",
            "selectedOpacity": 0.08,
          },
          "augmentColor": [Function],
          "background": Object {
            "default": "#FFFFFF",
            "paper": "#FFFFFF",
          },
          "common": Object {
            "black": "#000000",
            "white": "#FFFFFF",
          },
          "contrastThreshold": 3,
          "custom": Object {
            "black40": "rgba(0, 0, 0, 0.40)",
            "black60": "rgba(0, 0, 0, 0.60)",
            "black75": "rgba(0, 0, 0, 0.75)",
            "charcoal": "#121516",
            "charcoalDark": "#0E1214",
            "charcoalLight": "#181C1E",
            "greyDark": "#DDE1E4",
            "greyDarker": "#CDD4D8",
            "greyDefault": "#EBEEEF",
            "greyLight": "#F9F9FA",
            "white60": "rgba(255, 255, 255, 0.60)",
            "white75": "rgba(255, 255, 255, 0.75)",
          },
          "divider": "rgba(0, 0, 0, 0.12)",
          "error": Object {
            "contrastText": "#fff",
            "dark": "#d32f2f",
            "light": "#e57373",
            "main": "#f44336",
          },
          "getContrastText": [Function],
          "grey": Object {
            "100": "#f5f5f5",
            "200": "#eeeeee",
            "300": "#e0e0e0",
            "400": "#bdbdbd",
            "50": "#fafafa",
            "500": "#9e9e9e",
            "600": "#757575",
            "700": "#616161",
            "800": "#424242",
            "900": "#212121",
            "A100": "#d5d5d5",
            "A200": "#aaaaaa",
            "A400": "#303030",
            "A700": "#616161",
          },
          "info": Object {
            "contrastText": "#fff",
            "dark": "#1976d2",
            "light": "#64b5f6",
            "main": "#2196f3",
          },
          "primary": Object {
            "contrastText": "#fff",
            "dark": "#A81432",
            "light": "#E62E51",
            "main": "#DB1A3F",
          },
          "secondary": Object {
            "contrastText": "#fff",
            "dark": "#365775",
            "light": "#4FBEFF",
            "main": "#2C92CD",
          },
          "success": Object {
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "#388e3c",
            "light": "#81c784",
            "main": "#4caf50",
          },
          "text": Object {
            "disabled": "rgba(4, 28, 41, 0.56)",
            "divider": "#DDE1E4",
            "hint": "rgba(4, 28, 41, 0.75)",
            "primary": "rgba(4, 28, 41, 1)",
            "secondary": "rgba(4, 28, 41, 0.75)",
          },
          "tonalOffset": 0.2,
          "type": "light",
          "warning": Object {
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "#f57c00",
            "light": "#ffb74d",
            "main": "#ff9800",
          },
        },
        "props": Object {},
        "shadows": Array [
          "none",
          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
        ],
        "shape": Object {
          "borderRadius": 4,
        },
        "spacing": [Function],
        "transitions": Object {
          "create": [Function],
          "duration": Object {
            "complex": 375,
            "enteringScreen": 225,
            "leavingScreen": 195,
            "short": 250,
            "shorter": 200,
            "shortest": 150,
            "standard": 300,
          },
          "easing": Object {
            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
          },
          "getAutoHeightDuration": [Function],
        },
        "typography": Object {
          "body1": Object {
            "fontFamily": "Lato",
            "fontSize": "1rem",
            "fontWeight": 400,
            "lineHeight": 1.5,
          },
          "body2": Object {
            "fontFamily": "Lato",
            "fontSize": "0.875rem",
            "fontWeight": 400,
            "lineHeight": 1.43,
          },
          "button": Object {
            "fontFamily": "Lato",
            "fontSize": "0.875rem",
            "fontWeight": 500,
            "lineHeight": 1.75,
            "textTransform": "uppercase",
          },
          "caption": Object {
            "fontFamily": "Lato",
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "lineHeight": 1.66,
          },
          "fontFamily": "Lato",
          "fontSize": 14,
          "fontWeightBold": 700,
          "fontWeightLight": 300,
          "fontWeightMedium": 500,
          "fontWeightRegular": 400,
          "h1": Object {
            "@media (min-width:1280px)": Object {
              "fontSize": "5.9983rem",
            },
            "@media (min-width:600px)": Object {
              "fontSize": "4.7129rem",
            },
            "@media (min-width:960px)": Object {
              "fontSize": "5.3556rem",
            },
            "fontFamily": "Lato",
            "fontSize": "3.5rem",
            "fontWeight": 300,
            "lineHeight": 1.167,
          },
          "h2": Object {
            "@media (min-width:1280px)": Object {
              "fontSize": "3.75rem",
            },
            "@media (min-width:600px)": Object {
              "fontSize": "2.9167rem",
            },
            "@media (min-width:960px)": Object {
              "fontSize": "3.3333rem",
            },
            "fontFamily": "Lato",
            "fontSize": "2.375rem",
            "fontWeight": 300,
            "lineHeight": 1.2,
          },
          "h3": Object {
            "@media (min-width:1280px)": Object {
              "fontSize": "2.9991rem",
            },
            "@media (min-width:600px)": Object {
              "fontSize": "2.5707rem",
            },
            "@media (min-width:960px)": Object {
              "fontSize": "2.7849rem",
            },
            "fontFamily": "Lato",
            "fontSize": "2rem",
            "fontWeight": 400,
            "lineHeight": 1.167,
          },
          "h4": Object {
            "@media (min-width:1280px)": Object {
              "fontSize": "2.0243rem",
            },
            "@media (min-width:600px)": Object {
              "fontSize": "1.8219rem",
            },
            "@media (min-width:960px)": Object {
              "fontSize": "2.0243rem",
            },
            "fontFamily": "Lato",
            "fontSize": "1.5625rem",
            "fontWeight": 400,
            "lineHeight": 1.235,
          },
          "h5": Object {
            "@media (min-width:1280px)": Object {
              "fontSize": "1.4993rem",
            },
            "@media (min-width:600px)": Object {
              "fontSize": "1.3118rem",
            },
            "@media (min-width:960px)": Object {
              "fontSize": "1.4993rem",
            },
            "fontFamily": "Lato",
            "fontSize": "1.25rem",
            "fontWeight": 400,
            "lineHeight": 1.334,
          },
          "h6": Object {
            "@media (min-width:1280px)": Object {
              "fontSize": "1.25rem",
            },
            "@media (min-width:600px)": Object {
              "fontSize": "1.25rem",
            },
            "@media (min-width:960px)": Object {
              "fontSize": "1.25rem",
            },
            "fontFamily": "Lato",
            "fontSize": "1.125rem",
            "fontWeight": 500,
            "lineHeight": 1.6,
          },
          "htmlFontSize": 16,
          "overline": Object {
            "fontFamily": "Lato",
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "lineHeight": 2.66,
            "textTransform": "uppercase",
          },
          "pxToRem": [Function],
          "round": [Function],
          "subtitle1": Object {
            "fontFamily": "Lato",
            "fontSize": "1rem",
            "fontWeight": 400,
            "lineHeight": 1.75,
          },
          "subtitle2": Object {
            "fontFamily": "Lato",
            "fontSize": "0.875rem",
            "fontWeight": 500,
            "lineHeight": 1.57,
          },
        },
        "zIndex": Object {
          "appBar": 1100,
          "drawer": 1200,
          "mobileStepper": 1000,
          "modal": 1300,
          "snackbar": 1400,
          "speedDial": 1050,
          "tooltip": 1500,
        },
        Symbol(mui.nested): false,
      }
    }
  >
    <Index>
      <Home>
        <Nav>
          <AppBar
            onMobileMenuClick={[Function]}
          >
            <ElevationScroll>
              <WithStyles(ForwardRef(AppBar))
                color="secondary"
                elevation={0}
              >
                <ForwardRef(AppBar)
                  classes={
                    Object {
                      "colorDefault": "MuiAppBar-colorDefault",
                      "colorInherit": "MuiAppBar-colorInherit",
                      "colorPrimary": "MuiAppBar-colorPrimary",
                      "colorSecondary": "MuiAppBar-colorSecondary",
                      "colorTransparent": "MuiAppBar-colorTransparent",
                      "positionAbsolute": "MuiAppBar-positionAbsolute",
                      "positionFixed": "MuiAppBar-positionFixed",
                      "positionRelative": "MuiAppBar-positionRelative",
                      "positionStatic": "MuiAppBar-positionStatic",
                      "positionSticky": "MuiAppBar-positionSticky",
                      "root": "MuiAppBar-root",
                    }
                  }
                  color="secondary"
                  elevation={0}
                >
                  <WithStyles(ForwardRef(Paper))
                    className="MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorSecondary mui-fixed"
                    component="header"
                    elevation={0}
                    square={true}
                  >
                    <ForwardRef(Paper)
                      className="MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorSecondary mui-fixed"
                      classes={
                        Object {
                          "elevation0": "MuiPaper-elevation0",
                          "elevation1": "MuiPaper-elevation1",
                          "elevation10": "MuiPaper-elevation10",
                          "elevation11": "MuiPaper-elevation11",
                          "elevation12": "MuiPaper-elevation12",
                          "elevation13": "MuiPaper-elevation13",
                          "elevation14": "MuiPaper-elevation14",
                          "elevation15": "MuiPaper-elevation15",
                          "elevation16": "MuiPaper-elevation16",
                          "elevation17": "MuiPaper-elevation17",
                          "elevation18": "MuiPaper-elevation18",
                          "elevation19": "MuiPaper-elevation19",
                          "elevation2": "MuiPaper-elevation2",
                          "elevation20": "MuiPaper-elevation20",
                          "elevation21": "MuiPaper-elevation21",
                          "elevation22": "MuiPaper-elevation22",
                          "elevation23": "MuiPaper-elevation23",
                          "elevation24": "MuiPaper-elevation24",
                          "elevation3": "MuiPaper-elevation3",
                          "elevation4": "MuiPaper-elevation4",
                          "elevation5": "MuiPaper-elevation5",
                          "elevation6": "MuiPaper-elevation6",
                          "elevation7": "MuiPaper-elevation7",
                          "elevation8": "MuiPaper-elevation8",
                          "elevation9": "MuiPaper-elevation9",
                          "outlined": "MuiPaper-outlined",
                          "root": "MuiPaper-root",
                          "rounded": "MuiPaper-rounded",
                        }
                      }
                      component="header"
                      elevation={0}
                      square={true}
                    >
                      <header
                        className="MuiPaper-root MuiAppBar-root MuiAppBar-positionFixed MuiAppBar-colorSecondary mui-fixed MuiPaper-elevation0"
                      >
                        <WithStyles(ForwardRef(Toolbar))
                          classes={
                            Object {
                              "root": "makeStyles-root-5",
                            }
                          }
                          disableGutters={true}
                        >
                          <ForwardRef(Toolbar)
                            classes={
                              Object {
                                "dense": "MuiToolbar-dense",
                                "gutters": "MuiToolbar-gutters",
                                "regular": "MuiToolbar-regular",
                                "root": "MuiToolbar-root makeStyles-root-5",
                              }
                            }
                            disableGutters={true}
                          >
                            <div
                              className="MuiToolbar-root makeStyles-root-5 MuiToolbar-regular"
                            >
                              <div
                                className="makeStyles-flexRowBase-6 makeStyles-toolbarLeft-8"
                              >
                                <Hidden
                                  mdUp={true}
                                >
                                  <WithWidth(HiddenJs)
                                    lgDown={false}
                                    lgUp={false}
                                    mdDown={false}
                                    mdUp={true}
                                    smDown={false}
                                    smUp={false}
                                    xlDown={false}
                                    xlUp={false}
                                    xsDown={false}
                                    xsUp={false}
                                  />
                                </Hidden>
                                <Hidden
                                  smDown={true}
                                >
                                  <WithWidth(HiddenJs)
                                    lgDown={false}
                                    lgUp={false}
                                    mdDown={false}
                                    mdUp={false}
                                    smDown={true}
                                    smUp={false}
                                    xlDown={false}
                                    xlUp={false}
                                    xsDown={false}
                                    xsUp={false}
                                  />
                                </Hidden>
                              </div>
                              <div
                                className="makeStyles-flexRowBase-6 makeStyles-toolbarCenter-9"
                              >
                                <Hidden
                                  mdUp={true}
                                >
                                  <WithWidth(HiddenJs)
                                    lgDown={false}
                                    lgUp={false}
                                    mdDown={false}
                                    mdUp={true}
                                    smDown={false}
                                    smUp={false}
                                    xlDown={false}
                                    xlUp={false}
                                    xsDown={false}
                                    xsUp={false}
                                  />
                                </Hidden>
                                <Hidden
                                  smDown={true}
                                >
                                  <WithWidth(HiddenJs)
                                    lgDown={false}
                                    lgUp={false}
                                    mdDown={false}
                                    mdUp={false}
                                    smDown={true}
                                    smUp={false}
                                    xlDown={false}
                                    xlUp={false}
                                    xsDown={false}
                                    xsUp={false}
                                  />
                                </Hidden>
                              </div>
                              <div
                                className="makeStyles-flexRowBase-6 makeStyles-toolbarRight-10"
                              >
                                <div
                                  className="makeStyles-flexRowBase-6 makeStyles-rowSpaceBetween-7"
                                >
                                  <div
                                    className="makeStyles-socialLinkContainer-13"
                                  >
                                    <SocialMediaLink
                                      color="dark"
                                      href="https://github.com/z-nith/cinderblox-studio"
                                      iconSize="small"
                                      variant="github"
                                    >
                                      <WithStyles(ForwardRef(IconButton))
                                        classes={
                                          Object {
                                            "root": "makeStyles-root-57",
                                          }
                                        }
                                        component="a"
                                        href="https://github.com/z-nith/cinderblox-studio"
                                        target="_blank"
                                      >
                                        <ForwardRef(IconButton)
                                          classes={
                                            Object {
                                              "colorInherit": "MuiIconButton-colorInherit",
                                              "colorPrimary": "MuiIconButton-colorPrimary",
                                              "colorSecondary": "MuiIconButton-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "edgeEnd": "MuiIconButton-edgeEnd",
                                              "edgeStart": "MuiIconButton-edgeStart",
                                              "label": "MuiIconButton-label",
                                              "root": "MuiIconButton-root makeStyles-root-57",
                                              "sizeSmall": "MuiIconButton-sizeSmall",
                                            }
                                          }
                                          component="a"
                                          href="https://github.com/z-nith/cinderblox-studio"
                                          target="_blank"
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            centerRipple={true}
                                            className="MuiIconButton-root makeStyles-root-57"
                                            component="a"
                                            disabled={false}
                                            focusRipple={true}
                                            href="https://github.com/z-nith/cinderblox-studio"
                                            target="_blank"
                                          >
                                            <ForwardRef(ButtonBase)
                                              centerRipple={true}
                                              className="MuiIconButton-root makeStyles-root-57"
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "root": "MuiButtonBase-root",
                                                }
                                              }
                                              component="a"
                                              disabled={false}
                                              focusRipple={true}
                                              href="https://github.com/z-nith/cinderblox-studio"
                                              target="_blank"
                                            >
                                              <a
                                                aria-disabled={false}
                                                className="MuiButtonBase-root MuiIconButton-root makeStyles-root-57"
                                                href="https://github.com/z-nith/cinderblox-studio"
                                                onBlur={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                tabIndex={0}
                                                target="_blank"
                                              >
                                                <span
                                                  className="MuiIconButton-label"
                                                >
                                                  <GitHub
                                                    color="#FFFFFF"
                                                    size={16}
                                                  >
                                                    <svg
                                                      fill="none"
                                                      height={16}
                                                      stroke="#FFFFFF"
                                                      strokeLinecap="round"
                                                      strokeLinejoin="round"
                                                      strokeWidth="2"
                                                      viewBox="0 0 24 24"
                                                      width={16}
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <path
                                                        d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"
                                                      />
                                                    </svg>
                                                  </GitHub>
                                                </span>
                                                <WithStyles(memo)
                                                  center={true}
                                                >
                                                  <ForwardRef(TouchRipple)
                                                    center={true}
                                                    classes={
                                                      Object {
                                                        "child": "MuiTouchRipple-child",
                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                        "ripple": "MuiTouchRipple-ripple",
                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                        "root": "MuiTouchRipple-root",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root"
                                                    >
                                                      <TransitionGroup
                                                        childFactory={[Function]}
                                                        component={null}
                                                        exit={true}
                                                      />
                                                    </span>
                                                  </ForwardRef(TouchRipple)>
                                                </WithStyles(memo)>
                                              </a>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(IconButton)>
                                      </WithStyles(ForwardRef(IconButton))>
                                    </SocialMediaLink>
                                  </div>
                                  <div
                                    className="makeStyles-socialLinkContainer-13"
                                  >
                                    <Link
                                      external={true}
                                      href="https://github.com/Jmeza081"
                                      variant="wrapper"
                                    >
                                      <a
                                        className="makeStyles-wrapping-link-78"
                                        href="https://github.com/Jmeza081"
                                      >
                                        <Avatar
                                          alt="Developer: Jesse Meza"
                                          imgSize="large"
                                          src="/img/author_avatar.jpg"
                                          toolTipText="See more works by Jesse"
                                        >
                                          <Tooltip
                                            arrow={true}
                                            title="See more works by Jesse"
                                          >
                                            <WithStyles(ForwardRef(Tooltip))
                                              arrow={true}
                                              classes={
                                                Object {
                                                  "arrow": "makeStyles-arrow-84",
                                                  "tooltip": "makeStyles-tooltip-83",
                                                }
                                              }
                                              title="See more works by Jesse"
                                            >
                                              <ForwardRef(Tooltip)
                                                arrow={true}
                                                classes={
                                                  Object {
                                                    "arrow": "MuiTooltip-arrow makeStyles-arrow-84",
                                                    "popper": "MuiTooltip-popper",
                                                    "popperArrow": "MuiTooltip-popperArrow",
                                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                                    "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-83",
                                                    "tooltipArrow": "MuiTooltip-tooltipArrow",
                                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                                    "touch": "MuiTooltip-touch",
                                                  }
                                                }
                                                title="See more works by Jesse"
                                              >
                                                <div
                                                  aria-describedby={null}
                                                  className=""
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseOver={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchStart={[Function]}
                                                  title="See more works by Jesse"
                                                >
                                                  <WithStyles(ForwardRef(Avatar))
                                                    alt="Developer: Jesse Meza"
                                                    className="makeStyles-large-82"
                                                    src="/img/author_avatar.jpg"
                                                  >
                                                    <ForwardRef(Avatar)
                                                      alt="Developer: Jesse Meza"
                                                      className="makeStyles-large-82"
                                                      classes={
                                                        Object {
                                                          "circle": "MuiAvatar-circle",
                                                          "colorDefault": "MuiAvatar-colorDefault",
                                                          "fallback": "MuiAvatar-fallback",
                                                          "img": "MuiAvatar-img",
                                                          "root": "MuiAvatar-root",
                                                          "rounded": "MuiAvatar-rounded",
                                                          "square": "MuiAvatar-square",
                                                        }
                                                      }
                                                      src="/img/author_avatar.jpg"
                                                    >
                                                      <div
                                                        className="MuiAvatar-root MuiAvatar-circle makeStyles-large-82"
                                                      >
                                                        <img
                                                          alt="Developer: Jesse Meza"
                                                          className="MuiAvatar-img"
                                                          src="/img/author_avatar.jpg"
                                                        />
                                                      </div>
                                                    </ForwardRef(Avatar)>
                                                  </WithStyles(ForwardRef(Avatar))>
                                                </div>
                                                <ForwardRef(Popper)
                                                  anchorEl={
                                                    <div
                                                      class=""
                                                      title="See more works by Jesse"
                                                    >
                                                      <div
                                                        class="MuiAvatar-root MuiAvatar-circle makeStyles-large-82"
                                                      >
                                                        <img
                                                          alt="Developer: Jesse Meza"
                                                          class="MuiAvatar-img"
                                                          src="/img/author_avatar.jpg"
                                                        />
                                                      </div>
                                                    </div>
                                                  }
                                                  className="MuiTooltip-popper MuiTooltip-popperArrow"
                                                  id={null}
                                                  open={false}
                                                  placement="bottom"
                                                  popperOptions={
                                                    Object {
                                                      "modifiers": Object {
                                                        "arrow": Object {
                                                          "element": null,
                                                          "enabled": false,
                                                        },
                                                      },
                                                    }
                                                  }
                                                  transition={true}
                                                />
                                              </ForwardRef(Tooltip)>
                                            </WithStyles(ForwardRef(Tooltip))>
                                          </Tooltip>
                                        </Avatar>
                                      </a>
                                    </Link>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </ForwardRef(Toolbar)>
                        </WithStyles(ForwardRef(Toolbar))>
                      </header>
                    </ForwardRef(Paper)>
                  </WithStyles(ForwardRef(Paper))>
                </ForwardRef(AppBar)>
              </WithStyles(ForwardRef(AppBar))>
            </ElevationScroll>
          </AppBar>
          <div
            id="back-to-top-anchor"
          />
          <Index
            onClose={[Function]}
            onMenuCloseClick={[Function]}
            onOpen={[Function]}
            open={false}
          >
            <ThemeProvider
              theme={
                Object {
                  "breakpoints": Object {
                    "between": [Function],
                    "down": [Function],
                    "keys": Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ],
                    "only": [Function],
                    "up": [Function],
                    "values": Object {
                      "lg": 1280,
                      "md": 960,
                      "sm": 600,
                      "xl": 1920,
                      "xs": 0,
                    },
                    "width": [Function],
                  },
                  "direction": "ltr",
                  "mixins": Object {
                    "gutters": [Function],
                    "toolbar": Object {
                      "@media (min-width:0px) and (orientation: landscape)": Object {
                        "minHeight": 48,
                      },
                      "@media (min-width:600px)": Object {
                        "minHeight": 64,
                      },
                      "minHeight": 56,
                    },
                  },
                  "overrides": Object {
                    "MuiTypography": Object {
                      "h1": Object {
                        "fontFamily": "Montserrat",
                        "fontWeight": 900,
                      },
                      "h2": Object {
                        "fontFamily": "Montserrat",
                        "fontWeight": 900,
                      },
                      "h3": Object {
                        "fontFamily": "Montserrat",
                        "fontWeight": 900,
                      },
                      "h4": Object {
                        "fontFamily": "Montserrat",
                        "fontWeight": 900,
                      },
                      "h5": Object {
                        "fontFamily": "Montserrat",
                        "fontWeight": 900,
                      },
                      "h6": Object {
                        "fontFamily": "Montserrat",
                        "fontWeight": 900,
                      },
                      "subtitle1": Object {
                        "fontWeight": "bold",
                      },
                      "subtitle2": Object {
                        "fontWeight": "bold",
                      },
                    },
                  },
                  "palette": Object {
                    "action": Object {
                      "activatedOpacity": 0.24,
                      "active": "#fff",
                      "disabled": "rgba(255, 255, 255, 0.3)",
                      "disabledBackground": "rgba(255, 255, 255, 0.12)",
                      "disabledOpacity": 0.38,
                      "focus": "rgba(255, 255, 255, 0.12)",
                      "focusOpacity": 0.12,
                      "hover": "rgba(255, 255, 255, 0.08)",
                      "hoverOpacity": 0.08,
                      "selected": "rgba(255, 255, 255, 0.16)",
                      "selectedOpacity": 0.16,
                    },
                    "augmentColor": [Function],
                    "background": Object {
                      "default": "#0E1214",
                      "paper": "#181C1E",
                    },
                    "common": Object {
                      "black": "#000000",
                      "white": "#FFFFFF",
                    },
                    "contrastThreshold": 3,
                    "custom": Object {
                      "black40": "rgba(0, 0, 0, 0.40)",
                      "black60": "rgba(0, 0, 0, 0.60)",
                      "black75": "rgba(0, 0, 0, 0.75)",
                      "charcoal": "#121516",
                      "charcoalDark": "#0E1214",
                      "charcoalLight": "#181C1E",
                      "greyDark": "#DDE1E4",
                      "greyDarker": "#CDD4D8",
                      "greyDefault": "#EBEEEF",
                      "greyLight": "#F9F9FA",
                      "white60": "rgba(255, 255, 255, 0.60)",
                      "white75": "rgba(255, 255, 255, 0.75)",
                    },
                    "divider": "rgba(255, 255, 255, 0.12)",
                    "error": Object {
                      "contrastText": "#fff",
                      "dark": "#d32f2f",
                      "light": "#e57373",
                      "main": "#f44336",
                    },
                    "getContrastText": [Function],
                    "grey": Object {
                      "100": "#f5f5f5",
                      "200": "#eeeeee",
                      "300": "#e0e0e0",
                      "400": "#bdbdbd",
                      "50": "#fafafa",
                      "500": "#9e9e9e",
                      "600": "#757575",
                      "700": "#616161",
                      "800": "#424242",
                      "900": "#212121",
                      "A100": "#d5d5d5",
                      "A200": "#aaaaaa",
                      "A400": "#303030",
                      "A700": "#616161",
                    },
                    "info": Object {
                      "contrastText": "#fff",
                      "dark": "#1976d2",
                      "light": "#64b5f6",
                      "main": "#2196f3",
                    },
                    "primary": Object {
                      "contrastText": "#fff",
                      "dark": "#A81432",
                      "light": "#E62E51",
                      "main": "#DB1A3F",
                    },
                    "secondary": Object {
                      "contrastText": "#fff",
                      "dark": "#365775",
                      "light": "#4FBEFF",
                      "main": "#2C92CD",
                    },
                    "success": Object {
                      "contrastText": "rgba(0, 0, 0, 0.87)",
                      "dark": "#388e3c",
                      "light": "#81c784",
                      "main": "#4caf50",
                    },
                    "text": Object {
                      "disabled": "rgba(255, 255, 255, 0.55)",
                      "divider": "rgba(255, 255, 255, 0.02)",
                      "hint": "rgba(255, 255, 255, 0.55)",
                      "icon": "rgba(255, 255, 255, 0.5)",
                      "primary": "rgba(255, 255, 255, 0.95)",
                      "secondary": "rgba(255, 255, 255, 0.70)",
                    },
                    "tonalOffset": 0.2,
                    "type": "dark",
                    "warning": Object {
                      "contrastText": "rgba(0, 0, 0, 0.87)",
                      "dark": "#f57c00",
                      "light": "#ffb74d",
                      "main": "#ff9800",
                    },
                  },
                  "props": Object {},
                  "shadows": Array [
                    "none",
                    "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                    "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                    "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                  ],
                  "shape": Object {
                    "borderRadius": 4,
                  },
                  "spacing": [Function],
                  "transitions": Object {
                    "create": [Function],
                    "duration": Object {
                      "complex": 375,
                      "enteringScreen": 225,
                      "leavingScreen": 195,
                      "short": 250,
                      "shorter": 200,
                      "shortest": 150,
                      "standard": 300,
                    },
                    "easing": Object {
                      "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                      "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                      "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                      "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                    },
                    "getAutoHeightDuration": [Function],
                  },
                  "typography": Object {
                    "body1": Object {
                      "fontFamily": "Lato",
                      "fontSize": "1rem",
                      "fontWeight": 400,
                      "lineHeight": 1.5,
                    },
                    "body2": Object {
                      "fontFamily": "Lato",
                      "fontSize": "0.875rem",
                      "fontWeight": 400,
                      "lineHeight": 1.43,
                    },
                    "button": Object {
                      "fontFamily": "Lato",
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                      "lineHeight": 1.75,
                      "textTransform": "uppercase",
                    },
                    "caption": Object {
                      "fontFamily": "Lato",
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                      "lineHeight": 1.66,
                    },
                    "fontFamily": "Lato",
                    "fontSize": 14,
                    "fontWeightBold": 700,
                    "fontWeightLight": 300,
                    "fontWeightMedium": 500,
                    "fontWeightRegular": 400,
                    "h1": Object {
                      "@media (min-width:1280px)": Object {
                        "fontSize": "5.9983rem",
                      },
                      "@media (min-width:600px)": Object {
                        "fontSize": "4.7129rem",
                      },
                      "@media (min-width:960px)": Object {
                        "fontSize": "5.3556rem",
                      },
                      "fontFamily": "Lato",
                      "fontSize": "3.5rem",
                      "fontWeight": 300,
                      "lineHeight": 1.167,
                    },
                    "h2": Object {
                      "@media (min-width:1280px)": Object {
                        "fontSize": "3.75rem",
                      },
                      "@media (min-width:600px)": Object {
                        "fontSize": "2.9167rem",
                      },
                      "@media (min-width:960px)": Object {
                        "fontSize": "3.3333rem",
                      },
                      "fontFamily": "Lato",
                      "fontSize": "2.375rem",
                      "fontWeight": 300,
                      "lineHeight": 1.2,
                    },
                    "h3": Object {
                      "@media (min-width:1280px)": Object {
                        "fontSize": "2.9991rem",
                      },
                      "@media (min-width:600px)": Object {
                        "fontSize": "2.5707rem",
                      },
                      "@media (min-width:960px)": Object {
                        "fontSize": "2.7849rem",
                      },
                      "fontFamily": "Lato",
                      "fontSize": "2rem",
                      "fontWeight": 400,
                      "lineHeight": 1.167,
                    },
                    "h4": Object {
                      "@media (min-width:1280px)": Object {
                        "fontSize": "2.0243rem",
                      },
                      "@media (min-width:600px)": Object {
                        "fontSize": "1.8219rem",
                      },
                      "@media (min-width:960px)": Object {
                        "fontSize": "2.0243rem",
                      },
                      "fontFamily": "Lato",
                      "fontSize": "1.5625rem",
                      "fontWeight": 400,
                      "lineHeight": 1.235,
                    },
                    "h5": Object {
                      "@media (min-width:1280px)": Object {
                        "fontSize": "1.4993rem",
                      },
                      "@media (min-width:600px)": Object {
                        "fontSize": "1.3118rem",
                      },
                      "@media (min-width:960px)": Object {
                        "fontSize": "1.4993rem",
                      },
                      "fontFamily": "Lato",
                      "fontSize": "1.25rem",
                      "fontWeight": 400,
                      "lineHeight": 1.334,
                    },
                    "h6": Object {
                      "@media (min-width:1280px)": Object {
                        "fontSize": "1.25rem",
                      },
                      "@media (min-width:600px)": Object {
                        "fontSize": "1.25rem",
                      },
                      "@media (min-width:960px)": Object {
                        "fontSize": "1.25rem",
                      },
                      "fontFamily": "Lato",
                      "fontSize": "1.125rem",
                      "fontWeight": 500,
                      "lineHeight": 1.6,
                    },
                    "htmlFontSize": 16,
                    "overline": Object {
                      "fontFamily": "Lato",
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                      "lineHeight": 2.66,
                      "textTransform": "uppercase",
                    },
                    "pxToRem": [Function],
                    "round": [Function],
                    "subtitle1": Object {
                      "fontFamily": "Lato",
                      "fontSize": "1rem",
                      "fontWeight": 400,
                      "lineHeight": 1.75,
                    },
                    "subtitle2": Object {
                      "fontFamily": "Lato",
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                      "lineHeight": 1.57,
                    },
                  },
                  "zIndex": Object {
                    "appBar": 1100,
                    "drawer": 1200,
                    "mobileStepper": 1000,
                    "modal": 1300,
                    "snackbar": 1400,
                    "speedDial": 1050,
                    "tooltip": 1500,
                  },
                }
              }
            >
              <Drawer
                onClose={[Function]}
                onMenuCloseClick={[Function]}
                onOpen={[Function]}
                open={false}
              >
                <ForwardRef(SwipeableDrawer)
                  anchor="left"
                  classes={
                    Object {
                      "modal": "makeStyles-modalProps-103",
                      "paper": "makeStyles-paper-104",
                    }
                  }
                  onClose={[Function]}
                  onOpen={[Function]}
                  open={false}
                >
                  <WithStyles(ForwardRef(Drawer))
                    ModalProps={
                      Object {
                        "BackdropProps": Object {
                          "ref": [Function],
                        },
                      }
                    }
                    PaperProps={
                      Object {
                        "ref": Object {
                          "current": undefined,
                        },
                        "style": Object {
                          "pointerEvents": "none",
                        },
                      }
                    }
                    anchor="left"
                    classes={
                      Object {
                        "modal": "makeStyles-modalProps-103",
                        "paper": "makeStyles-paper-104",
                      }
                    }
                    onClose={[Function]}
                    open={false}
                    transitionDuration={
                      Object {
                        "enter": 225,
                        "exit": 195,
                      }
                    }
                    variant="temporary"
                  >
                    <ForwardRef(Drawer)
                      ModalProps={
                        Object {
                          "BackdropProps": Object {
                            "ref": [Function],
                          },
                        }
                      }
                      PaperProps={
                        Object {
                          "ref": Object {
                            "current": undefined,
                          },
                          "style": Object {
                            "pointerEvents": "none",
                          },
                        }
                      }
                      anchor="left"
                      classes={
                        Object {
                          "docked": "MuiDrawer-docked-112",
                          "modal": "MuiDrawer-modal-122 makeStyles-modalProps-103",
                          "paper": "MuiDrawer-paper-113 makeStyles-paper-104",
                          "paperAnchorBottom": "MuiDrawer-paperAnchorBottom-117",
                          "paperAnchorDockedBottom": "MuiDrawer-paperAnchorDockedBottom-121",
                          "paperAnchorDockedLeft": "MuiDrawer-paperAnchorDockedLeft-118",
                          "paperAnchorDockedRight": "MuiDrawer-paperAnchorDockedRight-120",
                          "paperAnchorDockedTop": "MuiDrawer-paperAnchorDockedTop-119",
                          "paperAnchorLeft": "MuiDrawer-paperAnchorLeft-114",
                          "paperAnchorRight": "MuiDrawer-paperAnchorRight-115",
                          "paperAnchorTop": "MuiDrawer-paperAnchorTop-116",
                          "root": "MuiDrawer-root-111",
                        }
                      }
                      onClose={[Function]}
                      open={false}
                      transitionDuration={
                        Object {
                          "enter": 225,
                          "exit": 195,
                        }
                      }
                      variant="temporary"
                    >
                      <ForwardRef(Modal)
                        BackdropComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "Naked": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "propTypes": Object {
                                "children": [Function],
                                "className": [Function],
                                "classes": [Function],
                                "invisible": [Function],
                                "open": [Function],
                                "transitionDuration": [Function],
                              },
                              "render": [Function],
                            },
                            "displayName": "WithStyles(ForwardRef(Backdrop))",
                            "options": Object {
                              "defaultTheme": Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "only": [Function],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                  "width": [Function],
                                },
                                "direction": "ltr",
                                "mixins": Object {
                                  "gutters": [Function],
                                  "toolbar": Object {
                                    "@media (min-width:0px) and (orientation: landscape)": Object {
                                      "minHeight": 48,
                                    },
                                    "@media (min-width:600px)": Object {
                                      "minHeight": 64,
                                    },
                                    "minHeight": 56,
                                  },
                                },
                                "overrides": Object {},
                                "palette": Object {
                                  "action": Object {
                                    "activatedOpacity": 0.12,
                                    "active": "rgba(0, 0, 0, 0.54)",
                                    "disabled": "rgba(0, 0, 0, 0.26)",
                                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                    "disabledOpacity": 0.38,
                                    "focus": "rgba(0, 0, 0, 0.12)",
                                    "focusOpacity": 0.12,
                                    "hover": "rgba(0, 0, 0, 0.04)",
                                    "hoverOpacity": 0.04,
                                    "selected": "rgba(0, 0, 0, 0.08)",
                                    "selectedOpacity": 0.08,
                                  },
                                  "augmentColor": [Function],
                                  "background": Object {
                                    "default": "#fafafa",
                                    "paper": "#fff",
                                  },
                                  "common": Object {
                                    "black": "#000",
                                    "white": "#fff",
                                  },
                                  "contrastThreshold": 3,
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "error": Object {
                                    "contrastText": "#fff",
                                    "dark": "#d32f2f",
                                    "light": "#e57373",
                                    "main": "#f44336",
                                  },
                                  "getContrastText": [Function],
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "info": Object {
                                    "contrastText": "#fff",
                                    "dark": "#1976d2",
                                    "light": "#64b5f6",
                                    "main": "#2196f3",
                                  },
                                  "primary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#303f9f",
                                    "light": "#7986cb",
                                    "main": "#3f51b5",
                                  },
                                  "secondary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#c51162",
                                    "light": "#ff4081",
                                    "main": "#f50057",
                                  },
                                  "success": Object {
                                    "contrastText": "rgba(0, 0, 0, 0.87)",
                                    "dark": "#388e3c",
                                    "light": "#81c784",
                                    "main": "#4caf50",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "hint": "rgba(0, 0, 0, 0.38)",
                                    "primary": "rgba(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                  "tonalOffset": 0.2,
                                  "type": "light",
                                  "warning": Object {
                                    "contrastText": "rgba(0, 0, 0, 0.87)",
                                    "dark": "#f57c00",
                                    "light": "#ffb74d",
                                    "main": "#ff9800",
                                  },
                                },
                                "props": Object {},
                                "shadows": Array [
                                  "none",
                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "shape": Object {
                                  "borderRadius": 4,
                                },
                                "spacing": [Function],
                                "transitions": Object {
                                  "create": [Function],
                                  "duration": Object {
                                    "complex": 375,
                                    "enteringScreen": 225,
                                    "leavingScreen": 195,
                                    "short": 250,
                                    "shorter": 200,
                                    "shortest": 150,
                                    "standard": 300,
                                  },
                                  "easing": Object {
                                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                  },
                                  "getAutoHeightDuration": [Function],
                                },
                                "typography": Object {
                                  "body1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.5,
                                  },
                                  "body2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.01071em",
                                    "lineHeight": 1.43,
                                  },
                                  "button": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.02857em",
                                    "lineHeight": 1.75,
                                    "textTransform": "uppercase",
                                  },
                                  "caption": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.03333em",
                                    "lineHeight": 1.66,
                                  },
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": 14,
                                  "fontWeightBold": 700,
                                  "fontWeightLight": 300,
                                  "fontWeightMedium": 500,
                                  "fontWeightRegular": 400,
                                  "h1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "6rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.01562em",
                                    "lineHeight": 1.167,
                                  },
                                  "h2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3.75rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.00833em",
                                    "lineHeight": 1.2,
                                  },
                                  "h3": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.167,
                                  },
                                  "h4": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "2.125rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00735em",
                                    "lineHeight": 1.235,
                                  },
                                  "h5": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.5rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.334,
                                  },
                                  "h6": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.25rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.0075em",
                                    "lineHeight": 1.6,
                                  },
                                  "htmlFontSize": 16,
                                  "overline": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.08333em",
                                    "lineHeight": 2.66,
                                    "textTransform": "uppercase",
                                  },
                                  "pxToRem": [Function],
                                  "round": [Function],
                                  "subtitle1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.75,
                                  },
                                  "subtitle2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.00714em",
                                    "lineHeight": 1.57,
                                  },
                                },
                                "zIndex": Object {
                                  "appBar": 1100,
                                  "drawer": 1200,
                                  "mobileStepper": 1000,
                                  "modal": 1300,
                                  "snackbar": 1400,
                                  "speedDial": 1050,
                                  "tooltip": 1500,
                                },
                              },
                              "name": "MuiBackdrop",
                            },
                            "propTypes": Object {
                              "classes": [Function],
                              "innerRef": [Function],
                            },
                            "render": [Function],
                            "useStyles": [Function],
                          }
                        }
                        BackdropProps={
                          Object {
                            "ref": [Function],
                            "transitionDuration": Object {
                              "enter": 225,
                              "exit": 195,
                            },
                          }
                        }
                        className="MuiDrawer-root-111 MuiDrawer-modal-122 makeStyles-modalProps-103"
                        onClose={[Function]}
                        open={false}
                      />
                    </ForwardRef(Drawer)>
                  </WithStyles(ForwardRef(Drawer))>
                  <NoSsr>
                    <WithStyles(ForwardRef(SwipeArea))
                      anchor="left"
                      width={20}
                    >
                      <ForwardRef(SwipeArea)
                        anchor="left"
                        classes={
                          Object {
                            "anchorBottom": "PrivateSwipeArea-anchorBottom-250",
                            "anchorLeft": "PrivateSwipeArea-anchorLeft-247",
                            "anchorRight": "PrivateSwipeArea-anchorRight-248",
                            "anchorTop": "PrivateSwipeArea-anchorTop-249",
                            "root": "PrivateSwipeArea-root-246",
                          }
                        }
                        width={20}
                      >
                        <div
                          className="PrivateSwipeArea-root-246 PrivateSwipeArea-anchorLeft-247"
                          style={
                            Object {
                              "width": 20,
                            }
                          }
                        />
                      </ForwardRef(SwipeArea)>
                    </WithStyles(ForwardRef(SwipeArea))>
                  </NoSsr>
                </ForwardRef(SwipeableDrawer)>
              </Drawer>
            </ThemeProvider>
          </Index>
        </Nav>
        <div
          className="makeStyles-root-1"
        >
          <div
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "width": "100%",
              }
            }
          >
            <div>
              <div
                style={
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "column",
                    "justifyContent": "center",
                    "width": "100%",
                  }
                }
              >
                <Typography
                  align="center"
                  className="makeStyles-headerText-3"
                  variant="h1"
                >
                  <WithStyles(ForwardRef(Typography))
                    align="center"
                    className="makeStyles-headerText-3"
                    classes={
                      Object {
                        "colorTextPrimary": "makeStyles-colorTextPrimary-123",
                        "colorTextSecondary": "makeStyles-colorTextSecondary-124",
                      }
                    }
                    variant="h1"
                  >
                    <ForwardRef(Typography)
                      align="center"
                      className="makeStyles-headerText-3"
                      classes={
                        Object {
                          "alignCenter": "MuiTypography-alignCenter",
                          "alignJustify": "MuiTypography-alignJustify",
                          "alignLeft": "MuiTypography-alignLeft",
                          "alignRight": "MuiTypography-alignRight",
                          "body1": "MuiTypography-body1",
                          "body2": "MuiTypography-body2",
                          "button": "MuiTypography-button",
                          "caption": "MuiTypography-caption",
                          "colorError": "MuiTypography-colorError",
                          "colorInherit": "MuiTypography-colorInherit",
                          "colorPrimary": "MuiTypography-colorPrimary",
                          "colorSecondary": "MuiTypography-colorSecondary",
                          "colorTextPrimary": "MuiTypography-colorTextPrimary makeStyles-colorTextPrimary-123",
                          "colorTextSecondary": "MuiTypography-colorTextSecondary makeStyles-colorTextSecondary-124",
                          "displayBlock": "MuiTypography-displayBlock",
                          "displayInline": "MuiTypography-displayInline",
                          "gutterBottom": "MuiTypography-gutterBottom",
                          "h1": "MuiTypography-h1",
                          "h2": "MuiTypography-h2",
                          "h3": "MuiTypography-h3",
                          "h4": "MuiTypography-h4",
                          "h5": "MuiTypography-h5",
                          "h6": "MuiTypography-h6",
                          "noWrap": "MuiTypography-noWrap",
                          "overline": "MuiTypography-overline",
                          "paragraph": "MuiTypography-paragraph",
                          "root": "MuiTypography-root",
                          "srOnly": "MuiTypography-srOnly",
                          "subtitle1": "MuiTypography-subtitle1",
                          "subtitle2": "MuiTypography-subtitle2",
                        }
                      }
                      variant="h1"
                    >
                      <h1
                        className="MuiTypography-root makeStyles-headerText-3 MuiTypography-h1 MuiTypography-alignCenter"
                      >
                        Inspiration in the cloud
                      </h1>
                    </ForwardRef(Typography)>
                  </WithStyles(ForwardRef(Typography))>
                </Typography>
                <Typography
                  align="center"
                  className="makeStyles-headerText-3"
                  variant="body1"
                >
                  <WithStyles(ForwardRef(Typography))
                    align="center"
                    className="makeStyles-headerText-3"
                    classes={
                      Object {
                        "colorTextPrimary": "makeStyles-colorTextPrimary-123",
                        "colorTextSecondary": "makeStyles-colorTextSecondary-124",
                      }
                    }
                    variant="body1"
                  >
                    <ForwardRef(Typography)
                      align="center"
                      className="makeStyles-headerText-3"
                      classes={
                        Object {
                          "alignCenter": "MuiTypography-alignCenter",
                          "alignJustify": "MuiTypography-alignJustify",
                          "alignLeft": "MuiTypography-alignLeft",
                          "alignRight": "MuiTypography-alignRight",
                          "body1": "MuiTypography-body1",
                          "body2": "MuiTypography-body2",
                          "button": "MuiTypography-button",
                          "caption": "MuiTypography-caption",
                          "colorError": "MuiTypography-colorError",
                          "colorInherit": "MuiTypography-colorInherit",
                          "colorPrimary": "MuiTypography-colorPrimary",
                          "colorSecondary": "MuiTypography-colorSecondary",
                          "colorTextPrimary": "MuiTypography-colorTextPrimary makeStyles-colorTextPrimary-123",
                          "colorTextSecondary": "MuiTypography-colorTextSecondary makeStyles-colorTextSecondary-124",
                          "displayBlock": "MuiTypography-displayBlock",
                          "displayInline": "MuiTypography-displayInline",
                          "gutterBottom": "MuiTypography-gutterBottom",
                          "h1": "MuiTypography-h1",
                          "h2": "MuiTypography-h2",
                          "h3": "MuiTypography-h3",
                          "h4": "MuiTypography-h4",
                          "h5": "MuiTypography-h5",
                          "h6": "MuiTypography-h6",
                          "noWrap": "MuiTypography-noWrap",
                          "overline": "MuiTypography-overline",
                          "paragraph": "MuiTypography-paragraph",
                          "root": "MuiTypography-root",
                          "srOnly": "MuiTypography-srOnly",
                          "subtitle1": "MuiTypography-subtitle1",
                          "subtitle2": "MuiTypography-subtitle2",
                        }
                      }
                      variant="body1"
                    >
                      <p
                        className="MuiTypography-root makeStyles-headerText-3 MuiTypography-body1 MuiTypography-alignCenter"
                      >
                        Build beautiful color palettes for your next project using images
                      </p>
                    </ForwardRef(Typography)>
                  </WithStyles(ForwardRef(Typography))>
                </Typography>
              </div>
              <div
                style={
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingTop": "32px",
                  }
                }
              >
                <Button
                  addGlow={false}
                  color="primary"
                  onClick={[Function]}
                  paddingRight={true}
                  variant="contained"
                >
                  <div
                    className="makeStyles-addRightPadding-159"
                  >
                    <WithStyles(ForwardRef(Button))
                      classes={
                        Object {
                          "containedPrimary": "makeStyles-containedPrimary-157",
                          "containedSecondary": "makeStyles-containedSecondary-158",
                          "label": "makeStyles-buttonLabel-156",
                          "root": "makeStyles-root-155",
                        }
                      }
                      color="primary"
                      disableRipple={true}
                      onClick={[Function]}
                      variant="contained"
                    >
                      <ForwardRef(Button)
                        classes={
                          Object {
                            "colorInherit": "MuiButton-colorInherit",
                            "contained": "MuiButton-contained",
                            "containedPrimary": "MuiButton-containedPrimary makeStyles-containedPrimary-157",
                            "containedSecondary": "MuiButton-containedSecondary makeStyles-containedSecondary-158",
                            "containedSizeLarge": "MuiButton-containedSizeLarge",
                            "containedSizeSmall": "MuiButton-containedSizeSmall",
                            "disableElevation": "MuiButton-disableElevation",
                            "disabled": "Mui-disabled",
                            "endIcon": "MuiButton-endIcon",
                            "focusVisible": "Mui-focusVisible",
                            "fullWidth": "MuiButton-fullWidth",
                            "iconSizeLarge": "MuiButton-iconSizeLarge",
                            "iconSizeMedium": "MuiButton-iconSizeMedium",
                            "iconSizeSmall": "MuiButton-iconSizeSmall",
                            "label": "MuiButton-label makeStyles-buttonLabel-156",
                            "outlined": "MuiButton-outlined",
                            "outlinedPrimary": "MuiButton-outlinedPrimary",
                            "outlinedSecondary": "MuiButton-outlinedSecondary",
                            "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                            "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                            "root": "MuiButton-root makeStyles-root-155",
                            "sizeLarge": "MuiButton-sizeLarge",
                            "sizeSmall": "MuiButton-sizeSmall",
                            "startIcon": "MuiButton-startIcon",
                            "text": "MuiButton-text",
                            "textPrimary": "MuiButton-textPrimary",
                            "textSecondary": "MuiButton-textSecondary",
                            "textSizeLarge": "MuiButton-textSizeLarge",
                            "textSizeSmall": "MuiButton-textSizeSmall",
                          }
                        }
                        color="primary"
                        disableRipple={true}
                        onClick={[Function]}
                        variant="contained"
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          className="MuiButton-root makeStyles-root-155 MuiButton-contained MuiButton-containedPrimary makeStyles-containedPrimary-157"
                          component="button"
                          disableRipple={true}
                          disabled={false}
                          focusRipple={true}
                          focusVisibleClassName="Mui-focusVisible"
                          onClick={[Function]}
                          type="button"
                        >
                          <ForwardRef(ButtonBase)
                            className="MuiButton-root makeStyles-root-155 MuiButton-contained MuiButton-containedPrimary makeStyles-containedPrimary-157"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            component="button"
                            disableRipple={true}
                            disabled={false}
                            focusRipple={true}
                            focusVisibleClassName="Mui-focusVisible"
                            onClick={[Function]}
                            type="button"
                          >
                            <button
                              className="MuiButtonBase-root MuiButton-root makeStyles-root-155 MuiButton-contained MuiButton-containedPrimary makeStyles-containedPrimary-157"
                              disabled={false}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              tabIndex={0}
                              type="button"
                            >
                              <span
                                className="MuiButton-label makeStyles-buttonLabel-156"
                              >
                                Get Started
                              </span>
                            </button>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(Button)>
                    </WithStyles(ForwardRef(Button))>
                  </div>
                </Button>
                <Button
                  addGlow={false}
                  color="secondary"
                  onClick={[Function]}
                  paddingRight={false}
                  startIcon={
                    <ExternalLink
                      color="black"
                      size={18}
                    />
                  }
                  variant="contained"
                >
                  <div
                    className=""
                  >
                    <WithStyles(ForwardRef(Button))
                      classes={
                        Object {
                          "containedPrimary": "makeStyles-containedPrimary-157",
                          "containedSecondary": "makeStyles-containedSecondary-158",
                          "label": "makeStyles-buttonLabel-156",
                          "root": "makeStyles-root-155",
                        }
                      }
                      color="secondary"
                      disableRipple={true}
                      onClick={[Function]}
                      startIcon={
                        <ExternalLink
                          color="black"
                          size={18}
                        />
                      }
                      variant="contained"
                    >
                      <ForwardRef(Button)
                        classes={
                          Object {
                            "colorInherit": "MuiButton-colorInherit",
                            "contained": "MuiButton-contained",
                            "containedPrimary": "MuiButton-containedPrimary makeStyles-containedPrimary-157",
                            "containedSecondary": "MuiButton-containedSecondary makeStyles-containedSecondary-158",
                            "containedSizeLarge": "MuiButton-containedSizeLarge",
                            "containedSizeSmall": "MuiButton-containedSizeSmall",
                            "disableElevation": "MuiButton-disableElevation",
                            "disabled": "Mui-disabled",
                            "endIcon": "MuiButton-endIcon",
                            "focusVisible": "Mui-focusVisible",
                            "fullWidth": "MuiButton-fullWidth",
                            "iconSizeLarge": "MuiButton-iconSizeLarge",
                            "iconSizeMedium": "MuiButton-iconSizeMedium",
                            "iconSizeSmall": "MuiButton-iconSizeSmall",
                            "label": "MuiButton-label makeStyles-buttonLabel-156",
                            "outlined": "MuiButton-outlined",
                            "outlinedPrimary": "MuiButton-outlinedPrimary",
                            "outlinedSecondary": "MuiButton-outlinedSecondary",
                            "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                            "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                            "root": "MuiButton-root makeStyles-root-155",
                            "sizeLarge": "MuiButton-sizeLarge",
                            "sizeSmall": "MuiButton-sizeSmall",
                            "startIcon": "MuiButton-startIcon",
                            "text": "MuiButton-text",
                            "textPrimary": "MuiButton-textPrimary",
                            "textSecondary": "MuiButton-textSecondary",
                            "textSizeLarge": "MuiButton-textSizeLarge",
                            "textSizeSmall": "MuiButton-textSizeSmall",
                          }
                        }
                        color="secondary"
                        disableRipple={true}
                        onClick={[Function]}
                        startIcon={
                          <ExternalLink
                            color="black"
                            size={18}
                          />
                        }
                        variant="contained"
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          className="MuiButton-root makeStyles-root-155 MuiButton-contained MuiButton-containedSecondary makeStyles-containedSecondary-158"
                          component="button"
                          disableRipple={true}
                          disabled={false}
                          focusRipple={true}
                          focusVisibleClassName="Mui-focusVisible"
                          onClick={[Function]}
                          type="button"
                        >
                          <ForwardRef(ButtonBase)
                            className="MuiButton-root makeStyles-root-155 MuiButton-contained MuiButton-containedSecondary makeStyles-containedSecondary-158"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            component="button"
                            disableRipple={true}
                            disabled={false}
                            focusRipple={true}
                            focusVisibleClassName="Mui-focusVisible"
                            onClick={[Function]}
                            type="button"
                          >
                            <button
                              className="MuiButtonBase-root MuiButton-root makeStyles-root-155 MuiButton-contained MuiButton-containedSecondary makeStyles-containedSecondary-158"
                              disabled={false}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              tabIndex={0}
                              type="button"
                            >
                              <span
                                className="MuiButton-label makeStyles-buttonLabel-156"
                              >
                                <span
                                  className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                >
                                  <ExternalLink
                                    color="black"
                                    size={18}
                                  >
                                    <svg
                                      fill="none"
                                      height={18}
                                      stroke="black"
                                      strokeLinecap="round"
                                      strokeLinejoin="round"
                                      strokeWidth="2"
                                      viewBox="0 0 24 24"
                                      width={18}
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"
                                      />
                                      <polyline
                                        points="15 3 21 3 21 9"
                                      />
                                      <line
                                        x1="10"
                                        x2="21"
                                        y1="14"
                                        y2="3"
                                      />
                                    </svg>
                                  </ExternalLink>
                                </span>
                                Learn more
                              </span>
                            </button>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(Button)>
                    </WithStyles(ForwardRef(Button))>
                  </div>
                </Button>
              </div>
              <Svgurl
                className="makeStyles-testSvg-2"
              />
            </div>
          </div>
        </div>
        <ContentMarginContainer
          className="makeStyles-addMarginBottom-4"
        >
          <div
            className="makeStyles-root-191 makeStyles-addMarginBottom-4"
          >
            <div
              style={
                Object {
                  "minHeight": "1400px",
                  "width": "100%",
                }
              }
            />
            <Typography
              color="textPrimary"
              variant="h4"
            >
              <WithStyles(ForwardRef(Typography))
                classes={
                  Object {
                    "colorTextPrimary": "makeStyles-colorTextPrimary-123",
                    "colorTextSecondary": "makeStyles-colorTextSecondary-124",
                  }
                }
                color="textPrimary"
                variant="h4"
              >
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "alignCenter": "MuiTypography-alignCenter",
                      "alignJustify": "MuiTypography-alignJustify",
                      "alignLeft": "MuiTypography-alignLeft",
                      "alignRight": "MuiTypography-alignRight",
                      "body1": "MuiTypography-body1",
                      "body2": "MuiTypography-body2",
                      "button": "MuiTypography-button",
                      "caption": "MuiTypography-caption",
                      "colorError": "MuiTypography-colorError",
                      "colorInherit": "MuiTypography-colorInherit",
                      "colorPrimary": "MuiTypography-colorPrimary",
                      "colorSecondary": "MuiTypography-colorSecondary",
                      "colorTextPrimary": "MuiTypography-colorTextPrimary makeStyles-colorTextPrimary-123",
                      "colorTextSecondary": "MuiTypography-colorTextSecondary makeStyles-colorTextSecondary-124",
                      "displayBlock": "MuiTypography-displayBlock",
                      "displayInline": "MuiTypography-displayInline",
                      "gutterBottom": "MuiTypography-gutterBottom",
                      "h1": "MuiTypography-h1",
                      "h2": "MuiTypography-h2",
                      "h3": "MuiTypography-h3",
                      "h4": "MuiTypography-h4",
                      "h5": "MuiTypography-h5",
                      "h6": "MuiTypography-h6",
                      "noWrap": "MuiTypography-noWrap",
                      "overline": "MuiTypography-overline",
                      "paragraph": "MuiTypography-paragraph",
                      "root": "MuiTypography-root",
                      "srOnly": "MuiTypography-srOnly",
                      "subtitle1": "MuiTypography-subtitle1",
                      "subtitle2": "MuiTypography-subtitle2",
                    }
                  }
                  color="textPrimary"
                  variant="h4"
                >
                  <h4
                    className="MuiTypography-root MuiTypography-h4 MuiTypography-colorTextPrimary makeStyles-colorTextPrimary-123"
                  >
                    This is some primary text
                  </h4>
                </ForwardRef(Typography)>
              </WithStyles(ForwardRef(Typography))>
            </Typography>
            <Typography
              color="textSecondary"
              variant="body1"
            >
              <WithStyles(ForwardRef(Typography))
                classes={
                  Object {
                    "colorTextPrimary": "makeStyles-colorTextPrimary-123",
                    "colorTextSecondary": "makeStyles-colorTextSecondary-124",
                  }
                }
                color="textSecondary"
                variant="body1"
              >
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "alignCenter": "MuiTypography-alignCenter",
                      "alignJustify": "MuiTypography-alignJustify",
                      "alignLeft": "MuiTypography-alignLeft",
                      "alignRight": "MuiTypography-alignRight",
                      "body1": "MuiTypography-body1",
                      "body2": "MuiTypography-body2",
                      "button": "MuiTypography-button",
                      "caption": "MuiTypography-caption",
                      "colorError": "MuiTypography-colorError",
                      "colorInherit": "MuiTypography-colorInherit",
                      "colorPrimary": "MuiTypography-colorPrimary",
                      "colorSecondary": "MuiTypography-colorSecondary",
                      "colorTextPrimary": "MuiTypography-colorTextPrimary makeStyles-colorTextPrimary-123",
                      "colorTextSecondary": "MuiTypography-colorTextSecondary makeStyles-colorTextSecondary-124",
                      "displayBlock": "MuiTypography-displayBlock",
                      "displayInline": "MuiTypography-displayInline",
                      "gutterBottom": "MuiTypography-gutterBottom",
                      "h1": "MuiTypography-h1",
                      "h2": "MuiTypography-h2",
                      "h3": "MuiTypography-h3",
                      "h4": "MuiTypography-h4",
                      "h5": "MuiTypography-h5",
                      "h6": "MuiTypography-h6",
                      "noWrap": "MuiTypography-noWrap",
                      "overline": "MuiTypography-overline",
                      "paragraph": "MuiTypography-paragraph",
                      "root": "MuiTypography-root",
                      "srOnly": "MuiTypography-srOnly",
                      "subtitle1": "MuiTypography-subtitle1",
                      "subtitle2": "MuiTypography-subtitle2",
                    }
                  }
                  color="textSecondary"
                  variant="body1"
                >
                  <p
                    className="MuiTypography-root MuiTypography-body1 MuiTypography-colorTextSecondary makeStyles-colorTextSecondary-124"
                  >
                    This is some secondary text
                  </p>
                </ForwardRef(Typography)>
              </WithStyles(ForwardRef(Typography))>
            </Typography>
            <div
              style={
                Object {
                  "maxWidth": "525px",
                }
              }
            >
              <WithStyles(ForwardRef(List))
                component="ol"
                subheader={
                  <Typography
                    variant="h4"
                  >
                    How it works
                  </Typography>
                }
              >
                <ForwardRef(List)
                  classes={
                    Object {
                      "dense": "MuiList-dense",
                      "padding": "MuiList-padding",
                      "root": "MuiList-root",
                      "subheader": "MuiList-subheader",
                    }
                  }
                  component="ol"
                  subheader={
                    <Typography
                      variant="h4"
                    >
                      How it works
                    </Typography>
                  }
                >
                  <ol
                    className="MuiList-root MuiList-padding MuiList-subheader"
                  >
                    <Typography
                      variant="h4"
                    >
                      <WithStyles(ForwardRef(Typography))
                        classes={
                          Object {
                            "colorTextPrimary": "makeStyles-colorTextPrimary-123",
                            "colorTextSecondary": "makeStyles-colorTextSecondary-124",
                          }
                        }
                        variant="h4"
                      >
                        <ForwardRef(Typography)
                          classes={
                            Object {
                              "alignCenter": "MuiTypography-alignCenter",
                              "alignJustify": "MuiTypography-alignJustify",
                              "alignLeft": "MuiTypography-alignLeft",
                              "alignRight": "MuiTypography-alignRight",
                              "body1": "MuiTypography-body1",
                              "body2": "MuiTypography-body2",
                              "button": "MuiTypography-button",
                              "caption": "MuiTypography-caption",
                              "colorError": "MuiTypography-colorError",
                              "colorInherit": "MuiTypography-colorInherit",
                              "colorPrimary": "MuiTypography-colorPrimary",
                              "colorSecondary": "MuiTypography-colorSecondary",
                              "colorTextPrimary": "MuiTypography-colorTextPrimary makeStyles-colorTextPrimary-123",
                              "colorTextSecondary": "MuiTypography-colorTextSecondary makeStyles-colorTextSecondary-124",
                              "displayBlock": "MuiTypography-displayBlock",
                              "displayInline": "MuiTypography-displayInline",
                              "gutterBottom": "MuiTypography-gutterBottom",
                              "h1": "MuiTypography-h1",
                              "h2": "MuiTypography-h2",
                              "h3": "MuiTypography-h3",
                              "h4": "MuiTypography-h4",
                              "h5": "MuiTypography-h5",
                              "h6": "MuiTypography-h6",
                              "noWrap": "MuiTypography-noWrap",
                              "overline": "MuiTypography-overline",
                              "paragraph": "MuiTypography-paragraph",
                              "root": "MuiTypography-root",
                              "srOnly": "MuiTypography-srOnly",
                              "subtitle1": "MuiTypography-subtitle1",
                              "subtitle2": "MuiTypography-subtitle2",
                            }
                          }
                          variant="h4"
                        >
                          <h4
                            className="MuiTypography-root MuiTypography-h4"
                          >
                            How it works
                          </h4>
                        </ForwardRef(Typography)>
                      </WithStyles(ForwardRef(Typography))>
                    </Typography>
                    <WithStyles(ForwardRef(ListItem))
                      alignItems="flex-start"
                      disableGutters={true}
                    >
                      <ForwardRef(ListItem)
                        alignItems="flex-start"
                        classes={
                          Object {
                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                            "button": "MuiListItem-button",
                            "container": "MuiListItem-container",
                            "dense": "MuiListItem-dense",
                            "disabled": "Mui-disabled",
                            "divider": "MuiListItem-divider",
                            "focusVisible": "Mui-focusVisible",
                            "gutters": "MuiListItem-gutters",
                            "root": "MuiListItem-root",
                            "secondaryAction": "MuiListItem-secondaryAction",
                            "selected": "Mui-selected",
                          }
                        }
                        disableGutters={true}
                      >
                        <li
                          className="MuiListItem-root MuiListItem-alignItemsFlexStart"
                          disabled={false}
                        >
                          <WithStyles(ForwardRef(ListItemAvatar))
                            key=".0"
                          >
                            <ForwardRef(ListItemAvatar)
                              classes={
                                Object {
                                  "alignItemsFlexStart": "MuiListItemAvatar-alignItemsFlexStart",
                                  "root": "MuiListItemAvatar-root",
                                }
                              }
                            >
                              <div
                                className="MuiListItemAvatar-root MuiListItemAvatar-alignItemsFlexStart"
                              >
                                <ListItemCounter
                                  count={1}
                                >
                                  <div
                                    className="makeStyles-root-209"
                                  >
                                    <div
                                      className="makeStyles-circleContainer-210"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        color="textPrimary"
                                        variant="h5"
                                      >
                                        <ForwardRef(Typography)
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="textPrimary"
                                          variant="h5"
                                        >
                                          <h5
                                            className="MuiTypography-root MuiTypography-h5 MuiTypography-colorTextPrimary"
                                          >
                                            1
                                          </h5>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </div>
                                  </div>
                                </ListItemCounter>
                              </div>
                            </ForwardRef(ListItemAvatar)>
                          </WithStyles(ForwardRef(ListItemAvatar))>
                          <WithStyles(ForwardRef(ListItemText))
                            key=".1"
                            primary="Culpa aliquid quos vel totam quia sequi voluptates fuga sunt. Amet ut possimus dolor maxime dolor sunt ipsum. Id error possimus veniam sed doloribus."
                            primaryTypographyProps={
                              Object {
                                "color": "textSecondary",
                              }
                            }
                          >
                            <ForwardRef(ListItemText)
                              classes={
                                Object {
                                  "dense": "MuiListItemText-dense",
                                  "inset": "MuiListItemText-inset",
                                  "multiline": "MuiListItemText-multiline",
                                  "primary": "MuiListItemText-primary",
                                  "root": "MuiListItemText-root",
                                  "secondary": "MuiListItemText-secondary",
                                }
                              }
                              primary="Culpa aliquid quos vel totam quia sequi voluptates fuga sunt. Amet ut possimus dolor maxime dolor sunt ipsum. Id error possimus veniam sed doloribus."
                              primaryTypographyProps={
                                Object {
                                  "color": "textSecondary",
                                }
                              }
                            >
                              <div
                                className="MuiListItemText-root"
                              >
                                <WithStyles(ForwardRef(Typography))
                                  className="MuiListItemText-primary"
                                  color="textSecondary"
                                  component="span"
                                  display="block"
                                  variant="body1"
                                >
                                  <ForwardRef(Typography)
                                    className="MuiListItemText-primary"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                    color="textSecondary"
                                    component="span"
                                    display="block"
                                    variant="body1"
                                  >
                                    <span
                                      className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-colorTextSecondary MuiTypography-displayBlock"
                                    >
                                      Culpa aliquid quos vel totam quia sequi voluptates fuga sunt. Amet ut possimus dolor maxime dolor sunt ipsum. Id error possimus veniam sed doloribus.
                                    </span>
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                              </div>
                            </ForwardRef(ListItemText)>
                          </WithStyles(ForwardRef(ListItemText))>
                        </li>
                      </ForwardRef(ListItem)>
                    </WithStyles(ForwardRef(ListItem))>
                    <WithStyles(ForwardRef(ListItem))
                      alignItems="flex-start"
                      disableGutters={true}
                    >
                      <ForwardRef(ListItem)
                        alignItems="flex-start"
                        classes={
                          Object {
                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                            "button": "MuiListItem-button",
                            "container": "MuiListItem-container",
                            "dense": "MuiListItem-dense",
                            "disabled": "Mui-disabled",
                            "divider": "MuiListItem-divider",
                            "focusVisible": "Mui-focusVisible",
                            "gutters": "MuiListItem-gutters",
                            "root": "MuiListItem-root",
                            "secondaryAction": "MuiListItem-secondaryAction",
                            "selected": "Mui-selected",
                          }
                        }
                        disableGutters={true}
                      >
                        <li
                          className="MuiListItem-root MuiListItem-alignItemsFlexStart"
                          disabled={false}
                        >
                          <WithStyles(ForwardRef(ListItemAvatar))
                            key=".0"
                          >
                            <ForwardRef(ListItemAvatar)
                              classes={
                                Object {
                                  "alignItemsFlexStart": "MuiListItemAvatar-alignItemsFlexStart",
                                  "root": "MuiListItemAvatar-root",
                                }
                              }
                            >
                              <div
                                className="MuiListItemAvatar-root MuiListItemAvatar-alignItemsFlexStart"
                              >
                                <ListItemCounter
                                  count={2}
                                >
                                  <div
                                    className="makeStyles-root-209"
                                  >
                                    <div
                                      className="makeStyles-circleContainer-210"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        color="textPrimary"
                                        variant="h5"
                                      >
                                        <ForwardRef(Typography)
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="textPrimary"
                                          variant="h5"
                                        >
                                          <h5
                                            className="MuiTypography-root MuiTypography-h5 MuiTypography-colorTextPrimary"
                                          >
                                            2
                                          </h5>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </div>
                                  </div>
                                </ListItemCounter>
                              </div>
                            </ForwardRef(ListItemAvatar)>
                          </WithStyles(ForwardRef(ListItemAvatar))>
                          <WithStyles(ForwardRef(ListItemText))
                            key=".1"
                            primary="Culpa aliquid quos vel totam quia sequi voluptates fuga sunt. Amet ut possimus dolor maxime dolor sunt ipsum. Id error possimus veniam sed doloribus."
                            primaryTypographyProps={
                              Object {
                                "color": "textSecondary",
                              }
                            }
                          >
                            <ForwardRef(ListItemText)
                              classes={
                                Object {
                                  "dense": "MuiListItemText-dense",
                                  "inset": "MuiListItemText-inset",
                                  "multiline": "MuiListItemText-multiline",
                                  "primary": "MuiListItemText-primary",
                                  "root": "MuiListItemText-root",
                                  "secondary": "MuiListItemText-secondary",
                                }
                              }
                              primary="Culpa aliquid quos vel totam quia sequi voluptates fuga sunt. Amet ut possimus dolor maxime dolor sunt ipsum. Id error possimus veniam sed doloribus."
                              primaryTypographyProps={
                                Object {
                                  "color": "textSecondary",
                                }
                              }
                            >
                              <div
                                className="MuiListItemText-root"
                              >
                                <WithStyles(ForwardRef(Typography))
                                  className="MuiListItemText-primary"
                                  color="textSecondary"
                                  component="span"
                                  display="block"
                                  variant="body1"
                                >
                                  <ForwardRef(Typography)
                                    className="MuiListItemText-primary"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                    color="textSecondary"
                                    component="span"
                                    display="block"
                                    variant="body1"
                                  >
                                    <span
                                      className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-colorTextSecondary MuiTypography-displayBlock"
                                    >
                                      Culpa aliquid quos vel totam quia sequi voluptates fuga sunt. Amet ut possimus dolor maxime dolor sunt ipsum. Id error possimus veniam sed doloribus.
                                    </span>
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                              </div>
                            </ForwardRef(ListItemText)>
                          </WithStyles(ForwardRef(ListItemText))>
                        </li>
                      </ForwardRef(ListItem)>
                    </WithStyles(ForwardRef(ListItem))>
                    <WithStyles(ForwardRef(ListItem))
                      alignItems="flex-start"
                      disableGutters={true}
                    >
                      <ForwardRef(ListItem)
                        alignItems="flex-start"
                        classes={
                          Object {
                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                            "button": "MuiListItem-button",
                            "container": "MuiListItem-container",
                            "dense": "MuiListItem-dense",
                            "disabled": "Mui-disabled",
                            "divider": "MuiListItem-divider",
                            "focusVisible": "Mui-focusVisible",
                            "gutters": "MuiListItem-gutters",
                            "root": "MuiListItem-root",
                            "secondaryAction": "MuiListItem-secondaryAction",
                            "selected": "Mui-selected",
                          }
                        }
                        disableGutters={true}
                      >
                        <li
                          className="MuiListItem-root MuiListItem-alignItemsFlexStart"
                          disabled={false}
                        >
                          <WithStyles(ForwardRef(ListItemAvatar))
                            key=".0"
                          >
                            <ForwardRef(ListItemAvatar)
                              classes={
                                Object {
                                  "alignItemsFlexStart": "MuiListItemAvatar-alignItemsFlexStart",
                                  "root": "MuiListItemAvatar-root",
                                }
                              }
                            >
                              <div
                                className="MuiListItemAvatar-root MuiListItemAvatar-alignItemsFlexStart"
                              >
                                <ListItemCounter
                                  count={3}
                                >
                                  <div
                                    className="makeStyles-root-209"
                                  >
                                    <div
                                      className="makeStyles-circleContainer-210"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        color="textPrimary"
                                        variant="h5"
                                      >
                                        <ForwardRef(Typography)
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          color="textPrimary"
                                          variant="h5"
                                        >
                                          <h5
                                            className="MuiTypography-root MuiTypography-h5 MuiTypography-colorTextPrimary"
                                          >
                                            3
                                          </h5>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </div>
                                  </div>
                                </ListItemCounter>
                              </div>
                            </ForwardRef(ListItemAvatar)>
                          </WithStyles(ForwardRef(ListItemAvatar))>
                          <WithStyles(ForwardRef(ListItemText))
                            key=".1"
                            primary="Culpa aliquid quos vel totam quia sequi voluptates fuga sunt. Amet ut possimus dolor maxime dolor sunt ipsum. Id error possimus veniam sed doloribus."
                            primaryTypographyProps={
                              Object {
                                "color": "textSecondary",
                              }
                            }
                          >
                            <ForwardRef(ListItemText)
                              classes={
                                Object {
                                  "dense": "MuiListItemText-dense",
                                  "inset": "MuiListItemText-inset",
                                  "multiline": "MuiListItemText-multiline",
                                  "primary": "MuiListItemText-primary",
                                  "root": "MuiListItemText-root",
                                  "secondary": "MuiListItemText-secondary",
                                }
                              }
                              primary="Culpa aliquid quos vel totam quia sequi voluptates fuga sunt. Amet ut possimus dolor maxime dolor sunt ipsum. Id error possimus veniam sed doloribus."
                              primaryTypographyProps={
                                Object {
                                  "color": "textSecondary",
                                }
                              }
                            >
                              <div
                                className="MuiListItemText-root"
                              >
                                <WithStyles(ForwardRef(Typography))
                                  className="MuiListItemText-primary"
                                  color="textSecondary"
                                  component="span"
                                  display="block"
                                  variant="body1"
                                >
                                  <ForwardRef(Typography)
                                    className="MuiListItemText-primary"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                    color="textSecondary"
                                    component="span"
                                    display="block"
                                    variant="body1"
                                  >
                                    <span
                                      className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-colorTextSecondary MuiTypography-displayBlock"
                                    >
                                      Culpa aliquid quos vel totam quia sequi voluptates fuga sunt. Amet ut possimus dolor maxime dolor sunt ipsum. Id error possimus veniam sed doloribus.
                                    </span>
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                              </div>
                            </ForwardRef(ListItemText)>
                          </WithStyles(ForwardRef(ListItemText))>
                        </li>
                      </ForwardRef(ListItem)>
                    </WithStyles(ForwardRef(ListItem))>
                  </ol>
                </ForwardRef(List)>
              </WithStyles(ForwardRef(List))>
              <div
                style={
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "flex-end",
                    "paddingTop": "32px",
                  }
                }
              >
                <Button
                  addGlow={true}
                  color="primary"
                  onClick={[Function]}
                  paddingRight={true}
                  startIcon={
                    <GitHub
                      color="white"
                      size={18}
                    />
                  }
                  variant="contained"
                >
                  <div
                    className="makeStyles-addRightPadding-159"
                  >
                    <WithStyles(ForwardRef(Button))
                      classes={
                        Object {
                          "containedPrimary": "makeStyles-containedPrimary-157",
                          "containedSecondary": "makeStyles-containedSecondary-158",
                          "label": "makeStyles-buttonLabel-156",
                          "root": "makeStyles-root-155 makeStyles-addPrimaryGlow-160",
                        }
                      }
                      color="primary"
                      disableRipple={true}
                      onClick={[Function]}
                      startIcon={
                        <GitHub
                          color="white"
                          size={18}
                        />
                      }
                      variant="contained"
                    >
                      <ForwardRef(Button)
                        classes={
                          Object {
                            "colorInherit": "MuiButton-colorInherit",
                            "contained": "MuiButton-contained",
                            "containedPrimary": "MuiButton-containedPrimary makeStyles-containedPrimary-157",
                            "containedSecondary": "MuiButton-containedSecondary makeStyles-containedSecondary-158",
                            "containedSizeLarge": "MuiButton-containedSizeLarge",
                            "containedSizeSmall": "MuiButton-containedSizeSmall",
                            "disableElevation": "MuiButton-disableElevation",
                            "disabled": "Mui-disabled",
                            "endIcon": "MuiButton-endIcon",
                            "focusVisible": "Mui-focusVisible",
                            "fullWidth": "MuiButton-fullWidth",
                            "iconSizeLarge": "MuiButton-iconSizeLarge",
                            "iconSizeMedium": "MuiButton-iconSizeMedium",
                            "iconSizeSmall": "MuiButton-iconSizeSmall",
                            "label": "MuiButton-label makeStyles-buttonLabel-156",
                            "outlined": "MuiButton-outlined",
                            "outlinedPrimary": "MuiButton-outlinedPrimary",
                            "outlinedSecondary": "MuiButton-outlinedSecondary",
                            "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                            "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                            "root": "MuiButton-root makeStyles-root-155 makeStyles-addPrimaryGlow-160",
                            "sizeLarge": "MuiButton-sizeLarge",
                            "sizeSmall": "MuiButton-sizeSmall",
                            "startIcon": "MuiButton-startIcon",
                            "text": "MuiButton-text",
                            "textPrimary": "MuiButton-textPrimary",
                            "textSecondary": "MuiButton-textSecondary",
                            "textSizeLarge": "MuiButton-textSizeLarge",
                            "textSizeSmall": "MuiButton-textSizeSmall",
                          }
                        }
                        color="primary"
                        disableRipple={true}
                        onClick={[Function]}
                        startIcon={
                          <GitHub
                            color="white"
                            size={18}
                          />
                        }
                        variant="contained"
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          className="MuiButton-root makeStyles-root-155 makeStyles-addPrimaryGlow-160 MuiButton-contained MuiButton-containedPrimary makeStyles-containedPrimary-157"
                          component="button"
                          disableRipple={true}
                          disabled={false}
                          focusRipple={true}
                          focusVisibleClassName="Mui-focusVisible"
                          onClick={[Function]}
                          type="button"
                        >
                          <ForwardRef(ButtonBase)
                            className="MuiButton-root makeStyles-root-155 makeStyles-addPrimaryGlow-160 MuiButton-contained MuiButton-containedPrimary makeStyles-containedPrimary-157"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            component="button"
                            disableRipple={true}
                            disabled={false}
                            focusRipple={true}
                            focusVisibleClassName="Mui-focusVisible"
                            onClick={[Function]}
                            type="button"
                          >
                            <button
                              className="MuiButtonBase-root MuiButton-root makeStyles-root-155 makeStyles-addPrimaryGlow-160 MuiButton-contained MuiButton-containedPrimary makeStyles-containedPrimary-157"
                              disabled={false}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              tabIndex={0}
                              type="button"
                            >
                              <span
                                className="MuiButton-label makeStyles-buttonLabel-156"
                              >
                                <span
                                  className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                >
                                  <GitHub
                                    color="white"
                                    size={18}
                                  >
                                    <svg
                                      fill="none"
                                      height={18}
                                      stroke="white"
                                      strokeLinecap="round"
                                      strokeLinejoin="round"
                                      strokeWidth="2"
                                      viewBox="0 0 24 24"
                                      width={18}
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"
                                      />
                                    </svg>
                                  </GitHub>
                                </span>
                                Github
                              </span>
                            </button>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(Button)>
                    </WithStyles(ForwardRef(Button))>
                  </div>
                </Button>
                <Button
                  addGlow={false}
                  color="secondary"
                  onClick={[Function]}
                  paddingRight={false}
                  startIcon={
                    <ExternalLink
                      color="black"
                      size={18}
                    />
                  }
                  variant="contained"
                >
                  <div
                    className=""
                  >
                    <WithStyles(ForwardRef(Button))
                      classes={
                        Object {
                          "containedPrimary": "makeStyles-containedPrimary-157",
                          "containedSecondary": "makeStyles-containedSecondary-158",
                          "label": "makeStyles-buttonLabel-156",
                          "root": "makeStyles-root-155",
                        }
                      }
                      color="secondary"
                      disableRipple={true}
                      onClick={[Function]}
                      startIcon={
                        <ExternalLink
                          color="black"
                          size={18}
                        />
                      }
                      variant="contained"
                    >
                      <ForwardRef(Button)
                        classes={
                          Object {
                            "colorInherit": "MuiButton-colorInherit",
                            "contained": "MuiButton-contained",
                            "containedPrimary": "MuiButton-containedPrimary makeStyles-containedPrimary-157",
                            "containedSecondary": "MuiButton-containedSecondary makeStyles-containedSecondary-158",
                            "containedSizeLarge": "MuiButton-containedSizeLarge",
                            "containedSizeSmall": "MuiButton-containedSizeSmall",
                            "disableElevation": "MuiButton-disableElevation",
                            "disabled": "Mui-disabled",
                            "endIcon": "MuiButton-endIcon",
                            "focusVisible": "Mui-focusVisible",
                            "fullWidth": "MuiButton-fullWidth",
                            "iconSizeLarge": "MuiButton-iconSizeLarge",
                            "iconSizeMedium": "MuiButton-iconSizeMedium",
                            "iconSizeSmall": "MuiButton-iconSizeSmall",
                            "label": "MuiButton-label makeStyles-buttonLabel-156",
                            "outlined": "MuiButton-outlined",
                            "outlinedPrimary": "MuiButton-outlinedPrimary",
                            "outlinedSecondary": "MuiButton-outlinedSecondary",
                            "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                            "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                            "root": "MuiButton-root makeStyles-root-155",
                            "sizeLarge": "MuiButton-sizeLarge",
                            "sizeSmall": "MuiButton-sizeSmall",
                            "startIcon": "MuiButton-startIcon",
                            "text": "MuiButton-text",
                            "textPrimary": "MuiButton-textPrimary",
                            "textSecondary": "MuiButton-textSecondary",
                            "textSizeLarge": "MuiButton-textSizeLarge",
                            "textSizeSmall": "MuiButton-textSizeSmall",
                          }
                        }
                        color="secondary"
                        disableRipple={true}
                        onClick={[Function]}
                        startIcon={
                          <ExternalLink
                            color="black"
                            size={18}
                          />
                        }
                        variant="contained"
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          className="MuiButton-root makeStyles-root-155 MuiButton-contained MuiButton-containedSecondary makeStyles-containedSecondary-158"
                          component="button"
                          disableRipple={true}
                          disabled={false}
                          focusRipple={true}
                          focusVisibleClassName="Mui-focusVisible"
                          onClick={[Function]}
                          type="button"
                        >
                          <ForwardRef(ButtonBase)
                            className="MuiButton-root makeStyles-root-155 MuiButton-contained MuiButton-containedSecondary makeStyles-containedSecondary-158"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            component="button"
                            disableRipple={true}
                            disabled={false}
                            focusRipple={true}
                            focusVisibleClassName="Mui-focusVisible"
                            onClick={[Function]}
                            type="button"
                          >
                            <button
                              className="MuiButtonBase-root MuiButton-root makeStyles-root-155 MuiButton-contained MuiButton-containedSecondary makeStyles-containedSecondary-158"
                              disabled={false}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              tabIndex={0}
                              type="button"
                            >
                              <span
                                className="MuiButton-label makeStyles-buttonLabel-156"
                              >
                                <span
                                  className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                >
                                  <ExternalLink
                                    color="black"
                                    size={18}
                                  >
                                    <svg
                                      fill="none"
                                      height={18}
                                      stroke="black"
                                      strokeLinecap="round"
                                      strokeLinejoin="round"
                                      strokeWidth="2"
                                      viewBox="0 0 24 24"
                                      width={18}
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"
                                      />
                                      <polyline
                                        points="15 3 21 3 21 9"
                                      />
                                      <line
                                        x1="10"
                                        x2="21"
                                        y1="14"
                                        y2="3"
                                      />
                                    </svg>
                                  </ExternalLink>
                                </span>
                                Learn more
                              </span>
                            </button>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(Button)>
                    </WithStyles(ForwardRef(Button))>
                  </div>
                </Button>
              </div>
            </div>
            <ScrollToTopButton>
              <ScrollTop>
                <ForwardRef(Zoom)
                  in={false}
                >
                  <Transition
                    appear={true}
                    enter={true}
                    exit={true}
                    in={false}
                    mountOnEnter={false}
                    onEnter={[Function]}
                    onEntered={[Function]}
                    onEntering={[Function]}
                    onExit={[Function]}
                    onExited={[Function]}
                    onExiting={[Function]}
                    timeout={
                      Object {
                        "enter": 225,
                        "exit": 195,
                      }
                    }
                    unmountOnExit={false}
                  >
                    <div
                      className="makeStyles-root-217"
                      onClick={[Function]}
                      role="presentation"
                      style={
                        Object {
                          "transform": "scale(0)",
                          "visibility": "hidden",
                        }
                      }
                    >
                      <WithStyles(ForwardRef(Fab))
                        aria-label="scroll back to top"
                        color="secondary"
                        size="large"
                      >
                        <ForwardRef(Fab)
                          aria-label="scroll back to top"
                          classes={
                            Object {
                              "colorInherit": "MuiFab-colorInherit",
                              "disabled": "Mui-disabled",
                              "extended": "MuiFab-extended",
                              "focusVisible": "Mui-focusVisible",
                              "label": "MuiFab-label",
                              "primary": "MuiFab-primary",
                              "root": "MuiFab-root",
                              "secondary": "MuiFab-secondary",
                              "sizeMedium": "MuiFab-sizeMedium",
                              "sizeSmall": "MuiFab-sizeSmall",
                            }
                          }
                          color="secondary"
                          size="large"
                        >
                          <WithStyles(ForwardRef(ButtonBase))
                            aria-label="scroll back to top"
                            className="MuiFab-root MuiFab-secondary"
                            component="button"
                            disabled={false}
                            focusRipple={true}
                            focusVisibleClassName="Mui-focusVisible"
                          >
                            <ForwardRef(ButtonBase)
                              aria-label="scroll back to top"
                              className="MuiFab-root MuiFab-secondary"
                              classes={
                                Object {
                                  "disabled": "Mui-disabled",
                                  "focusVisible": "Mui-focusVisible",
                                  "root": "MuiButtonBase-root",
                                }
                              }
                              component="button"
                              disabled={false}
                              focusRipple={true}
                              focusVisibleClassName="Mui-focusVisible"
                            >
                              <button
                                aria-label="scroll back to top"
                                className="MuiButtonBase-root MuiFab-root MuiFab-secondary"
                                disabled={false}
                                onBlur={[Function]}
                                onDragLeave={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                tabIndex={0}
                                type="button"
                              >
                                <span
                                  className="MuiFab-label"
                                >
                                  <ChevronUp
                                    color="white"
                                  >
                                    <svg
                                      fill="none"
                                      height={24}
                                      stroke="white"
                                      strokeLinecap="round"
                                      strokeLinejoin="round"
                                      strokeWidth="2"
                                      viewBox="0 0 24 24"
                                      width={24}
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <polyline
                                        points="18 15 12 9 6 15"
                                      />
                                    </svg>
                                  </ChevronUp>
                                </span>
                                <WithStyles(memo)
                                  center={false}
                                >
                                  <ForwardRef(TouchRipple)
                                    center={false}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child",
                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                        "ripple": "MuiTouchRipple-ripple",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                        "root": "MuiTouchRipple-root",
                                      }
                                    }
                                  >
                                    <span
                                      className="MuiTouchRipple-root"
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        component={null}
                                        exit={true}
                                      />
                                    </span>
                                  </ForwardRef(TouchRipple)>
                                </WithStyles(memo)>
                              </button>
                            </ForwardRef(ButtonBase)>
                          </WithStyles(ForwardRef(ButtonBase))>
                        </ForwardRef(Fab)>
                      </WithStyles(ForwardRef(Fab))>
                    </div>
                  </Transition>
                </ForwardRef(Zoom)>
              </ScrollTop>
            </ScrollToTopButton>
          </div>
        </ContentMarginContainer>
        <div
          style={
            Object {
              "backgroundColor": "rgba(0, 0, 0, 0.04)",
              "minHeight": "500px",
              "width": "100%",
            }
          }
        >
          <FooterLinkGroup
            groupHeader="For clients"
            links={
              Array [
                Object {
                  "displayText": "App",
                  "href": "/color-studio",
                  "icon": <Server
                    color="white"
                  />,
                },
                Object {
                  "displayText": "API Docs",
                  "external": true,
                  "href": "https://google.com",
                  "icon": <Book
                    color="white"
                  />,
                },
              ]
            }
          >
            <div
              className="makeStyles-root-228"
            >
              <Typography
                variant="subtitle1"
              >
                <WithStyles(ForwardRef(Typography))
                  classes={
                    Object {
                      "colorTextPrimary": "makeStyles-colorTextPrimary-123",
                      "colorTextSecondary": "makeStyles-colorTextSecondary-124",
                    }
                  }
                  variant="subtitle1"
                >
                  <ForwardRef(Typography)
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary makeStyles-colorTextPrimary-123",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary makeStyles-colorTextSecondary-124",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                    variant="subtitle1"
                  >
                    <h6
                      className="MuiTypography-root MuiTypography-subtitle1"
                    >
                      For clients
                    </h6>
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
              </Typography>
              <div
                className="makeStyles-linkContainer-229"
                key="footer-link-App"
              >
                <Link
                  external={false}
                  href="/color-studio"
                  icon={
                    <Server
                      color="white"
                    />
                  }
                  key="footer-link-App"
                  variant="footer"
                >
                  <WithStyles(ForwardRef(Typography))
                    className="makeStyles-footer-link-75"
                    component={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      }
                    }
                    href="/color-studio"
                    icon={
                      <Server
                        color="white"
                      />
                    }
                    variant="body1"
                  >
                    <ForwardRef(Typography)
                      className="makeStyles-footer-link-75"
                      classes={
                        Object {
                          "alignCenter": "MuiTypography-alignCenter",
                          "alignJustify": "MuiTypography-alignJustify",
                          "alignLeft": "MuiTypography-alignLeft",
                          "alignRight": "MuiTypography-alignRight",
                          "body1": "MuiTypography-body1",
                          "body2": "MuiTypography-body2",
                          "button": "MuiTypography-button",
                          "caption": "MuiTypography-caption",
                          "colorError": "MuiTypography-colorError",
                          "colorInherit": "MuiTypography-colorInherit",
                          "colorPrimary": "MuiTypography-colorPrimary",
                          "colorSecondary": "MuiTypography-colorSecondary",
                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                          "displayBlock": "MuiTypography-displayBlock",
                          "displayInline": "MuiTypography-displayInline",
                          "gutterBottom": "MuiTypography-gutterBottom",
                          "h1": "MuiTypography-h1",
                          "h2": "MuiTypography-h2",
                          "h3": "MuiTypography-h3",
                          "h4": "MuiTypography-h4",
                          "h5": "MuiTypography-h5",
                          "h6": "MuiTypography-h6",
                          "noWrap": "MuiTypography-noWrap",
                          "overline": "MuiTypography-overline",
                          "paragraph": "MuiTypography-paragraph",
                          "root": "MuiTypography-root",
                          "srOnly": "MuiTypography-srOnly",
                          "subtitle1": "MuiTypography-subtitle1",
                          "subtitle2": "MuiTypography-subtitle2",
                        }
                      }
                      component={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        }
                      }
                      href="/color-studio"
                      icon={
                        <Server
                          color="white"
                        />
                      }
                      variant="body1"
                    >
                      <ForwardRef
                        className="MuiTypography-root makeStyles-footer-link-75 MuiTypography-body1"
                        href="/color-studio"
                        icon={
                          <Server
                            color="white"
                          />
                        }
                      >
                        <BaseLink
                          className="MuiTypography-root makeStyles-footer-link-75 MuiTypography-body1"
                          href="/color-studio"
                          icon={
                            <Server
                              color="white"
                            />
                          }
                          innerRef={null}
                        >
                          <WithStyles(ForwardRef(Link))
                            className="MuiTypography-root makeStyles-footer-link-75 MuiTypography-body1"
                            component={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "propTypes": Object {},
                                "render": [Function],
                              }
                            }
                            href="/color-studio"
                            icon={
                              <Server
                                color="white"
                              />
                            }
                          >
                            <ForwardRef(Link)
                              className="MuiTypography-root makeStyles-footer-link-75 MuiTypography-body1"
                              classes={
                                Object {
                                  "button": "MuiLink-button",
                                  "focusVisible": "Mui-focusVisible",
                                  "root": "MuiLink-root",
                                  "underlineAlways": "MuiLink-underlineAlways",
                                  "underlineHover": "MuiLink-underlineHover",
                                  "underlineNone": "MuiLink-underlineNone",
                                }
                              }
                              component={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {},
                                  "render": [Function],
                                }
                              }
                              href="/color-studio"
                              icon={
                                <Server
                                  color="white"
                                />
                              }
                            >
                              <WithStyles(ForwardRef(Typography))
                                className="MuiLink-root MuiLink-underlineHover MuiTypography-root makeStyles-footer-link-75 MuiTypography-body1"
                                color="primary"
                                component={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {},
                                    "render": [Function],
                                  }
                                }
                                href="/color-studio"
                                icon={
                                  <Server
                                    color="white"
                                  />
                                }
                                onBlur={[Function]}
                                onFocus={[Function]}
                                variant="inherit"
                              >
                                <ForwardRef(Typography)
                                  className="MuiLink-root MuiLink-underlineHover MuiTypography-root makeStyles-footer-link-75 MuiTypography-body1"
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter",
                                      "alignJustify": "MuiTypography-alignJustify",
                                      "alignLeft": "MuiTypography-alignLeft",
                                      "alignRight": "MuiTypography-alignRight",
                                      "body1": "MuiTypography-body1",
                                      "body2": "MuiTypography-body2",
                                      "button": "MuiTypography-button",
                                      "caption": "MuiTypography-caption",
                                      "colorError": "MuiTypography-colorError",
                                      "colorInherit": "MuiTypography-colorInherit",
                                      "colorPrimary": "MuiTypography-colorPrimary",
                                      "colorSecondary": "MuiTypography-colorSecondary",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                      "displayBlock": "MuiTypography-displayBlock",
                                      "displayInline": "MuiTypography-displayInline",
                                      "gutterBottom": "MuiTypography-gutterBottom",
                                      "h1": "MuiTypography-h1",
                                      "h2": "MuiTypography-h2",
                                      "h3": "MuiTypography-h3",
                                      "h4": "MuiTypography-h4",
                                      "h5": "MuiTypography-h5",
                                      "h6": "MuiTypography-h6",
                                      "noWrap": "MuiTypography-noWrap",
                                      "overline": "MuiTypography-overline",
                                      "paragraph": "MuiTypography-paragraph",
                                      "root": "MuiTypography-root",
                                      "srOnly": "MuiTypography-srOnly",
                                      "subtitle1": "MuiTypography-subtitle1",
                                      "subtitle2": "MuiTypography-subtitle2",
                                    }
                                  }
                                  color="primary"
                                  component={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "propTypes": Object {},
                                      "render": [Function],
                                    }
                                  }
                                  href="/color-studio"
                                  icon={
                                    <Server
                                      color="white"
                                    />
                                  }
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  variant="inherit"
                                >
                                  <ForwardRef(NextComposed)
                                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-root makeStyles-footer-link-75 MuiTypography-body1 MuiTypography-colorPrimary"
                                    href="/color-studio"
                                    icon={
                                      <Server
                                        color="white"
                                      />
                                    }
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                  >
                                    <Link
                                      href="/color-studio"
                                    >
                                      <a
                                        className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-root makeStyles-footer-link-75 MuiTypography-body1 MuiTypography-colorPrimary"
                                        href="/color-studio"
                                        icon={
                                          <Server
                                            color="white"
                                          />
                                        }
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseEnter={[Function]}
                                      >
                                        App
                                      </a>
                                    </Link>
                                  </ForwardRef(NextComposed)>
                                </ForwardRef(Typography)>
                              </WithStyles(ForwardRef(Typography))>
                            </ForwardRef(Link)>
                          </WithStyles(ForwardRef(Link))>
                        </BaseLink>
                      </ForwardRef>
                    </ForwardRef(Typography)>
                  </WithStyles(ForwardRef(Typography))>
                </Link>
              </div>
              <div
                className="makeStyles-linkContainer-229"
                key="footer-link-APIDocs"
              >
                <Link
                  external={true}
                  href="https://google.com"
                  icon={
                    <Book
                      color="white"
                    />
                  }
                  key="footer-link-API Docs"
                  variant="footer"
                >
                  <WithStyles(ForwardRef(Typography))
                    className="makeStyles-footer-link-75"
                    component="a"
                    href="https://google.com"
                    icon={
                      <Book
                        color="white"
                      />
                    }
                    variant="body1"
                  >
                    <ForwardRef(Typography)
                      className="makeStyles-footer-link-75"
                      classes={
                        Object {
                          "alignCenter": "MuiTypography-alignCenter",
                          "alignJustify": "MuiTypography-alignJustify",
                          "alignLeft": "MuiTypography-alignLeft",
                          "alignRight": "MuiTypography-alignRight",
                          "body1": "MuiTypography-body1",
                          "body2": "MuiTypography-body2",
                          "button": "MuiTypography-button",
                          "caption": "MuiTypography-caption",
                          "colorError": "MuiTypography-colorError",
                          "colorInherit": "MuiTypography-colorInherit",
                          "colorPrimary": "MuiTypography-colorPrimary",
                          "colorSecondary": "MuiTypography-colorSecondary",
                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                          "displayBlock": "MuiTypography-displayBlock",
                          "displayInline": "MuiTypography-displayInline",
                          "gutterBottom": "MuiTypography-gutterBottom",
                          "h1": "MuiTypography-h1",
                          "h2": "MuiTypography-h2",
                          "h3": "MuiTypography-h3",
                          "h4": "MuiTypography-h4",
                          "h5": "MuiTypography-h5",
                          "h6": "MuiTypography-h6",
                          "noWrap": "MuiTypography-noWrap",
                          "overline": "MuiTypography-overline",
                          "paragraph": "MuiTypography-paragraph",
                          "root": "MuiTypography-root",
                          "srOnly": "MuiTypography-srOnly",
                          "subtitle1": "MuiTypography-subtitle1",
                          "subtitle2": "MuiTypography-subtitle2",
                        }
                      }
                      component="a"
                      href="https://google.com"
                      icon={
                        <Book
                          color="white"
                        />
                      }
                      variant="body1"
                    >
                      <a
                        className="MuiTypography-root makeStyles-footer-link-75 MuiTypography-body1"
                        href="https://google.com"
                        icon={
                          <Book
                            color="white"
                          />
                        }
                      >
                        API Docs
                      </a>
                    </ForwardRef(Typography)>
                  </WithStyles(ForwardRef(Typography))>
                </Link>
              </div>
            </div>
          </FooterLinkGroup>
        </div>
      </Home>
    </Index>
  </ThemeProvider>
</HomeWithTheme>
`;
