// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Footer should render without error 1`] = `
<FooterWithTheme>
  <ThemeProvider
    theme={
      Object {
        "breakpoints": Object {
          "between": [Function],
          "down": [Function],
          "keys": Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ],
          "only": [Function],
          "up": [Function],
          "values": Object {
            "lg": 1280,
            "md": 960,
            "sm": 600,
            "xl": 1920,
            "xs": 0,
          },
          "width": [Function],
        },
        "direction": "ltr",
        "mixins": Object {
          "gutters": [Function],
          "toolbar": Object {
            "@media (min-width:0px) and (orientation: landscape)": Object {
              "minHeight": 48,
            },
            "@media (min-width:600px)": Object {
              "minHeight": 64,
            },
            "minHeight": 56,
          },
        },
        "overrides": Object {
          "MuiTypography": Object {
            "h1": Object {
              "fontFamily": "Montserrat",
              "fontWeight": 900,
            },
            "h2": Object {
              "fontFamily": "Montserrat",
              "fontWeight": 900,
            },
            "h3": Object {
              "fontFamily": "Montserrat",
              "fontWeight": 900,
            },
            "h4": Object {
              "fontFamily": "Montserrat",
              "fontWeight": 900,
            },
            "h5": Object {
              "fontFamily": "Montserrat",
              "fontWeight": 900,
            },
            "h6": Object {
              "fontFamily": "Montserrat",
              "fontWeight": 900,
            },
            "subtitle1": Object {
              "fontWeight": "bold",
            },
            "subtitle2": Object {
              "fontWeight": "bold",
            },
          },
        },
        "palette": Object {
          "action": Object {
            "activatedOpacity": 0.12,
            "active": "rgba(0, 0, 0, 0.54)",
            "disabled": "rgba(0, 0, 0, 0.26)",
            "disabledBackground": "rgba(0, 0, 0, 0.12)",
            "disabledOpacity": 0.38,
            "focus": "rgba(0, 0, 0, 0.12)",
            "focusOpacity": 0.12,
            "hover": "rgba(0, 0, 0, 0.04)",
            "hoverOpacity": 0.04,
            "selected": "rgba(0, 0, 0, 0.08)",
            "selectedOpacity": 0.08,
          },
          "augmentColor": [Function],
          "background": Object {
            "default": "#FFFFFF",
            "paper": "#F9F9FA",
          },
          "common": Object {
            "black": "#000000",
            "white": "#FFFFFF",
          },
          "contrastThreshold": 3,
          "custom": Object {
            "black40": "rgba(0, 0, 0, 0.40)",
            "black60": "rgba(0, 0, 0, 0.60)",
            "black75": "rgba(0, 0, 0, 0.75)",
            "charcoal": "#121516",
            "charcoalDark": "#0E1214",
            "charcoalLight": "#181C1E",
            "greyDark": "#DDE1E4",
            "greyDarker": "#CDD4D8",
            "greyDefault": "#EBEEEF",
            "greyLight": "#F9F9FA",
            "white60": "rgba(255, 255, 255, 0.60)",
            "white75": "rgba(255, 255, 255, 0.75)",
          },
          "divider": "rgba(0, 0, 0, 0.12)",
          "error": Object {
            "contrastText": "#fff",
            "dark": "#d32f2f",
            "light": "#e57373",
            "main": "#f44336",
          },
          "getContrastText": [Function],
          "grey": Object {
            "100": "#f5f5f5",
            "200": "#eeeeee",
            "300": "#e0e0e0",
            "400": "#bdbdbd",
            "50": "#fafafa",
            "500": "#9e9e9e",
            "600": "#757575",
            "700": "#616161",
            "800": "#424242",
            "900": "#212121",
            "A100": "#d5d5d5",
            "A200": "#aaaaaa",
            "A400": "#303030",
            "A700": "#616161",
          },
          "info": Object {
            "contrastText": "#fff",
            "dark": "#1976d2",
            "light": "#64b5f6",
            "main": "#2196f3",
          },
          "primary": Object {
            "contrastText": "#fff",
            "dark": "#A81432",
            "light": "#E62E51",
            "main": "#DB1A3F",
          },
          "secondary": Object {
            "contrastText": "#fff",
            "dark": "#365775",
            "light": "#4FBEFF",
            "main": "#2C92CD",
          },
          "success": Object {
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "#388e3c",
            "light": "#81c784",
            "main": "#4caf50",
          },
          "text": Object {
            "disabled": "rgba(4, 28, 41, 0.56)",
            "divider": "#DDE1E4",
            "hint": "rgba(4, 28, 41, 0.75)",
            "primary": "rgba(4, 28, 41, 1)",
            "secondary": "rgba(4, 28, 41, 0.75)",
          },
          "tonalOffset": 0.2,
          "type": "light",
          "warning": Object {
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "#f57c00",
            "light": "#ffb74d",
            "main": "#ff9800",
          },
        },
        "props": Object {},
        "shadows": Array [
          "none",
          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
        ],
        "shape": Object {
          "borderRadius": 4,
        },
        "spacing": [Function],
        "transitions": Object {
          "create": [Function],
          "duration": Object {
            "complex": 375,
            "enteringScreen": 225,
            "leavingScreen": 195,
            "short": 250,
            "shorter": 200,
            "shortest": 150,
            "standard": 300,
          },
          "easing": Object {
            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
          },
          "getAutoHeightDuration": [Function],
        },
        "typography": Object {
          "body1": Object {
            "fontFamily": "Lato",
            "fontSize": "1rem",
            "fontWeight": 400,
            "lineHeight": 1.5,
          },
          "body2": Object {
            "fontFamily": "Lato",
            "fontSize": "0.875rem",
            "fontWeight": 400,
            "lineHeight": 1.43,
          },
          "button": Object {
            "fontFamily": "Lato",
            "fontSize": "0.875rem",
            "fontWeight": 500,
            "lineHeight": 1.75,
            "textTransform": "uppercase",
          },
          "caption": Object {
            "fontFamily": "Lato",
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "lineHeight": 1.66,
          },
          "fontFamily": "Lato",
          "fontSize": 14,
          "fontWeightBold": 700,
          "fontWeightLight": 300,
          "fontWeightMedium": 500,
          "fontWeightRegular": 400,
          "h1": Object {
            "@media (min-width:1280px)": Object {
              "fontSize": "5.9983rem",
            },
            "@media (min-width:600px)": Object {
              "fontSize": "4.7129rem",
            },
            "@media (min-width:960px)": Object {
              "fontSize": "5.3556rem",
            },
            "fontFamily": "Lato",
            "fontSize": "3.5rem",
            "fontWeight": 300,
            "lineHeight": 1.167,
          },
          "h2": Object {
            "@media (min-width:1280px)": Object {
              "fontSize": "3.75rem",
            },
            "@media (min-width:600px)": Object {
              "fontSize": "2.9167rem",
            },
            "@media (min-width:960px)": Object {
              "fontSize": "3.3333rem",
            },
            "fontFamily": "Lato",
            "fontSize": "2.375rem",
            "fontWeight": 300,
            "lineHeight": 1.2,
          },
          "h3": Object {
            "@media (min-width:1280px)": Object {
              "fontSize": "2.9991rem",
            },
            "@media (min-width:600px)": Object {
              "fontSize": "2.5707rem",
            },
            "@media (min-width:960px)": Object {
              "fontSize": "2.7849rem",
            },
            "fontFamily": "Lato",
            "fontSize": "2rem",
            "fontWeight": 400,
            "lineHeight": 1.167,
          },
          "h4": Object {
            "@media (min-width:1280px)": Object {
              "fontSize": "2.0243rem",
            },
            "@media (min-width:600px)": Object {
              "fontSize": "1.8219rem",
            },
            "@media (min-width:960px)": Object {
              "fontSize": "2.0243rem",
            },
            "fontFamily": "Lato",
            "fontSize": "1.5625rem",
            "fontWeight": 400,
            "lineHeight": 1.235,
          },
          "h5": Object {
            "@media (min-width:1280px)": Object {
              "fontSize": "1.4993rem",
            },
            "@media (min-width:600px)": Object {
              "fontSize": "1.3118rem",
            },
            "@media (min-width:960px)": Object {
              "fontSize": "1.4993rem",
            },
            "fontFamily": "Lato",
            "fontSize": "1.25rem",
            "fontWeight": 400,
            "lineHeight": 1.334,
          },
          "h6": Object {
            "@media (min-width:1280px)": Object {
              "fontSize": "1.25rem",
            },
            "@media (min-width:600px)": Object {
              "fontSize": "1.25rem",
            },
            "@media (min-width:960px)": Object {
              "fontSize": "1.25rem",
            },
            "fontFamily": "Lato",
            "fontSize": "1.125rem",
            "fontWeight": 500,
            "lineHeight": 1.6,
          },
          "htmlFontSize": 16,
          "overline": Object {
            "fontFamily": "Lato",
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "lineHeight": 2.66,
            "textTransform": "uppercase",
          },
          "pxToRem": [Function],
          "round": [Function],
          "subtitle1": Object {
            "fontFamily": "Lato",
            "fontSize": "1rem",
            "fontWeight": 400,
            "lineHeight": 1.75,
          },
          "subtitle2": Object {
            "fontFamily": "Lato",
            "fontSize": "0.875rem",
            "fontWeight": 500,
            "lineHeight": 1.57,
          },
        },
        "zIndex": Object {
          "appBar": 1100,
          "drawer": 1200,
          "mobileStepper": 1000,
          "modal": 1300,
          "snackbar": 1400,
          "speedDial": 1050,
          "tooltip": 1500,
        },
        Symbol(mui.nested): false,
      }
    }
  >
    <Footer>
      <footer
        className="makeStyles-root-1"
      >
        <ContentMarginContainer>
          <div
            className="makeStyles-root-8"
          >
            <GridContainer
              className="makeStyles-gridContainer-2"
              direction="row"
              justify="flex-start"
            >
              <WithStyles(ForwardRef(Grid))
                className="makeStyles-gridContainer-2"
                container={true}
                direction="row"
                justify="flex-start"
              >
                <ForwardRef(Grid)
                  className="makeStyles-gridContainer-2"
                  classes={
                    Object {
                      "align-content-xs-center": "MuiGrid-align-content-xs-center",
                      "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                      "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                      "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                      "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                      "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                      "align-items-xs-center": "MuiGrid-align-items-xs-center",
                      "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                      "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                      "container": "MuiGrid-container",
                      "direction-xs-column": "MuiGrid-direction-xs-column",
                      "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                      "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                      "grid-lg-1": "MuiGrid-grid-lg-1",
                      "grid-lg-10": "MuiGrid-grid-lg-10",
                      "grid-lg-11": "MuiGrid-grid-lg-11",
                      "grid-lg-12": "MuiGrid-grid-lg-12",
                      "grid-lg-2": "MuiGrid-grid-lg-2",
                      "grid-lg-3": "MuiGrid-grid-lg-3",
                      "grid-lg-4": "MuiGrid-grid-lg-4",
                      "grid-lg-5": "MuiGrid-grid-lg-5",
                      "grid-lg-6": "MuiGrid-grid-lg-6",
                      "grid-lg-7": "MuiGrid-grid-lg-7",
                      "grid-lg-8": "MuiGrid-grid-lg-8",
                      "grid-lg-9": "MuiGrid-grid-lg-9",
                      "grid-lg-auto": "MuiGrid-grid-lg-auto",
                      "grid-lg-true": "MuiGrid-grid-lg-true",
                      "grid-md-1": "MuiGrid-grid-md-1",
                      "grid-md-10": "MuiGrid-grid-md-10",
                      "grid-md-11": "MuiGrid-grid-md-11",
                      "grid-md-12": "MuiGrid-grid-md-12",
                      "grid-md-2": "MuiGrid-grid-md-2",
                      "grid-md-3": "MuiGrid-grid-md-3",
                      "grid-md-4": "MuiGrid-grid-md-4",
                      "grid-md-5": "MuiGrid-grid-md-5",
                      "grid-md-6": "MuiGrid-grid-md-6",
                      "grid-md-7": "MuiGrid-grid-md-7",
                      "grid-md-8": "MuiGrid-grid-md-8",
                      "grid-md-9": "MuiGrid-grid-md-9",
                      "grid-md-auto": "MuiGrid-grid-md-auto",
                      "grid-md-true": "MuiGrid-grid-md-true",
                      "grid-sm-1": "MuiGrid-grid-sm-1",
                      "grid-sm-10": "MuiGrid-grid-sm-10",
                      "grid-sm-11": "MuiGrid-grid-sm-11",
                      "grid-sm-12": "MuiGrid-grid-sm-12",
                      "grid-sm-2": "MuiGrid-grid-sm-2",
                      "grid-sm-3": "MuiGrid-grid-sm-3",
                      "grid-sm-4": "MuiGrid-grid-sm-4",
                      "grid-sm-5": "MuiGrid-grid-sm-5",
                      "grid-sm-6": "MuiGrid-grid-sm-6",
                      "grid-sm-7": "MuiGrid-grid-sm-7",
                      "grid-sm-8": "MuiGrid-grid-sm-8",
                      "grid-sm-9": "MuiGrid-grid-sm-9",
                      "grid-sm-auto": "MuiGrid-grid-sm-auto",
                      "grid-sm-true": "MuiGrid-grid-sm-true",
                      "grid-xl-1": "MuiGrid-grid-xl-1",
                      "grid-xl-10": "MuiGrid-grid-xl-10",
                      "grid-xl-11": "MuiGrid-grid-xl-11",
                      "grid-xl-12": "MuiGrid-grid-xl-12",
                      "grid-xl-2": "MuiGrid-grid-xl-2",
                      "grid-xl-3": "MuiGrid-grid-xl-3",
                      "grid-xl-4": "MuiGrid-grid-xl-4",
                      "grid-xl-5": "MuiGrid-grid-xl-5",
                      "grid-xl-6": "MuiGrid-grid-xl-6",
                      "grid-xl-7": "MuiGrid-grid-xl-7",
                      "grid-xl-8": "MuiGrid-grid-xl-8",
                      "grid-xl-9": "MuiGrid-grid-xl-9",
                      "grid-xl-auto": "MuiGrid-grid-xl-auto",
                      "grid-xl-true": "MuiGrid-grid-xl-true",
                      "grid-xs-1": "MuiGrid-grid-xs-1",
                      "grid-xs-10": "MuiGrid-grid-xs-10",
                      "grid-xs-11": "MuiGrid-grid-xs-11",
                      "grid-xs-12": "MuiGrid-grid-xs-12",
                      "grid-xs-2": "MuiGrid-grid-xs-2",
                      "grid-xs-3": "MuiGrid-grid-xs-3",
                      "grid-xs-4": "MuiGrid-grid-xs-4",
                      "grid-xs-5": "MuiGrid-grid-xs-5",
                      "grid-xs-6": "MuiGrid-grid-xs-6",
                      "grid-xs-7": "MuiGrid-grid-xs-7",
                      "grid-xs-8": "MuiGrid-grid-xs-8",
                      "grid-xs-9": "MuiGrid-grid-xs-9",
                      "grid-xs-auto": "MuiGrid-grid-xs-auto",
                      "grid-xs-true": "MuiGrid-grid-xs-true",
                      "item": "MuiGrid-item",
                      "justify-xs-center": "MuiGrid-justify-xs-center",
                      "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                      "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                      "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                      "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                      "root": "MuiGrid-root",
                      "spacing-xs-1": "MuiGrid-spacing-xs-1",
                      "spacing-xs-10": "MuiGrid-spacing-xs-10",
                      "spacing-xs-2": "MuiGrid-spacing-xs-2",
                      "spacing-xs-3": "MuiGrid-spacing-xs-3",
                      "spacing-xs-4": "MuiGrid-spacing-xs-4",
                      "spacing-xs-5": "MuiGrid-spacing-xs-5",
                      "spacing-xs-6": "MuiGrid-spacing-xs-6",
                      "spacing-xs-7": "MuiGrid-spacing-xs-7",
                      "spacing-xs-8": "MuiGrid-spacing-xs-8",
                      "spacing-xs-9": "MuiGrid-spacing-xs-9",
                      "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                      "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                      "zeroMinWidth": "MuiGrid-zeroMinWidth",
                    }
                  }
                  container={true}
                  direction="row"
                  justify="flex-start"
                >
                  <div
                    className="MuiGrid-root makeStyles-gridContainer-2 MuiGrid-container"
                  >
                    <GridItem
                      className="makeStyles-developerInfoContainer-3"
                      md={4}
                      xs={12}
                    >
                      <WithStyles(ForwardRef(Grid))
                        className="makeStyles-developerInfoContainer-3"
                        item={true}
                        md={4}
                        xs={12}
                      >
                        <ForwardRef(Grid)
                          className="makeStyles-developerInfoContainer-3"
                          classes={
                            Object {
                              "align-content-xs-center": "MuiGrid-align-content-xs-center",
                              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                              "align-items-xs-center": "MuiGrid-align-items-xs-center",
                              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                              "container": "MuiGrid-container",
                              "direction-xs-column": "MuiGrid-direction-xs-column",
                              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                              "grid-lg-1": "MuiGrid-grid-lg-1",
                              "grid-lg-10": "MuiGrid-grid-lg-10",
                              "grid-lg-11": "MuiGrid-grid-lg-11",
                              "grid-lg-12": "MuiGrid-grid-lg-12",
                              "grid-lg-2": "MuiGrid-grid-lg-2",
                              "grid-lg-3": "MuiGrid-grid-lg-3",
                              "grid-lg-4": "MuiGrid-grid-lg-4",
                              "grid-lg-5": "MuiGrid-grid-lg-5",
                              "grid-lg-6": "MuiGrid-grid-lg-6",
                              "grid-lg-7": "MuiGrid-grid-lg-7",
                              "grid-lg-8": "MuiGrid-grid-lg-8",
                              "grid-lg-9": "MuiGrid-grid-lg-9",
                              "grid-lg-auto": "MuiGrid-grid-lg-auto",
                              "grid-lg-true": "MuiGrid-grid-lg-true",
                              "grid-md-1": "MuiGrid-grid-md-1",
                              "grid-md-10": "MuiGrid-grid-md-10",
                              "grid-md-11": "MuiGrid-grid-md-11",
                              "grid-md-12": "MuiGrid-grid-md-12",
                              "grid-md-2": "MuiGrid-grid-md-2",
                              "grid-md-3": "MuiGrid-grid-md-3",
                              "grid-md-4": "MuiGrid-grid-md-4",
                              "grid-md-5": "MuiGrid-grid-md-5",
                              "grid-md-6": "MuiGrid-grid-md-6",
                              "grid-md-7": "MuiGrid-grid-md-7",
                              "grid-md-8": "MuiGrid-grid-md-8",
                              "grid-md-9": "MuiGrid-grid-md-9",
                              "grid-md-auto": "MuiGrid-grid-md-auto",
                              "grid-md-true": "MuiGrid-grid-md-true",
                              "grid-sm-1": "MuiGrid-grid-sm-1",
                              "grid-sm-10": "MuiGrid-grid-sm-10",
                              "grid-sm-11": "MuiGrid-grid-sm-11",
                              "grid-sm-12": "MuiGrid-grid-sm-12",
                              "grid-sm-2": "MuiGrid-grid-sm-2",
                              "grid-sm-3": "MuiGrid-grid-sm-3",
                              "grid-sm-4": "MuiGrid-grid-sm-4",
                              "grid-sm-5": "MuiGrid-grid-sm-5",
                              "grid-sm-6": "MuiGrid-grid-sm-6",
                              "grid-sm-7": "MuiGrid-grid-sm-7",
                              "grid-sm-8": "MuiGrid-grid-sm-8",
                              "grid-sm-9": "MuiGrid-grid-sm-9",
                              "grid-sm-auto": "MuiGrid-grid-sm-auto",
                              "grid-sm-true": "MuiGrid-grid-sm-true",
                              "grid-xl-1": "MuiGrid-grid-xl-1",
                              "grid-xl-10": "MuiGrid-grid-xl-10",
                              "grid-xl-11": "MuiGrid-grid-xl-11",
                              "grid-xl-12": "MuiGrid-grid-xl-12",
                              "grid-xl-2": "MuiGrid-grid-xl-2",
                              "grid-xl-3": "MuiGrid-grid-xl-3",
                              "grid-xl-4": "MuiGrid-grid-xl-4",
                              "grid-xl-5": "MuiGrid-grid-xl-5",
                              "grid-xl-6": "MuiGrid-grid-xl-6",
                              "grid-xl-7": "MuiGrid-grid-xl-7",
                              "grid-xl-8": "MuiGrid-grid-xl-8",
                              "grid-xl-9": "MuiGrid-grid-xl-9",
                              "grid-xl-auto": "MuiGrid-grid-xl-auto",
                              "grid-xl-true": "MuiGrid-grid-xl-true",
                              "grid-xs-1": "MuiGrid-grid-xs-1",
                              "grid-xs-10": "MuiGrid-grid-xs-10",
                              "grid-xs-11": "MuiGrid-grid-xs-11",
                              "grid-xs-12": "MuiGrid-grid-xs-12",
                              "grid-xs-2": "MuiGrid-grid-xs-2",
                              "grid-xs-3": "MuiGrid-grid-xs-3",
                              "grid-xs-4": "MuiGrid-grid-xs-4",
                              "grid-xs-5": "MuiGrid-grid-xs-5",
                              "grid-xs-6": "MuiGrid-grid-xs-6",
                              "grid-xs-7": "MuiGrid-grid-xs-7",
                              "grid-xs-8": "MuiGrid-grid-xs-8",
                              "grid-xs-9": "MuiGrid-grid-xs-9",
                              "grid-xs-auto": "MuiGrid-grid-xs-auto",
                              "grid-xs-true": "MuiGrid-grid-xs-true",
                              "item": "MuiGrid-item",
                              "justify-xs-center": "MuiGrid-justify-xs-center",
                              "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                              "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                              "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                              "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                              "root": "MuiGrid-root",
                              "spacing-xs-1": "MuiGrid-spacing-xs-1",
                              "spacing-xs-10": "MuiGrid-spacing-xs-10",
                              "spacing-xs-2": "MuiGrid-spacing-xs-2",
                              "spacing-xs-3": "MuiGrid-spacing-xs-3",
                              "spacing-xs-4": "MuiGrid-spacing-xs-4",
                              "spacing-xs-5": "MuiGrid-spacing-xs-5",
                              "spacing-xs-6": "MuiGrid-spacing-xs-6",
                              "spacing-xs-7": "MuiGrid-spacing-xs-7",
                              "spacing-xs-8": "MuiGrid-spacing-xs-8",
                              "spacing-xs-9": "MuiGrid-spacing-xs-9",
                              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                              "zeroMinWidth": "MuiGrid-zeroMinWidth",
                            }
                          }
                          item={true}
                          md={4}
                          xs={12}
                        >
                          <div
                            className="MuiGrid-root makeStyles-developerInfoContainer-3 MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-4"
                          >
                            <ClickableLogo
                              gutterBottom={true}
                              logoColor="black"
                              variant="h5"
                            >
                              <Link
                                external={false}
                                href="/"
                                underline="none"
                                variant="wrapper"
                              >
                                <ForwardRef
                                  href="/"
                                  underline="none"
                                >
                                  <BaseLink
                                    href="/"
                                    innerRef={null}
                                    underline="none"
                                  >
                                    <WithStyles(ForwardRef(Link))
                                      className="active"
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "propTypes": Object {},
                                          "render": [Function],
                                        }
                                      }
                                      href="/"
                                      underline="none"
                                    >
                                      <ForwardRef(Link)
                                        className="active"
                                        classes={
                                          Object {
                                            "button": "MuiLink-button",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiLink-root",
                                            "underlineAlways": "MuiLink-underlineAlways",
                                            "underlineHover": "MuiLink-underlineHover",
                                            "underlineNone": "MuiLink-underlineNone",
                                          }
                                        }
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "propTypes": Object {},
                                            "render": [Function],
                                          }
                                        }
                                        href="/"
                                        underline="none"
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          className="MuiLink-root MuiLink-underlineNone active"
                                          color="primary"
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "propTypes": Object {},
                                              "render": [Function],
                                            }
                                          }
                                          href="/"
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          variant="inherit"
                                        >
                                          <ForwardRef(Typography)
                                            className="MuiLink-root MuiLink-underlineNone active"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            color="primary"
                                            component={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "propTypes": Object {},
                                                "render": [Function],
                                              }
                                            }
                                            href="/"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            variant="inherit"
                                          >
                                            <ForwardRef(NextComposed)
                                              className="MuiTypography-root MuiLink-root MuiLink-underlineNone active MuiTypography-colorPrimary"
                                              href="/"
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                            >
                                              <Link
                                                href="/"
                                              >
                                                <a
                                                  className="MuiTypography-root MuiLink-root MuiLink-underlineNone active MuiTypography-colorPrimary"
                                                  href="/"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onFocus={[Function]}
                                                  onMouseEnter={[Function]}
                                                >
                                                  <WithStyles(ForwardRef(Typography))
                                                    className="makeStyles-title-112 makeStyles-blackLogo-116"
                                                    gutterBottom={true}
                                                    variant="h5"
                                                  >
                                                    <ForwardRef(Typography)
                                                      className="makeStyles-title-112 makeStyles-blackLogo-116"
                                                      classes={
                                                        Object {
                                                          "alignCenter": "MuiTypography-alignCenter",
                                                          "alignJustify": "MuiTypography-alignJustify",
                                                          "alignLeft": "MuiTypography-alignLeft",
                                                          "alignRight": "MuiTypography-alignRight",
                                                          "body1": "MuiTypography-body1",
                                                          "body2": "MuiTypography-body2",
                                                          "button": "MuiTypography-button",
                                                          "caption": "MuiTypography-caption",
                                                          "colorError": "MuiTypography-colorError",
                                                          "colorInherit": "MuiTypography-colorInherit",
                                                          "colorPrimary": "MuiTypography-colorPrimary",
                                                          "colorSecondary": "MuiTypography-colorSecondary",
                                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                          "displayBlock": "MuiTypography-displayBlock",
                                                          "displayInline": "MuiTypography-displayInline",
                                                          "gutterBottom": "MuiTypography-gutterBottom",
                                                          "h1": "MuiTypography-h1",
                                                          "h2": "MuiTypography-h2",
                                                          "h3": "MuiTypography-h3",
                                                          "h4": "MuiTypography-h4",
                                                          "h5": "MuiTypography-h5",
                                                          "h6": "MuiTypography-h6",
                                                          "noWrap": "MuiTypography-noWrap",
                                                          "overline": "MuiTypography-overline",
                                                          "paragraph": "MuiTypography-paragraph",
                                                          "root": "MuiTypography-root",
                                                          "srOnly": "MuiTypography-srOnly",
                                                          "subtitle1": "MuiTypography-subtitle1",
                                                          "subtitle2": "MuiTypography-subtitle2",
                                                        }
                                                      }
                                                      gutterBottom={true}
                                                      variant="h5"
                                                    >
                                                      <h5
                                                        className="MuiTypography-root makeStyles-title-112 makeStyles-blackLogo-116 MuiTypography-h5 MuiTypography-gutterBottom"
                                                      >
                                                        CinderBlox
                                                      </h5>
                                                    </ForwardRef(Typography)>
                                                  </WithStyles(ForwardRef(Typography))>
                                                </a>
                                              </Link>
                                            </ForwardRef(NextComposed)>
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </ForwardRef(Link)>
                                    </WithStyles(ForwardRef(Link))>
                                  </BaseLink>
                                </ForwardRef>
                              </Link>
                            </ClickableLogo>
                            <Link
                              external={true}
                              href="https://github.com/Jmeza081"
                              underline="none"
                              variant="wrapper"
                            >
                              <a
                                className="makeStyles-wrapping-link-122"
                                href="https://github.com/Jmeza081"
                                underline="none"
                              >
                                <DevelopedByInfo>
                                  <div
                                    className="makeStyles-root-159"
                                  >
                                    <Avatar
                                      alt="Developer: Jesse Meza"
                                      imgSize="medium"
                                      src="/img/author_avatar.jpg"
                                      toolTipText="See more works by Jesse"
                                    >
                                      <Tooltip
                                        arrow={true}
                                        title="See more works by Jesse"
                                      >
                                        <WithStyles(ForwardRef(Tooltip))
                                          arrow={true}
                                          classes={
                                            Object {
                                              "arrow": "makeStyles-arrow-166",
                                              "tooltip": "makeStyles-tooltip-165",
                                            }
                                          }
                                          title="See more works by Jesse"
                                        >
                                          <ForwardRef(Tooltip)
                                            arrow={true}
                                            classes={
                                              Object {
                                                "arrow": "MuiTooltip-arrow makeStyles-arrow-166",
                                                "popper": "MuiTooltip-popper",
                                                "popperArrow": "MuiTooltip-popperArrow",
                                                "popperInteractive": "MuiTooltip-popperInteractive",
                                                "tooltip": "MuiTooltip-tooltip makeStyles-tooltip-165",
                                                "tooltipArrow": "MuiTooltip-tooltipArrow",
                                                "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                                "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                                "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                                "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                                "touch": "MuiTooltip-touch",
                                              }
                                            }
                                            title="See more works by Jesse"
                                          >
                                            <div
                                              aria-describedby={null}
                                              className=""
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseOver={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchStart={[Function]}
                                              title="See more works by Jesse"
                                            >
                                              <WithStyles(ForwardRef(Avatar))
                                                alt="Developer: Jesse Meza"
                                                className="makeStyles-medium-163"
                                                src="/img/author_avatar.jpg"
                                              >
                                                <ForwardRef(Avatar)
                                                  alt="Developer: Jesse Meza"
                                                  className="makeStyles-medium-163"
                                                  classes={
                                                    Object {
                                                      "circle": "MuiAvatar-circle",
                                                      "colorDefault": "MuiAvatar-colorDefault",
                                                      "fallback": "MuiAvatar-fallback",
                                                      "img": "MuiAvatar-img",
                                                      "root": "MuiAvatar-root",
                                                      "rounded": "MuiAvatar-rounded",
                                                      "square": "MuiAvatar-square",
                                                    }
                                                  }
                                                  src="/img/author_avatar.jpg"
                                                >
                                                  <div
                                                    className="MuiAvatar-root MuiAvatar-circle makeStyles-medium-163"
                                                  >
                                                    <img
                                                      alt="Developer: Jesse Meza"
                                                      className="MuiAvatar-img"
                                                      src="/img/author_avatar.jpg"
                                                    />
                                                  </div>
                                                </ForwardRef(Avatar)>
                                              </WithStyles(ForwardRef(Avatar))>
                                            </div>
                                            <ForwardRef(Popper)
                                              anchorEl={
                                                <div
                                                  class=""
                                                  title="See more works by Jesse"
                                                >
                                                  <div
                                                    class="MuiAvatar-root MuiAvatar-circle makeStyles-medium-163"
                                                  >
                                                    <img
                                                      alt="Developer: Jesse Meza"
                                                      class="MuiAvatar-img"
                                                      src="/img/author_avatar.jpg"
                                                    />
                                                  </div>
                                                </div>
                                              }
                                              className="MuiTooltip-popper MuiTooltip-popperArrow"
                                              id={null}
                                              open={false}
                                              placement="bottom"
                                              popperOptions={
                                                Object {
                                                  "modifiers": Object {
                                                    "arrow": Object {
                                                      "element": null,
                                                      "enabled": false,
                                                    },
                                                  },
                                                }
                                              }
                                              transition={true}
                                            />
                                          </ForwardRef(Tooltip)>
                                        </WithStyles(ForwardRef(Tooltip))>
                                      </Tooltip>
                                    </Avatar>
                                    <WithStyles(ForwardRef(Typography))
                                      className="makeStyles-developerText-160"
                                      component="span"
                                      variant="body1"
                                    >
                                      <ForwardRef(Typography)
                                        className="makeStyles-developerText-160"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter",
                                            "alignJustify": "MuiTypography-alignJustify",
                                            "alignLeft": "MuiTypography-alignLeft",
                                            "alignRight": "MuiTypography-alignRight",
                                            "body1": "MuiTypography-body1",
                                            "body2": "MuiTypography-body2",
                                            "button": "MuiTypography-button",
                                            "caption": "MuiTypography-caption",
                                            "colorError": "MuiTypography-colorError",
                                            "colorInherit": "MuiTypography-colorInherit",
                                            "colorPrimary": "MuiTypography-colorPrimary",
                                            "colorSecondary": "MuiTypography-colorSecondary",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                            "displayBlock": "MuiTypography-displayBlock",
                                            "displayInline": "MuiTypography-displayInline",
                                            "gutterBottom": "MuiTypography-gutterBottom",
                                            "h1": "MuiTypography-h1",
                                            "h2": "MuiTypography-h2",
                                            "h3": "MuiTypography-h3",
                                            "h4": "MuiTypography-h4",
                                            "h5": "MuiTypography-h5",
                                            "h6": "MuiTypography-h6",
                                            "noWrap": "MuiTypography-noWrap",
                                            "overline": "MuiTypography-overline",
                                            "paragraph": "MuiTypography-paragraph",
                                            "root": "MuiTypography-root",
                                            "srOnly": "MuiTypography-srOnly",
                                            "subtitle1": "MuiTypography-subtitle1",
                                            "subtitle2": "MuiTypography-subtitle2",
                                          }
                                        }
                                        component="span"
                                        variant="body1"
                                      >
                                        <span
                                          className="MuiTypography-root makeStyles-developerText-160 MuiTypography-body1"
                                        >
                                          Developed by
                                           
                                          <WithStyles(ForwardRef(Typography))
                                            color="primary"
                                            display="inline"
                                            variant="body1"
                                          >
                                            <ForwardRef(Typography)
                                              classes={
                                                Object {
                                                  "alignCenter": "MuiTypography-alignCenter",
                                                  "alignJustify": "MuiTypography-alignJustify",
                                                  "alignLeft": "MuiTypography-alignLeft",
                                                  "alignRight": "MuiTypography-alignRight",
                                                  "body1": "MuiTypography-body1",
                                                  "body2": "MuiTypography-body2",
                                                  "button": "MuiTypography-button",
                                                  "caption": "MuiTypography-caption",
                                                  "colorError": "MuiTypography-colorError",
                                                  "colorInherit": "MuiTypography-colorInherit",
                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                  "displayBlock": "MuiTypography-displayBlock",
                                                  "displayInline": "MuiTypography-displayInline",
                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                  "h1": "MuiTypography-h1",
                                                  "h2": "MuiTypography-h2",
                                                  "h3": "MuiTypography-h3",
                                                  "h4": "MuiTypography-h4",
                                                  "h5": "MuiTypography-h5",
                                                  "h6": "MuiTypography-h6",
                                                  "noWrap": "MuiTypography-noWrap",
                                                  "overline": "MuiTypography-overline",
                                                  "paragraph": "MuiTypography-paragraph",
                                                  "root": "MuiTypography-root",
                                                  "srOnly": "MuiTypography-srOnly",
                                                  "subtitle1": "MuiTypography-subtitle1",
                                                  "subtitle2": "MuiTypography-subtitle2",
                                                }
                                              }
                                              color="primary"
                                              display="inline"
                                              variant="body1"
                                            >
                                              <p
                                                className="MuiTypography-root MuiTypography-body1 MuiTypography-colorPrimary MuiTypography-displayInline"
                                              >
                                                Jesse Meza
                                              </p>
                                            </ForwardRef(Typography)>
                                          </WithStyles(ForwardRef(Typography))>
                                        </span>
                                      </ForwardRef(Typography)>
                                    </WithStyles(ForwardRef(Typography))>
                                  </div>
                                </DevelopedByInfo>
                              </a>
                            </Link>
                          </div>
                        </ForwardRef(Grid)>
                      </WithStyles(ForwardRef(Grid))>
                    </GridItem>
                    <GridItem
                      className="makeStyles-flexRow-5"
                      md={8}
                      xs={12}
                    >
                      <WithStyles(ForwardRef(Grid))
                        className="makeStyles-flexRow-5"
                        item={true}
                        md={8}
                        xs={12}
                      >
                        <ForwardRef(Grid)
                          className="makeStyles-flexRow-5"
                          classes={
                            Object {
                              "align-content-xs-center": "MuiGrid-align-content-xs-center",
                              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                              "align-items-xs-center": "MuiGrid-align-items-xs-center",
                              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                              "container": "MuiGrid-container",
                              "direction-xs-column": "MuiGrid-direction-xs-column",
                              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                              "grid-lg-1": "MuiGrid-grid-lg-1",
                              "grid-lg-10": "MuiGrid-grid-lg-10",
                              "grid-lg-11": "MuiGrid-grid-lg-11",
                              "grid-lg-12": "MuiGrid-grid-lg-12",
                              "grid-lg-2": "MuiGrid-grid-lg-2",
                              "grid-lg-3": "MuiGrid-grid-lg-3",
                              "grid-lg-4": "MuiGrid-grid-lg-4",
                              "grid-lg-5": "MuiGrid-grid-lg-5",
                              "grid-lg-6": "MuiGrid-grid-lg-6",
                              "grid-lg-7": "MuiGrid-grid-lg-7",
                              "grid-lg-8": "MuiGrid-grid-lg-8",
                              "grid-lg-9": "MuiGrid-grid-lg-9",
                              "grid-lg-auto": "MuiGrid-grid-lg-auto",
                              "grid-lg-true": "MuiGrid-grid-lg-true",
                              "grid-md-1": "MuiGrid-grid-md-1",
                              "grid-md-10": "MuiGrid-grid-md-10",
                              "grid-md-11": "MuiGrid-grid-md-11",
                              "grid-md-12": "MuiGrid-grid-md-12",
                              "grid-md-2": "MuiGrid-grid-md-2",
                              "grid-md-3": "MuiGrid-grid-md-3",
                              "grid-md-4": "MuiGrid-grid-md-4",
                              "grid-md-5": "MuiGrid-grid-md-5",
                              "grid-md-6": "MuiGrid-grid-md-6",
                              "grid-md-7": "MuiGrid-grid-md-7",
                              "grid-md-8": "MuiGrid-grid-md-8",
                              "grid-md-9": "MuiGrid-grid-md-9",
                              "grid-md-auto": "MuiGrid-grid-md-auto",
                              "grid-md-true": "MuiGrid-grid-md-true",
                              "grid-sm-1": "MuiGrid-grid-sm-1",
                              "grid-sm-10": "MuiGrid-grid-sm-10",
                              "grid-sm-11": "MuiGrid-grid-sm-11",
                              "grid-sm-12": "MuiGrid-grid-sm-12",
                              "grid-sm-2": "MuiGrid-grid-sm-2",
                              "grid-sm-3": "MuiGrid-grid-sm-3",
                              "grid-sm-4": "MuiGrid-grid-sm-4",
                              "grid-sm-5": "MuiGrid-grid-sm-5",
                              "grid-sm-6": "MuiGrid-grid-sm-6",
                              "grid-sm-7": "MuiGrid-grid-sm-7",
                              "grid-sm-8": "MuiGrid-grid-sm-8",
                              "grid-sm-9": "MuiGrid-grid-sm-9",
                              "grid-sm-auto": "MuiGrid-grid-sm-auto",
                              "grid-sm-true": "MuiGrid-grid-sm-true",
                              "grid-xl-1": "MuiGrid-grid-xl-1",
                              "grid-xl-10": "MuiGrid-grid-xl-10",
                              "grid-xl-11": "MuiGrid-grid-xl-11",
                              "grid-xl-12": "MuiGrid-grid-xl-12",
                              "grid-xl-2": "MuiGrid-grid-xl-2",
                              "grid-xl-3": "MuiGrid-grid-xl-3",
                              "grid-xl-4": "MuiGrid-grid-xl-4",
                              "grid-xl-5": "MuiGrid-grid-xl-5",
                              "grid-xl-6": "MuiGrid-grid-xl-6",
                              "grid-xl-7": "MuiGrid-grid-xl-7",
                              "grid-xl-8": "MuiGrid-grid-xl-8",
                              "grid-xl-9": "MuiGrid-grid-xl-9",
                              "grid-xl-auto": "MuiGrid-grid-xl-auto",
                              "grid-xl-true": "MuiGrid-grid-xl-true",
                              "grid-xs-1": "MuiGrid-grid-xs-1",
                              "grid-xs-10": "MuiGrid-grid-xs-10",
                              "grid-xs-11": "MuiGrid-grid-xs-11",
                              "grid-xs-12": "MuiGrid-grid-xs-12",
                              "grid-xs-2": "MuiGrid-grid-xs-2",
                              "grid-xs-3": "MuiGrid-grid-xs-3",
                              "grid-xs-4": "MuiGrid-grid-xs-4",
                              "grid-xs-5": "MuiGrid-grid-xs-5",
                              "grid-xs-6": "MuiGrid-grid-xs-6",
                              "grid-xs-7": "MuiGrid-grid-xs-7",
                              "grid-xs-8": "MuiGrid-grid-xs-8",
                              "grid-xs-9": "MuiGrid-grid-xs-9",
                              "grid-xs-auto": "MuiGrid-grid-xs-auto",
                              "grid-xs-true": "MuiGrid-grid-xs-true",
                              "item": "MuiGrid-item",
                              "justify-xs-center": "MuiGrid-justify-xs-center",
                              "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                              "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                              "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                              "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                              "root": "MuiGrid-root",
                              "spacing-xs-1": "MuiGrid-spacing-xs-1",
                              "spacing-xs-10": "MuiGrid-spacing-xs-10",
                              "spacing-xs-2": "MuiGrid-spacing-xs-2",
                              "spacing-xs-3": "MuiGrid-spacing-xs-3",
                              "spacing-xs-4": "MuiGrid-spacing-xs-4",
                              "spacing-xs-5": "MuiGrid-spacing-xs-5",
                              "spacing-xs-6": "MuiGrid-spacing-xs-6",
                              "spacing-xs-7": "MuiGrid-spacing-xs-7",
                              "spacing-xs-8": "MuiGrid-spacing-xs-8",
                              "spacing-xs-9": "MuiGrid-spacing-xs-9",
                              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                              "zeroMinWidth": "MuiGrid-zeroMinWidth",
                            }
                          }
                          item={true}
                          md={8}
                          xs={12}
                        >
                          <div
                            className="MuiGrid-root makeStyles-flexRow-5 MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-8"
                          >
                            <div
                              className="makeStyles-linkGroupItemContainer-4"
                            >
                              <FooterLinkGroup
                                groupHeader="Users"
                                links={
                                  Array [
                                    Object {
                                      "displayText": "App",
                                      "href": "/color-studio",
                                      "icon": <Server
                                        color="white"
                                      />,
                                    },
                                    Object {
                                      "displayText": "Releases",
                                      "external": true,
                                      "href": "https://headwayapp.co/cinderblox-studio-release-notes",
                                      "icon": <Package
                                        color="white"
                                      />,
                                    },
                                  ]
                                }
                              >
                                <div
                                  className="makeStyles-root-185"
                                >
                                  <Typography
                                    variant="subtitle1"
                                  >
                                    <WithStyles(ForwardRef(Typography))
                                      classes={
                                        Object {
                                          "colorTextPrimary": "makeStyles-colorTextPrimary-187",
                                          "colorTextSecondary": "makeStyles-colorTextSecondary-188",
                                        }
                                      }
                                      variant="subtitle1"
                                    >
                                      <ForwardRef(Typography)
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter",
                                            "alignJustify": "MuiTypography-alignJustify",
                                            "alignLeft": "MuiTypography-alignLeft",
                                            "alignRight": "MuiTypography-alignRight",
                                            "body1": "MuiTypography-body1",
                                            "body2": "MuiTypography-body2",
                                            "button": "MuiTypography-button",
                                            "caption": "MuiTypography-caption",
                                            "colorError": "MuiTypography-colorError",
                                            "colorInherit": "MuiTypography-colorInherit",
                                            "colorPrimary": "MuiTypography-colorPrimary",
                                            "colorSecondary": "MuiTypography-colorSecondary",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary makeStyles-colorTextPrimary-187",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary makeStyles-colorTextSecondary-188",
                                            "displayBlock": "MuiTypography-displayBlock",
                                            "displayInline": "MuiTypography-displayInline",
                                            "gutterBottom": "MuiTypography-gutterBottom",
                                            "h1": "MuiTypography-h1",
                                            "h2": "MuiTypography-h2",
                                            "h3": "MuiTypography-h3",
                                            "h4": "MuiTypography-h4",
                                            "h5": "MuiTypography-h5",
                                            "h6": "MuiTypography-h6",
                                            "noWrap": "MuiTypography-noWrap",
                                            "overline": "MuiTypography-overline",
                                            "paragraph": "MuiTypography-paragraph",
                                            "root": "MuiTypography-root",
                                            "srOnly": "MuiTypography-srOnly",
                                            "subtitle1": "MuiTypography-subtitle1",
                                            "subtitle2": "MuiTypography-subtitle2",
                                          }
                                        }
                                        variant="subtitle1"
                                      >
                                        <h6
                                          className="MuiTypography-root MuiTypography-subtitle1"
                                        >
                                          Users
                                        </h6>
                                      </ForwardRef(Typography)>
                                    </WithStyles(ForwardRef(Typography))>
                                  </Typography>
                                  <div
                                    className="makeStyles-linkContainer-186"
                                    key="footer-link-App"
                                  >
                                    <Link
                                      external={false}
                                      href="/color-studio"
                                      icon={
                                        <Server
                                          color="white"
                                        />
                                      }
                                      key="footer-link-App"
                                      variant="footer"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        className="makeStyles-footer-link-119"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "render": [Function],
                                          }
                                        }
                                        href="/color-studio"
                                        icon={
                                          <Server
                                            color="white"
                                          />
                                        }
                                        variant="body1"
                                      >
                                        <ForwardRef(Typography)
                                          className="makeStyles-footer-link-119"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "render": [Function],
                                            }
                                          }
                                          href="/color-studio"
                                          icon={
                                            <Server
                                              color="white"
                                            />
                                          }
                                          variant="body1"
                                        >
                                          <ForwardRef
                                            className="MuiTypography-root makeStyles-footer-link-119 MuiTypography-body1"
                                            href="/color-studio"
                                            icon={
                                              <Server
                                                color="white"
                                              />
                                            }
                                          >
                                            <BaseLink
                                              className="MuiTypography-root makeStyles-footer-link-119 MuiTypography-body1"
                                              href="/color-studio"
                                              icon={
                                                <Server
                                                  color="white"
                                                />
                                              }
                                              innerRef={null}
                                            >
                                              <WithStyles(ForwardRef(Link))
                                                className="MuiTypography-root makeStyles-footer-link-119 MuiTypography-body1"
                                                component={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "propTypes": Object {},
                                                    "render": [Function],
                                                  }
                                                }
                                                href="/color-studio"
                                                icon={
                                                  <Server
                                                    color="white"
                                                  />
                                                }
                                              >
                                                <ForwardRef(Link)
                                                  className="MuiTypography-root makeStyles-footer-link-119 MuiTypography-body1"
                                                  classes={
                                                    Object {
                                                      "button": "MuiLink-button",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "root": "MuiLink-root",
                                                      "underlineAlways": "MuiLink-underlineAlways",
                                                      "underlineHover": "MuiLink-underlineHover",
                                                      "underlineNone": "MuiLink-underlineNone",
                                                    }
                                                  }
                                                  component={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "propTypes": Object {},
                                                      "render": [Function],
                                                    }
                                                  }
                                                  href="/color-studio"
                                                  icon={
                                                    <Server
                                                      color="white"
                                                    />
                                                  }
                                                >
                                                  <WithStyles(ForwardRef(Typography))
                                                    className="MuiLink-root MuiLink-underlineHover MuiTypography-root makeStyles-footer-link-119 MuiTypography-body1"
                                                    color="primary"
                                                    component={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "propTypes": Object {},
                                                        "render": [Function],
                                                      }
                                                    }
                                                    href="/color-studio"
                                                    icon={
                                                      <Server
                                                        color="white"
                                                      />
                                                    }
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    variant="inherit"
                                                  >
                                                    <ForwardRef(Typography)
                                                      className="MuiLink-root MuiLink-underlineHover MuiTypography-root makeStyles-footer-link-119 MuiTypography-body1"
                                                      classes={
                                                        Object {
                                                          "alignCenter": "MuiTypography-alignCenter",
                                                          "alignJustify": "MuiTypography-alignJustify",
                                                          "alignLeft": "MuiTypography-alignLeft",
                                                          "alignRight": "MuiTypography-alignRight",
                                                          "body1": "MuiTypography-body1",
                                                          "body2": "MuiTypography-body2",
                                                          "button": "MuiTypography-button",
                                                          "caption": "MuiTypography-caption",
                                                          "colorError": "MuiTypography-colorError",
                                                          "colorInherit": "MuiTypography-colorInherit",
                                                          "colorPrimary": "MuiTypography-colorPrimary",
                                                          "colorSecondary": "MuiTypography-colorSecondary",
                                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                          "displayBlock": "MuiTypography-displayBlock",
                                                          "displayInline": "MuiTypography-displayInline",
                                                          "gutterBottom": "MuiTypography-gutterBottom",
                                                          "h1": "MuiTypography-h1",
                                                          "h2": "MuiTypography-h2",
                                                          "h3": "MuiTypography-h3",
                                                          "h4": "MuiTypography-h4",
                                                          "h5": "MuiTypography-h5",
                                                          "h6": "MuiTypography-h6",
                                                          "noWrap": "MuiTypography-noWrap",
                                                          "overline": "MuiTypography-overline",
                                                          "paragraph": "MuiTypography-paragraph",
                                                          "root": "MuiTypography-root",
                                                          "srOnly": "MuiTypography-srOnly",
                                                          "subtitle1": "MuiTypography-subtitle1",
                                                          "subtitle2": "MuiTypography-subtitle2",
                                                        }
                                                      }
                                                      color="primary"
                                                      component={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "propTypes": Object {},
                                                          "render": [Function],
                                                        }
                                                      }
                                                      href="/color-studio"
                                                      icon={
                                                        <Server
                                                          color="white"
                                                        />
                                                      }
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      variant="inherit"
                                                    >
                                                      <ForwardRef(NextComposed)
                                                        className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-root makeStyles-footer-link-119 MuiTypography-body1 MuiTypography-colorPrimary"
                                                        href="/color-studio"
                                                        icon={
                                                          <Server
                                                            color="white"
                                                          />
                                                        }
                                                        onBlur={[Function]}
                                                        onFocus={[Function]}
                                                      >
                                                        <Link
                                                          href="/color-studio"
                                                        >
                                                          <a
                                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-root makeStyles-footer-link-119 MuiTypography-body1 MuiTypography-colorPrimary"
                                                            href="/color-studio"
                                                            icon={
                                                              <Server
                                                                color="white"
                                                              />
                                                            }
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onFocus={[Function]}
                                                            onMouseEnter={[Function]}
                                                          >
                                                            App
                                                          </a>
                                                        </Link>
                                                      </ForwardRef(NextComposed)>
                                                    </ForwardRef(Typography)>
                                                  </WithStyles(ForwardRef(Typography))>
                                                </ForwardRef(Link)>
                                              </WithStyles(ForwardRef(Link))>
                                            </BaseLink>
                                          </ForwardRef>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </Link>
                                  </div>
                                  <div
                                    className="makeStyles-linkContainer-186"
                                    key="footer-link-Releases"
                                  >
                                    <Link
                                      external={true}
                                      href="https://headwayapp.co/cinderblox-studio-release-notes"
                                      icon={
                                        <Package
                                          color="white"
                                        />
                                      }
                                      key="footer-link-Releases"
                                      variant="footer"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        className="makeStyles-footer-link-119"
                                        component="a"
                                        href="https://headwayapp.co/cinderblox-studio-release-notes"
                                        icon={
                                          <Package
                                            color="white"
                                          />
                                        }
                                        variant="body1"
                                      >
                                        <ForwardRef(Typography)
                                          className="makeStyles-footer-link-119"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          component="a"
                                          href="https://headwayapp.co/cinderblox-studio-release-notes"
                                          icon={
                                            <Package
                                              color="white"
                                            />
                                          }
                                          variant="body1"
                                        >
                                          <a
                                            className="MuiTypography-root makeStyles-footer-link-119 MuiTypography-body1"
                                            href="https://headwayapp.co/cinderblox-studio-release-notes"
                                            icon={
                                              <Package
                                                color="white"
                                              />
                                            }
                                          >
                                            Releases
                                          </a>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </Link>
                                  </div>
                                </div>
                              </FooterLinkGroup>
                            </div>
                            <div
                              className="makeStyles-linkGroupItemContainer-4"
                            >
                              <FooterLinkGroup
                                groupHeader="Developers"
                                links={
                                  Array [
                                    Object {
                                      "displayText": "API Docs",
                                      "external": true,
                                      "href": "https://google.com",
                                      "icon": <Book
                                        color="white"
                                      />,
                                    },
                                    Object {
                                      "displayText": "GitHub",
                                      "external": true,
                                      "href": "https://github.com/z-nith/cinderblox-studio",
                                      "icon": <GitHub
                                        color="white"
                                      />,
                                    },
                                  ]
                                }
                              >
                                <div
                                  className="makeStyles-root-185"
                                >
                                  <Typography
                                    variant="subtitle1"
                                  >
                                    <WithStyles(ForwardRef(Typography))
                                      classes={
                                        Object {
                                          "colorTextPrimary": "makeStyles-colorTextPrimary-187",
                                          "colorTextSecondary": "makeStyles-colorTextSecondary-188",
                                        }
                                      }
                                      variant="subtitle1"
                                    >
                                      <ForwardRef(Typography)
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter",
                                            "alignJustify": "MuiTypography-alignJustify",
                                            "alignLeft": "MuiTypography-alignLeft",
                                            "alignRight": "MuiTypography-alignRight",
                                            "body1": "MuiTypography-body1",
                                            "body2": "MuiTypography-body2",
                                            "button": "MuiTypography-button",
                                            "caption": "MuiTypography-caption",
                                            "colorError": "MuiTypography-colorError",
                                            "colorInherit": "MuiTypography-colorInherit",
                                            "colorPrimary": "MuiTypography-colorPrimary",
                                            "colorSecondary": "MuiTypography-colorSecondary",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary makeStyles-colorTextPrimary-187",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary makeStyles-colorTextSecondary-188",
                                            "displayBlock": "MuiTypography-displayBlock",
                                            "displayInline": "MuiTypography-displayInline",
                                            "gutterBottom": "MuiTypography-gutterBottom",
                                            "h1": "MuiTypography-h1",
                                            "h2": "MuiTypography-h2",
                                            "h3": "MuiTypography-h3",
                                            "h4": "MuiTypography-h4",
                                            "h5": "MuiTypography-h5",
                                            "h6": "MuiTypography-h6",
                                            "noWrap": "MuiTypography-noWrap",
                                            "overline": "MuiTypography-overline",
                                            "paragraph": "MuiTypography-paragraph",
                                            "root": "MuiTypography-root",
                                            "srOnly": "MuiTypography-srOnly",
                                            "subtitle1": "MuiTypography-subtitle1",
                                            "subtitle2": "MuiTypography-subtitle2",
                                          }
                                        }
                                        variant="subtitle1"
                                      >
                                        <h6
                                          className="MuiTypography-root MuiTypography-subtitle1"
                                        >
                                          Developers
                                        </h6>
                                      </ForwardRef(Typography)>
                                    </WithStyles(ForwardRef(Typography))>
                                  </Typography>
                                  <div
                                    className="makeStyles-linkContainer-186"
                                    key="footer-link-APIDocs"
                                  >
                                    <Link
                                      external={true}
                                      href="https://google.com"
                                      icon={
                                        <Book
                                          color="white"
                                        />
                                      }
                                      key="footer-link-API Docs"
                                      variant="footer"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        className="makeStyles-footer-link-119"
                                        component="a"
                                        href="https://google.com"
                                        icon={
                                          <Book
                                            color="white"
                                          />
                                        }
                                        variant="body1"
                                      >
                                        <ForwardRef(Typography)
                                          className="makeStyles-footer-link-119"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          component="a"
                                          href="https://google.com"
                                          icon={
                                            <Book
                                              color="white"
                                            />
                                          }
                                          variant="body1"
                                        >
                                          <a
                                            className="MuiTypography-root makeStyles-footer-link-119 MuiTypography-body1"
                                            href="https://google.com"
                                            icon={
                                              <Book
                                                color="white"
                                              />
                                            }
                                          >
                                            API Docs
                                          </a>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </Link>
                                  </div>
                                  <div
                                    className="makeStyles-linkContainer-186"
                                    key="footer-link-GitHub"
                                  >
                                    <Link
                                      external={true}
                                      href="https://github.com/z-nith/cinderblox-studio"
                                      icon={
                                        <GitHub
                                          color="white"
                                        />
                                      }
                                      key="footer-link-GitHub"
                                      variant="footer"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        className="makeStyles-footer-link-119"
                                        component="a"
                                        href="https://github.com/z-nith/cinderblox-studio"
                                        icon={
                                          <GitHub
                                            color="white"
                                          />
                                        }
                                        variant="body1"
                                      >
                                        <ForwardRef(Typography)
                                          className="makeStyles-footer-link-119"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          component="a"
                                          href="https://github.com/z-nith/cinderblox-studio"
                                          icon={
                                            <GitHub
                                              color="white"
                                            />
                                          }
                                          variant="body1"
                                        >
                                          <a
                                            className="MuiTypography-root makeStyles-footer-link-119 MuiTypography-body1"
                                            href="https://github.com/z-nith/cinderblox-studio"
                                            icon={
                                              <GitHub
                                                color="white"
                                              />
                                            }
                                          >
                                            GitHub
                                          </a>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </Link>
                                  </div>
                                </div>
                              </FooterLinkGroup>
                            </div>
                            <div
                              className="makeStyles-linkGroupItemContainer-4"
                            >
                              <FooterLinkGroup
                                groupHeader="Legal"
                                links={
                                  Array [
                                    Object {
                                      "displayText": "Licenses",
                                      "href": "/licenses",
                                      "icon": <File
                                        color="white"
                                      />,
                                    },
                                    Object {
                                      "displayText": "Terms of use",
                                      "href": "/terms-of-use",
                                      "icon": <Info
                                        color="white"
                                      />,
                                    },
                                  ]
                                }
                              >
                                <div
                                  className="makeStyles-root-185"
                                >
                                  <Typography
                                    variant="subtitle1"
                                  >
                                    <WithStyles(ForwardRef(Typography))
                                      classes={
                                        Object {
                                          "colorTextPrimary": "makeStyles-colorTextPrimary-187",
                                          "colorTextSecondary": "makeStyles-colorTextSecondary-188",
                                        }
                                      }
                                      variant="subtitle1"
                                    >
                                      <ForwardRef(Typography)
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter",
                                            "alignJustify": "MuiTypography-alignJustify",
                                            "alignLeft": "MuiTypography-alignLeft",
                                            "alignRight": "MuiTypography-alignRight",
                                            "body1": "MuiTypography-body1",
                                            "body2": "MuiTypography-body2",
                                            "button": "MuiTypography-button",
                                            "caption": "MuiTypography-caption",
                                            "colorError": "MuiTypography-colorError",
                                            "colorInherit": "MuiTypography-colorInherit",
                                            "colorPrimary": "MuiTypography-colorPrimary",
                                            "colorSecondary": "MuiTypography-colorSecondary",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary makeStyles-colorTextPrimary-187",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary makeStyles-colorTextSecondary-188",
                                            "displayBlock": "MuiTypography-displayBlock",
                                            "displayInline": "MuiTypography-displayInline",
                                            "gutterBottom": "MuiTypography-gutterBottom",
                                            "h1": "MuiTypography-h1",
                                            "h2": "MuiTypography-h2",
                                            "h3": "MuiTypography-h3",
                                            "h4": "MuiTypography-h4",
                                            "h5": "MuiTypography-h5",
                                            "h6": "MuiTypography-h6",
                                            "noWrap": "MuiTypography-noWrap",
                                            "overline": "MuiTypography-overline",
                                            "paragraph": "MuiTypography-paragraph",
                                            "root": "MuiTypography-root",
                                            "srOnly": "MuiTypography-srOnly",
                                            "subtitle1": "MuiTypography-subtitle1",
                                            "subtitle2": "MuiTypography-subtitle2",
                                          }
                                        }
                                        variant="subtitle1"
                                      >
                                        <h6
                                          className="MuiTypography-root MuiTypography-subtitle1"
                                        >
                                          Legal
                                        </h6>
                                      </ForwardRef(Typography)>
                                    </WithStyles(ForwardRef(Typography))>
                                  </Typography>
                                  <div
                                    className="makeStyles-linkContainer-186"
                                    key="footer-link-Licenses"
                                  >
                                    <Link
                                      external={false}
                                      href="/licenses"
                                      icon={
                                        <File
                                          color="white"
                                        />
                                      }
                                      key="footer-link-Licenses"
                                      variant="footer"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        className="makeStyles-footer-link-119"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "render": [Function],
                                          }
                                        }
                                        href="/licenses"
                                        icon={
                                          <File
                                            color="white"
                                          />
                                        }
                                        variant="body1"
                                      >
                                        <ForwardRef(Typography)
                                          className="makeStyles-footer-link-119"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "render": [Function],
                                            }
                                          }
                                          href="/licenses"
                                          icon={
                                            <File
                                              color="white"
                                            />
                                          }
                                          variant="body1"
                                        >
                                          <ForwardRef
                                            className="MuiTypography-root makeStyles-footer-link-119 MuiTypography-body1"
                                            href="/licenses"
                                            icon={
                                              <File
                                                color="white"
                                              />
                                            }
                                          >
                                            <BaseLink
                                              className="MuiTypography-root makeStyles-footer-link-119 MuiTypography-body1"
                                              href="/licenses"
                                              icon={
                                                <File
                                                  color="white"
                                                />
                                              }
                                              innerRef={null}
                                            >
                                              <WithStyles(ForwardRef(Link))
                                                className="MuiTypography-root makeStyles-footer-link-119 MuiTypography-body1"
                                                component={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "propTypes": Object {},
                                                    "render": [Function],
                                                  }
                                                }
                                                href="/licenses"
                                                icon={
                                                  <File
                                                    color="white"
                                                  />
                                                }
                                              >
                                                <ForwardRef(Link)
                                                  className="MuiTypography-root makeStyles-footer-link-119 MuiTypography-body1"
                                                  classes={
                                                    Object {
                                                      "button": "MuiLink-button",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "root": "MuiLink-root",
                                                      "underlineAlways": "MuiLink-underlineAlways",
                                                      "underlineHover": "MuiLink-underlineHover",
                                                      "underlineNone": "MuiLink-underlineNone",
                                                    }
                                                  }
                                                  component={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "propTypes": Object {},
                                                      "render": [Function],
                                                    }
                                                  }
                                                  href="/licenses"
                                                  icon={
                                                    <File
                                                      color="white"
                                                    />
                                                  }
                                                >
                                                  <WithStyles(ForwardRef(Typography))
                                                    className="MuiLink-root MuiLink-underlineHover MuiTypography-root makeStyles-footer-link-119 MuiTypography-body1"
                                                    color="primary"
                                                    component={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "propTypes": Object {},
                                                        "render": [Function],
                                                      }
                                                    }
                                                    href="/licenses"
                                                    icon={
                                                      <File
                                                        color="white"
                                                      />
                                                    }
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    variant="inherit"
                                                  >
                                                    <ForwardRef(Typography)
                                                      className="MuiLink-root MuiLink-underlineHover MuiTypography-root makeStyles-footer-link-119 MuiTypography-body1"
                                                      classes={
                                                        Object {
                                                          "alignCenter": "MuiTypography-alignCenter",
                                                          "alignJustify": "MuiTypography-alignJustify",
                                                          "alignLeft": "MuiTypography-alignLeft",
                                                          "alignRight": "MuiTypography-alignRight",
                                                          "body1": "MuiTypography-body1",
                                                          "body2": "MuiTypography-body2",
                                                          "button": "MuiTypography-button",
                                                          "caption": "MuiTypography-caption",
                                                          "colorError": "MuiTypography-colorError",
                                                          "colorInherit": "MuiTypography-colorInherit",
                                                          "colorPrimary": "MuiTypography-colorPrimary",
                                                          "colorSecondary": "MuiTypography-colorSecondary",
                                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                          "displayBlock": "MuiTypography-displayBlock",
                                                          "displayInline": "MuiTypography-displayInline",
                                                          "gutterBottom": "MuiTypography-gutterBottom",
                                                          "h1": "MuiTypography-h1",
                                                          "h2": "MuiTypography-h2",
                                                          "h3": "MuiTypography-h3",
                                                          "h4": "MuiTypography-h4",
                                                          "h5": "MuiTypography-h5",
                                                          "h6": "MuiTypography-h6",
                                                          "noWrap": "MuiTypography-noWrap",
                                                          "overline": "MuiTypography-overline",
                                                          "paragraph": "MuiTypography-paragraph",
                                                          "root": "MuiTypography-root",
                                                          "srOnly": "MuiTypography-srOnly",
                                                          "subtitle1": "MuiTypography-subtitle1",
                                                          "subtitle2": "MuiTypography-subtitle2",
                                                        }
                                                      }
                                                      color="primary"
                                                      component={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "propTypes": Object {},
                                                          "render": [Function],
                                                        }
                                                      }
                                                      href="/licenses"
                                                      icon={
                                                        <File
                                                          color="white"
                                                        />
                                                      }
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      variant="inherit"
                                                    >
                                                      <ForwardRef(NextComposed)
                                                        className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-root makeStyles-footer-link-119 MuiTypography-body1 MuiTypography-colorPrimary"
                                                        href="/licenses"
                                                        icon={
                                                          <File
                                                            color="white"
                                                          />
                                                        }
                                                        onBlur={[Function]}
                                                        onFocus={[Function]}
                                                      >
                                                        <Link
                                                          href="/licenses"
                                                        >
                                                          <a
                                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-root makeStyles-footer-link-119 MuiTypography-body1 MuiTypography-colorPrimary"
                                                            href="/licenses"
                                                            icon={
                                                              <File
                                                                color="white"
                                                              />
                                                            }
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onFocus={[Function]}
                                                            onMouseEnter={[Function]}
                                                          >
                                                            Licenses
                                                          </a>
                                                        </Link>
                                                      </ForwardRef(NextComposed)>
                                                    </ForwardRef(Typography)>
                                                  </WithStyles(ForwardRef(Typography))>
                                                </ForwardRef(Link)>
                                              </WithStyles(ForwardRef(Link))>
                                            </BaseLink>
                                          </ForwardRef>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </Link>
                                  </div>
                                  <div
                                    className="makeStyles-linkContainer-186"
                                    key="footer-link-Termsof use"
                                  >
                                    <Link
                                      external={false}
                                      href="/terms-of-use"
                                      icon={
                                        <Info
                                          color="white"
                                        />
                                      }
                                      key="footer-link-Terms of use"
                                      variant="footer"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        className="makeStyles-footer-link-119"
                                        component={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "render": [Function],
                                          }
                                        }
                                        href="/terms-of-use"
                                        icon={
                                          <Info
                                            color="white"
                                          />
                                        }
                                        variant="body1"
                                      >
                                        <ForwardRef(Typography)
                                          className="makeStyles-footer-link-119"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          component={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "render": [Function],
                                            }
                                          }
                                          href="/terms-of-use"
                                          icon={
                                            <Info
                                              color="white"
                                            />
                                          }
                                          variant="body1"
                                        >
                                          <ForwardRef
                                            className="MuiTypography-root makeStyles-footer-link-119 MuiTypography-body1"
                                            href="/terms-of-use"
                                            icon={
                                              <Info
                                                color="white"
                                              />
                                            }
                                          >
                                            <BaseLink
                                              className="MuiTypography-root makeStyles-footer-link-119 MuiTypography-body1"
                                              href="/terms-of-use"
                                              icon={
                                                <Info
                                                  color="white"
                                                />
                                              }
                                              innerRef={null}
                                            >
                                              <WithStyles(ForwardRef(Link))
                                                className="MuiTypography-root makeStyles-footer-link-119 MuiTypography-body1"
                                                component={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "propTypes": Object {},
                                                    "render": [Function],
                                                  }
                                                }
                                                href="/terms-of-use"
                                                icon={
                                                  <Info
                                                    color="white"
                                                  />
                                                }
                                              >
                                                <ForwardRef(Link)
                                                  className="MuiTypography-root makeStyles-footer-link-119 MuiTypography-body1"
                                                  classes={
                                                    Object {
                                                      "button": "MuiLink-button",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "root": "MuiLink-root",
                                                      "underlineAlways": "MuiLink-underlineAlways",
                                                      "underlineHover": "MuiLink-underlineHover",
                                                      "underlineNone": "MuiLink-underlineNone",
                                                    }
                                                  }
                                                  component={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "propTypes": Object {},
                                                      "render": [Function],
                                                    }
                                                  }
                                                  href="/terms-of-use"
                                                  icon={
                                                    <Info
                                                      color="white"
                                                    />
                                                  }
                                                >
                                                  <WithStyles(ForwardRef(Typography))
                                                    className="MuiLink-root MuiLink-underlineHover MuiTypography-root makeStyles-footer-link-119 MuiTypography-body1"
                                                    color="primary"
                                                    component={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "propTypes": Object {},
                                                        "render": [Function],
                                                      }
                                                    }
                                                    href="/terms-of-use"
                                                    icon={
                                                      <Info
                                                        color="white"
                                                      />
                                                    }
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    variant="inherit"
                                                  >
                                                    <ForwardRef(Typography)
                                                      className="MuiLink-root MuiLink-underlineHover MuiTypography-root makeStyles-footer-link-119 MuiTypography-body1"
                                                      classes={
                                                        Object {
                                                          "alignCenter": "MuiTypography-alignCenter",
                                                          "alignJustify": "MuiTypography-alignJustify",
                                                          "alignLeft": "MuiTypography-alignLeft",
                                                          "alignRight": "MuiTypography-alignRight",
                                                          "body1": "MuiTypography-body1",
                                                          "body2": "MuiTypography-body2",
                                                          "button": "MuiTypography-button",
                                                          "caption": "MuiTypography-caption",
                                                          "colorError": "MuiTypography-colorError",
                                                          "colorInherit": "MuiTypography-colorInherit",
                                                          "colorPrimary": "MuiTypography-colorPrimary",
                                                          "colorSecondary": "MuiTypography-colorSecondary",
                                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                          "displayBlock": "MuiTypography-displayBlock",
                                                          "displayInline": "MuiTypography-displayInline",
                                                          "gutterBottom": "MuiTypography-gutterBottom",
                                                          "h1": "MuiTypography-h1",
                                                          "h2": "MuiTypography-h2",
                                                          "h3": "MuiTypography-h3",
                                                          "h4": "MuiTypography-h4",
                                                          "h5": "MuiTypography-h5",
                                                          "h6": "MuiTypography-h6",
                                                          "noWrap": "MuiTypography-noWrap",
                                                          "overline": "MuiTypography-overline",
                                                          "paragraph": "MuiTypography-paragraph",
                                                          "root": "MuiTypography-root",
                                                          "srOnly": "MuiTypography-srOnly",
                                                          "subtitle1": "MuiTypography-subtitle1",
                                                          "subtitle2": "MuiTypography-subtitle2",
                                                        }
                                                      }
                                                      color="primary"
                                                      component={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "propTypes": Object {},
                                                          "render": [Function],
                                                        }
                                                      }
                                                      href="/terms-of-use"
                                                      icon={
                                                        <Info
                                                          color="white"
                                                        />
                                                      }
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      variant="inherit"
                                                    >
                                                      <ForwardRef(NextComposed)
                                                        className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-root makeStyles-footer-link-119 MuiTypography-body1 MuiTypography-colorPrimary"
                                                        href="/terms-of-use"
                                                        icon={
                                                          <Info
                                                            color="white"
                                                          />
                                                        }
                                                        onBlur={[Function]}
                                                        onFocus={[Function]}
                                                      >
                                                        <Link
                                                          href="/terms-of-use"
                                                        >
                                                          <a
                                                            className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-root makeStyles-footer-link-119 MuiTypography-body1 MuiTypography-colorPrimary"
                                                            href="/terms-of-use"
                                                            icon={
                                                              <Info
                                                                color="white"
                                                              />
                                                            }
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onFocus={[Function]}
                                                            onMouseEnter={[Function]}
                                                          >
                                                            Terms of use
                                                          </a>
                                                        </Link>
                                                      </ForwardRef(NextComposed)>
                                                    </ForwardRef(Typography)>
                                                  </WithStyles(ForwardRef(Typography))>
                                                </ForwardRef(Link)>
                                              </WithStyles(ForwardRef(Link))>
                                            </BaseLink>
                                          </ForwardRef>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </Link>
                                  </div>
                                </div>
                              </FooterLinkGroup>
                            </div>
                            <div
                              className="makeStyles-linkGroupItemContainer-4"
                            >
                              <FooterLinkGroup
                                groupHeader="Social"
                                links={
                                  Array [
                                    Object {
                                      "displayText": "GitHub",
                                      "external": true,
                                      "href": "https://github.com/z-nith/",
                                      "icon": <GitHub
                                        color="white"
                                      />,
                                    },
                                  ]
                                }
                              >
                                <div
                                  className="makeStyles-root-185"
                                >
                                  <Typography
                                    variant="subtitle1"
                                  >
                                    <WithStyles(ForwardRef(Typography))
                                      classes={
                                        Object {
                                          "colorTextPrimary": "makeStyles-colorTextPrimary-187",
                                          "colorTextSecondary": "makeStyles-colorTextSecondary-188",
                                        }
                                      }
                                      variant="subtitle1"
                                    >
                                      <ForwardRef(Typography)
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter",
                                            "alignJustify": "MuiTypography-alignJustify",
                                            "alignLeft": "MuiTypography-alignLeft",
                                            "alignRight": "MuiTypography-alignRight",
                                            "body1": "MuiTypography-body1",
                                            "body2": "MuiTypography-body2",
                                            "button": "MuiTypography-button",
                                            "caption": "MuiTypography-caption",
                                            "colorError": "MuiTypography-colorError",
                                            "colorInherit": "MuiTypography-colorInherit",
                                            "colorPrimary": "MuiTypography-colorPrimary",
                                            "colorSecondary": "MuiTypography-colorSecondary",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary makeStyles-colorTextPrimary-187",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary makeStyles-colorTextSecondary-188",
                                            "displayBlock": "MuiTypography-displayBlock",
                                            "displayInline": "MuiTypography-displayInline",
                                            "gutterBottom": "MuiTypography-gutterBottom",
                                            "h1": "MuiTypography-h1",
                                            "h2": "MuiTypography-h2",
                                            "h3": "MuiTypography-h3",
                                            "h4": "MuiTypography-h4",
                                            "h5": "MuiTypography-h5",
                                            "h6": "MuiTypography-h6",
                                            "noWrap": "MuiTypography-noWrap",
                                            "overline": "MuiTypography-overline",
                                            "paragraph": "MuiTypography-paragraph",
                                            "root": "MuiTypography-root",
                                            "srOnly": "MuiTypography-srOnly",
                                            "subtitle1": "MuiTypography-subtitle1",
                                            "subtitle2": "MuiTypography-subtitle2",
                                          }
                                        }
                                        variant="subtitle1"
                                      >
                                        <h6
                                          className="MuiTypography-root MuiTypography-subtitle1"
                                        >
                                          Social
                                        </h6>
                                      </ForwardRef(Typography)>
                                    </WithStyles(ForwardRef(Typography))>
                                  </Typography>
                                  <div
                                    className="makeStyles-linkContainer-186"
                                    key="footer-link-GitHub"
                                  >
                                    <Link
                                      external={true}
                                      href="https://github.com/z-nith/"
                                      icon={
                                        <GitHub
                                          color="white"
                                        />
                                      }
                                      key="footer-link-GitHub"
                                      variant="footer"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        className="makeStyles-footer-link-119"
                                        component="a"
                                        href="https://github.com/z-nith/"
                                        icon={
                                          <GitHub
                                            color="white"
                                          />
                                        }
                                        variant="body1"
                                      >
                                        <ForwardRef(Typography)
                                          className="makeStyles-footer-link-119"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          component="a"
                                          href="https://github.com/z-nith/"
                                          icon={
                                            <GitHub
                                              color="white"
                                            />
                                          }
                                          variant="body1"
                                        >
                                          <a
                                            className="MuiTypography-root makeStyles-footer-link-119 MuiTypography-body1"
                                            href="https://github.com/z-nith/"
                                            icon={
                                              <GitHub
                                                color="white"
                                              />
                                            }
                                          >
                                            GitHub
                                          </a>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </Link>
                                  </div>
                                </div>
                              </FooterLinkGroup>
                            </div>
                          </div>
                        </ForwardRef(Grid)>
                      </WithStyles(ForwardRef(Grid))>
                    </GridItem>
                  </div>
                </ForwardRef(Grid)>
              </WithStyles(ForwardRef(Grid))>
            </GridContainer>
          </div>
        </ContentMarginContainer>
        <div
          className="makeStyles-copyrightContainer-7"
        >
          <CopyrightNotice>
            <WithStyles(ForwardRef(Typography))
              className="makeStyles-copyrightText-189"
            >
              <ForwardRef(Typography)
                className="makeStyles-copyrightText-189"
                classes={
                  Object {
                    "alignCenter": "MuiTypography-alignCenter",
                    "alignJustify": "MuiTypography-alignJustify",
                    "alignLeft": "MuiTypography-alignLeft",
                    "alignRight": "MuiTypography-alignRight",
                    "body1": "MuiTypography-body1",
                    "body2": "MuiTypography-body2",
                    "button": "MuiTypography-button",
                    "caption": "MuiTypography-caption",
                    "colorError": "MuiTypography-colorError",
                    "colorInherit": "MuiTypography-colorInherit",
                    "colorPrimary": "MuiTypography-colorPrimary",
                    "colorSecondary": "MuiTypography-colorSecondary",
                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                    "displayBlock": "MuiTypography-displayBlock",
                    "displayInline": "MuiTypography-displayInline",
                    "gutterBottom": "MuiTypography-gutterBottom",
                    "h1": "MuiTypography-h1",
                    "h2": "MuiTypography-h2",
                    "h3": "MuiTypography-h3",
                    "h4": "MuiTypography-h4",
                    "h5": "MuiTypography-h5",
                    "h6": "MuiTypography-h6",
                    "noWrap": "MuiTypography-noWrap",
                    "overline": "MuiTypography-overline",
                    "paragraph": "MuiTypography-paragraph",
                    "root": "MuiTypography-root",
                    "srOnly": "MuiTypography-srOnly",
                    "subtitle1": "MuiTypography-subtitle1",
                    "subtitle2": "MuiTypography-subtitle2",
                  }
                }
              >
                <p
                  className="MuiTypography-root makeStyles-copyrightText-189 MuiTypography-body1"
                >
                  © CinderBlox 2020. All rights reserved.
                </p>
              </ForwardRef(Typography)>
            </WithStyles(ForwardRef(Typography))>
          </CopyrightNotice>
        </div>
      </footer>
    </Footer>
  </ThemeProvider>
</FooterWithTheme>
`;
