// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Link should render without error 1`] = `
<ForwardRef
  href="/"
>
  <BaseLink
    href="/"
    innerRef={null}
  >
    <WithStyles(ForwardRef(Link))
      className="active"
      component={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "propTypes": Object {},
          "render": [Function],
        }
      }
      href="/"
    >
      <ForwardRef(Link)
        className="active"
        classes={
          Object {
            "button": "MuiLink-button",
            "focusVisible": "Mui-focusVisible",
            "root": "MuiLink-root",
            "underlineAlways": "MuiLink-underlineAlways",
            "underlineHover": "MuiLink-underlineHover",
            "underlineNone": "MuiLink-underlineNone",
          }
        }
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "propTypes": Object {},
            "render": [Function],
          }
        }
        href="/"
      >
        <WithStyles(ForwardRef(Typography))
          className="MuiLink-root MuiLink-underlineHover active"
          color="primary"
          component={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "propTypes": Object {},
              "render": [Function],
            }
          }
          href="/"
          onBlur={[Function]}
          onFocus={[Function]}
          variant="inherit"
        >
          <ForwardRef(Typography)
            className="MuiLink-root MuiLink-underlineHover active"
            classes={
              Object {
                "alignCenter": "MuiTypography-alignCenter",
                "alignJustify": "MuiTypography-alignJustify",
                "alignLeft": "MuiTypography-alignLeft",
                "alignRight": "MuiTypography-alignRight",
                "body1": "MuiTypography-body1",
                "body2": "MuiTypography-body2",
                "button": "MuiTypography-button",
                "caption": "MuiTypography-caption",
                "colorError": "MuiTypography-colorError",
                "colorInherit": "MuiTypography-colorInherit",
                "colorPrimary": "MuiTypography-colorPrimary",
                "colorSecondary": "MuiTypography-colorSecondary",
                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                "displayBlock": "MuiTypography-displayBlock",
                "displayInline": "MuiTypography-displayInline",
                "gutterBottom": "MuiTypography-gutterBottom",
                "h1": "MuiTypography-h1",
                "h2": "MuiTypography-h2",
                "h3": "MuiTypography-h3",
                "h4": "MuiTypography-h4",
                "h5": "MuiTypography-h5",
                "h6": "MuiTypography-h6",
                "noWrap": "MuiTypography-noWrap",
                "overline": "MuiTypography-overline",
                "paragraph": "MuiTypography-paragraph",
                "root": "MuiTypography-root",
                "srOnly": "MuiTypography-srOnly",
                "subtitle1": "MuiTypography-subtitle1",
                "subtitle2": "MuiTypography-subtitle2",
              }
            }
            color="primary"
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {},
                "render": [Function],
              }
            }
            href="/"
            onBlur={[Function]}
            onFocus={[Function]}
            variant="inherit"
          >
            <ForwardRef(NextComposed)
              className="MuiTypography-root MuiLink-root MuiLink-underlineHover active MuiTypography-colorPrimary"
              href="/"
              onBlur={[Function]}
              onFocus={[Function]}
            >
              <Link
                href="/"
              >
                <a
                  className="MuiTypography-root MuiLink-root MuiLink-underlineHover active MuiTypography-colorPrimary"
                  href="/"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onMouseEnter={[Function]}
                >
                  Hello
                </a>
              </Link>
            </ForwardRef(NextComposed)>
          </ForwardRef(Typography)>
        </WithStyles(ForwardRef(Typography))>
      </ForwardRef(Link)>
    </WithStyles(ForwardRef(Link))>
  </BaseLink>
</ForwardRef>
`;
